[{"E:\\zm\\ThatYear\\gift-react\\src\\index.js":"1","E:\\zm\\ThatYear\\gift-react\\src\\reportWebVitals.js":"2","E:\\zm\\ThatYear\\gift-react\\src\\App.js":"3","E:\\zm\\ThatYear\\gift-react\\src\\components\\header.jsx":"4","E:\\zm\\ThatYear\\gift-react\\src\\pages\\routerConfig .jsx":"5","E:\\zm\\ThatYear\\gift-react\\src\\pages\\FrontendAuth.jsx":"6","E:\\zm\\ThatYear\\gift-react\\src\\components\\footer.jsx":"7","E:\\zm\\ThatYear\\gift-react\\src\\pages\\login\\index.jsx":"8","E:\\zm\\ThatYear\\gift-react\\src\\pages\\login\\register.jsx":"9","E:\\zm\\ThatYear\\gift-react\\src\\components\\sidebar.jsx":"10","E:\\zm\\ThatYear\\gift-react\\src\\common\\js\\axios.js":"11","E:\\zm\\ThatYear\\gift-react\\src\\pages\\frontend-auth.model.jsx":"12","E:\\zm\\ThatYear\\gift-react\\src\\pages\\pageDesign\\index.jsx":"13","E:\\zm\\ThatYear\\gift-react\\src\\pages\\user\\index.jsx":"14","E:\\zm\\ThatYear\\gift-react\\src\\pages\\demo.jsx":"15","E:\\zm\\ThatYear\\gift-react\\src\\pages\\error\\404.jsx":"16","E:\\zm\\ThatYear\\gift-react\\src\\pages\\members\\index.jsx":"17","E:\\zm\\ThatYear\\gift-react\\src\\pages\\goods\\goodsDetail.jsx":"18","E:\\zm\\ThatYear\\gift-react\\src\\pages\\system\\index.jsx":"19","E:\\zm\\ThatYear\\gift-react\\src\\pages\\goods\\addGoods.jsx":"20","E:\\zm\\ThatYear\\gift-react\\src\\pages\\order\\orderDetail.jsx":"21","E:\\zm\\ThatYear\\gift-react\\src\\pages\\goods\\index.jsx":"22","E:\\zm\\ThatYear\\gift-react\\src\\pages\\order\\index.jsx":"23","E:\\zm\\ThatYear\\gift-react\\src\\siteinfo.js":"24","E:\\zm\\ThatYear\\gift-react\\src\\components\\picLibrary.jsx":"25","E:\\zm\\ThatYear\\gift-react\\src\\components\\chat.jsx":"26"},{"size":673,"mtime":1615889160823,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1615889160826,"results":"29","hashOfConfig":"28"},{"size":2014,"mtime":1616405684773,"results":"30","hashOfConfig":"28"},{"size":6720,"mtime":1616143324033,"results":"31","hashOfConfig":"28"},{"size":1618,"mtime":1616116485491,"results":"32","hashOfConfig":"28"},{"size":1977,"mtime":1615889160823,"results":"33","hashOfConfig":"28"},{"size":477,"mtime":1615889160818,"results":"34","hashOfConfig":"28"},{"size":5895,"mtime":1616397126719,"results":"35","hashOfConfig":"28"},{"size":4700,"mtime":1615889160825,"results":"36","hashOfConfig":"28"},{"size":6527,"mtime":1616143923310,"results":"37","hashOfConfig":"28"},{"size":1127,"mtime":1615889160818,"results":"38","hashOfConfig":"28"},{"size":51,"mtime":1615889160823,"results":"39","hashOfConfig":"28"},{"size":50564,"mtime":1616137257694,"results":"40","hashOfConfig":"28"},{"size":10522,"mtime":1616145364379,"results":"41","hashOfConfig":"28"},{"size":19153,"mtime":1616118905993,"results":"42","hashOfConfig":"28"},{"size":1459,"mtime":1615889160823,"results":"43","hashOfConfig":"28"},{"size":12376,"mtime":1616118882809,"results":"44","hashOfConfig":"28"},{"size":17176,"mtime":1616404421577,"results":"45","hashOfConfig":"28"},{"size":11201,"mtime":1616396103233,"results":"46","hashOfConfig":"28"},{"size":11942,"mtime":1616145587220,"results":"47","hashOfConfig":"28"},{"size":11130,"mtime":1616114969557,"results":"48","hashOfConfig":"28"},{"size":3562,"mtime":1615889160824,"results":"49","hashOfConfig":"28"},{"size":5209,"mtime":1616384987564,"results":"50","hashOfConfig":"28"},{"size":109,"mtime":1615889160826,"results":"51","hashOfConfig":"28"},{"size":15159,"mtime":1616143325699,"results":"52","hashOfConfig":"28"},{"size":5167,"mtime":1616405381685,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1jgpyn",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\zm\\ThatYear\\gift-react\\src\\index.js",[],["115","116"],"E:\\zm\\ThatYear\\gift-react\\src\\reportWebVitals.js",[],"E:\\zm\\ThatYear\\gift-react\\src\\App.js",["117"],"E:\\zm\\ThatYear\\gift-react\\src\\components\\header.jsx",["118"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n// 样式\r\nimport HeaderMoudleCss from '../css/header.module.css';\r\nimport Logo from '../assets/icon/logo.png';\r\nimport Userpic from '../assets/images/userPic.jpg';\r\n// antd组件\r\nimport { Badge, Menu, Dropdown, Divider, Row, Col } from 'antd';\r\n// 头部\r\nclass Herder extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.toggleCollapsed = this.toggleCollapsed.bind(this)\r\n        this.state = {\r\n            collapsed: true\r\n        }\r\n    }\r\n\r\n    toggleCollapsed(){\r\n        this.setState({\r\n          collapsed: !this.state.collapsed,\r\n        });\r\n        this.props.getChildDatas(this.state.collapsed);\r\n    };\r\n\r\n    render() {\r\n        const style = {\r\n            fontSize: 30 + 'px'\r\n        }\r\n        const userMenu = (\r\n            <Menu>\r\n                <Menu.Item className=\"hover-bg-none\">\r\n                    <h4 className=\"user-name\">Mr zhu</h4>\r\n                    <small className=\"text-999\">18820854754@139.com</small>\r\n                </Menu.Item>\r\n                <div className=\"w100 bd-top\"></div>\r\n                {/* <Menu.Item className=\"hover-bg-f6f\">\r\n                    <div className=\"menu-item\">\r\n                        <i className=\"iconfont icon-email mr-10 text-28a\"></i>\r\n                        <span className=\"text-333\">消息</span>\r\n                    </div>\r\n                </Menu.Item> */}\r\n                <Menu.Item className=\"hover-bg-f6f\">\r\n                    <Link to=\"/usermsg\">\r\n                        <div className=\"menu-item\">\r\n                            <i className=\"iconfont icon-ContactUser mr-10 text-ffc\"></i>\r\n                            <span className=\"text-333\">个人中心</span>\r\n                        </div>\r\n                    </Link> \r\n                </Menu.Item>\r\n                <Divider />\r\n                {/* <Menu.Item className=\"hover-bg-f6f\">\r\n                    <div className=\"menu-item\">\r\n                        <i className=\"iconfont icon-setting mr-10 text-17a\"></i>\r\n                        <span className=\"text-333\">设置</span>\r\n                    </div>\r\n                </Menu.Item> */}\r\n                <Menu.Item className=\"hover-bg-f6f\">\r\n                    <div className=\"menu-item\">\r\n                        <i className=\"iconfont icon-unlock mr-10 text-dc3\"></i>\r\n                        <span className=\"text-333\">退出</span>\r\n                    </div>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n        const appMenu = (\r\n            <Menu>\r\n                <Menu.Item className=\"hover-bg-none\">\r\n                    <h4 className=\"user-name text-6c7 fon-w-500\">我的应用</h4>\r\n                </Menu.Item>\r\n                <div className=\"w100 bd-top\"></div>\r\n                <Menu.Item className=\"hover-bg-none\">\r\n                    <ul className=\"app-box w300 dis-flx align-items-center justify-space-between flx-wap\">\r\n                        <Row className=\"w100\">\r\n                            <Col span={12}>\r\n                                <li className=\"app-box-item text-align\">\r\n                                    <i className=\"iconfont icon-editor text-ffc dis-block mb-10 mt-10\" style={style}></i>\r\n                                    <span className=\"text-333 dis-block\">添加订单</span>\r\n                                </li>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <li className=\"app-box-item text-align\">\r\n                                    <i className=\"iconfont icon-transport mb-10 mt-10 text-dc3 dis-block\" style={style}></i>\r\n                                    <span className=\"text-333 dis-block\">新订单</span>\r\n                                </li>\r\n                            </Col>\r\n                        </Row>\r\n                    </ul>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n        const noticeMenu = (\r\n            <Menu>\r\n                <Menu.Item className=\"hover-bg-none dis-flx align-items-center justify-space-between\">\r\n                    <h4 className=\"user-name text-6c7 fon-w-500\">系统通知</h4>\r\n                    <Badge color=\"red\" count={25} />\r\n                </Menu.Item>\r\n                <div className=\"w100 bd-top\"></div>\r\n                <Menu.Item className=\"hover-bg-f6f\">\r\n                    <div className=\"notice-item w300 dis-flx align-items-center justify-space-between\">\r\n                        <div className=\"title text-333\">New registered userJust</div>\r\n                        <div className=\"time text-999\">now</div>\r\n                    </div>\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n        return (\r\n            <div className=\"herder bg-fff w100 navbar\">\r\n                <div className=\"navbar dis-flx align-items-center justify-space-between\">\r\n                    <div className=\"navbar-left dis-flx align-items-center\">\r\n                        <div className=\"logo ml-20\">\r\n                            <div className=\"logo-icon\">\r\n                                <img className=\"dis-block\" src={Logo} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"line-icon\" onClick={this.toggleCollapsed}>\r\n                            <i className={this.state.collapsed?\"iconfont icon-align-left fon-30 text-878\":\"iconfont icon-alignleft fon-30 text-878\"}></i>\r\n                        </div>\r\n                    </div>\r\n                    <ul className=\"navbar-right dis-flx align-items-center mb-0\">\r\n                        <Dropdown overlay={noticeMenu} placement=\"bottomRight\" arrow>\r\n                            <li className=\"message\">\r\n                                <Badge status=\"error\" />\r\n                                <i className=\"iconfont icon-bell fon-25 text-878\"></i>\r\n                            </li>\r\n                        </Dropdown>\r\n                        <Dropdown overlay={appMenu} placement=\"bottomRight\" arrow>\r\n                            <li className=\"application mr-20 ml-20\">\r\n                                <i className=\"iconfont fon-25 icon-application text-878\"></i>\r\n                            </li>\r\n                        </Dropdown>\r\n                        <Dropdown overlay={userMenu} placement=\"bottomRight\" arrow>\r\n                            <li className=\"user-pic\">\r\n                                <img className=\"dis-block\" src={Userpic} alt=\"\" />\r\n                            </li>\r\n                        </Dropdown>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Herder;","E:\\zm\\ThatYear\\gift-react\\src\\pages\\routerConfig .jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\FrontendAuth.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\components\\footer.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\login\\index.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\login\\register.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\components\\sidebar.jsx",["119","120","121"],"import React, { Fragment } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../css/sidebar.less';\r\n// antd组件\r\nimport { Menu } from 'antd';\r\nimport { CodeOutlined, ShoppingCartOutlined, UserOutlined, BarChartOutlined, MessageOutlined, FileOutlined ,DollarOutlined} from '@ant-design/icons';\r\nconst { SubMenu } = Menu;\r\nconst rootSubmenuKeys = ['sub1', 'sub2', 'sub4'];\r\n// 列表结构\r\nlet sideMenuList = [\r\n    {\r\n        id: 1,\r\n        menuItemTitle: \"系统\",\r\n        menuItemIcon: <BarChartOutlined />,\r\n        level1: [],\r\n        url: '/system'\r\n    },\r\n    {\r\n        id: 2,\r\n        menuItemTitle: \"页面\",\r\n        menuItemIcon: <CodeOutlined />,\r\n        level1: [\r\n            {\r\n                id: 7,\r\n                menuItemTitle: \"页面设计\",\r\n                lever2: [],\r\n                url: '/pageDesign'\r\n            },\r\n            // {\r\n            //     id: 8,\r\n            //     menuItemTitle: \"底部导航设置\",\r\n            //     lever2: [],\r\n            //     url: '/bottomNav'\r\n            // }\r\n        ]\r\n    },\r\n    {\r\n        id: 3,\r\n        menuItemTitle: \"商品\",\r\n        menuItemIcon: <ShoppingCartOutlined />,\r\n        level1: [\r\n            {\r\n                id: 9,\r\n                menuItemTitle: \"商品列表\",\r\n                lever2: [],\r\n                url: '/goods'\r\n            },\r\n            {\r\n                id: 10,\r\n                menuItemTitle: \"商品分类\",\r\n                lever2: [],\r\n                url: '/goodsClassify'\r\n            },\r\n            // {\r\n            //     id: 11,\r\n            //     menuItemTitle: \"商品评价\",\r\n            //     lever2: [],\r\n            //     url: '/goodsComment'\r\n            // },\r\n            // {\r\n            //     id: 13,\r\n            //     menuItemTitle: \"订单\",\r\n            //     lever2: [],\r\n            //     url: '/order'\r\n            // },\r\n        ]\r\n    },\r\n    {\r\n        id: 11,\r\n        menuItemTitle: \"交易\",\r\n        menuItemIcon: <DollarOutlined />,\r\n        level1: [\r\n            // {\r\n            //     id: 9,\r\n            //     menuItemTitle: \"商品列表\",\r\n            //     lever2: [],\r\n            //     url: '/goods'\r\n            // },\r\n            // {\r\n            //     id: 10,\r\n            //     menuItemTitle: \"商品分类\",\r\n            //     lever2: [],\r\n            //     url: '/goodsClassify'\r\n            // },\r\n            // {\r\n            //     id: 11,\r\n            //     menuItemTitle: \"商品评价\",\r\n            //     lever2: [],\r\n            //     url: '/goodsComment'\r\n            // },\r\n            {\r\n                id: 13,\r\n                menuItemTitle: \"订单列表\",\r\n                lever2: [],\r\n                url: '/order'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        id: 4,\r\n        menuItemTitle: \"会员\",\r\n        menuItemIcon: <UserOutlined />,\r\n        level1: [\r\n            {\r\n                id: 11,\r\n                menuItemTitle: \"会员列表\",\r\n                lever2: [],\r\n                url: '/members'\r\n            },\r\n            // {\r\n            //     id: 12,\r\n            //     menuItemTitle: \"会员等级\",\r\n            //     lever2: [],\r\n            //     url: '/userLevel'\r\n            // }\r\n        ]\r\n    },\r\n    // {\r\n    //     id: 5,\r\n    //     menuItemTitle: \"消息\",\r\n    //     menuItemIcon: <MessageOutlined />,\r\n    //     level1: [],\r\n    //     url: '/mssage'\r\n    // },\r\n    {\r\n        id: 6,\r\n        menuItemTitle: \"文件管理\",\r\n        menuItemIcon: <FileOutlined />,\r\n        level1: [],\r\n        url: '/files'\r\n    },\r\n];\r\nconst Sidebar = (props) => {\r\n    const [openKeys, setOpenKeys] = React.useState(['sub1']);\r\n    const onOpenChange = keys => {\r\n        const latestOpenKey = keys.find(key => openKeys.indexOf(key) === -1);\r\n        if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n            setOpenKeys(keys);\r\n        } else {\r\n            setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\r\n        }\r\n    };\r\n    let SideMenu = sideMenuList.map(SubMenuItem => {\r\n        {\r\n            if (SubMenuItem.level1.length > 0) {\r\n                return <>\r\n                    <SubMenu key={SubMenuItem.id} icon={SubMenuItem.menuItemIcon} title={SubMenuItem.menuItemTitle}>\r\n                        {\r\n                            SubMenuItem.level1.map(MenuItem1 => {\r\n                                {\r\n                                    if (MenuItem1.lever2.length > 0) {\r\n                                        return <>\r\n                                            <SubMenu key={MenuItem1.id} title={MenuItem1.menuItemTitle}>\r\n                                                {\r\n                                                    MenuItem1.lever2.map(MenuItem2 => {\r\n                                                        return <><Menu.Item key={MenuItem2.id}>\r\n                                                            <Link to={MenuItem2.url}>{MenuItem2.menuItemTitle}</Link>\r\n                                                        </Menu.Item></>\r\n                                                    })\r\n                                                }\r\n                                            </SubMenu>\r\n                                        </>\r\n                                    } else {\r\n                                        return <>\r\n                                            <Menu.Item key={MenuItem1.id}>\r\n                                                <Link to={MenuItem1.url}>{MenuItem1.menuItemTitle}</Link>\r\n                                            </Menu.Item>\r\n                                        </>\r\n                                    }\r\n                                }\r\n                            })\r\n                        }\r\n                    </SubMenu>\r\n                </>\r\n            } else {\r\n                return <>\r\n                    <Menu.Item key={SubMenuItem.id} icon={SubMenuItem.menuItemIcon}>\r\n                        <Link to={SubMenuItem.url}>{SubMenuItem.menuItemTitle}</Link>\r\n                    </Menu.Item>\r\n                </>\r\n            }\r\n        }\r\n    })\r\n    return (\r\n        <div className={props.isCollapsed?'sidebar':'sidebar-active'}>\r\n            <Menu inlineCollapsed={props.isCollapsed} mode=\"inline\" defaultSelectedKeys={['1']} openKeys={openKeys} onOpenChange={onOpenChange} style={{height:'100%',backgroundColor: '#282a39'}}>\r\n                {SideMenu}\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","E:\\zm\\ThatYear\\gift-react\\src\\common\\js\\axios.js",["122"],"import axios from 'axios';\r\nimport siteinfo from '../../siteinfo';\r\n\r\nconst getAxios = (url, params) => {\r\n    // 基础路径\r\n    return new Promise((resolve, reject) => {\r\n        axios({\r\n            url: siteinfo.baseUrl + url,\r\n            method: 'get',\r\n            params: params,\r\n        }).then(response => {\r\n            if (response.status === 200) {\r\n                resolve(response);\r\n            } else {\r\n                throw new Error('Response data error')\r\n            }\r\n        }).catch(error => {\r\n            reject(error)\r\n        })\r\n    })\r\n}\r\n\r\nconst postAxios = (url, data) => {\r\n    // 基础路径\r\n    return new Promise((resolve, reject) => {\r\n        axios({\r\n            url: siteinfo.baseUrl + url,\r\n            method: 'post',\r\n            data: data,\r\n        }).then(response => {\r\n            if (response.status === 200) {\r\n                resolve(response);\r\n            } else {\r\n                throw new Error('Response data error')\r\n            }\r\n        }).catch(error => {\r\n            reject(error)\r\n        })\r\n    })\r\n}\r\n\r\nexport default {\r\n    getAxios,\r\n    postAxios\r\n}","E:\\zm\\ThatYear\\gift-react\\src\\pages\\frontend-auth.model.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\pageDesign\\index.jsx",["123","124","125"],"import React from 'react';\r\n// 样式\r\nimport styles from '../../css/pageDesign.module.css';\r\n// 图片\r\nimport PageDesignLogo from '../../assets/images/pageDesign/logo.png';\r\nimport SearchIcon from '../../assets/images/pageDesign/search-icon.png';\r\nimport Scan from '../../assets/images/pageDesign/scan.png';\r\nimport UserPic from '../../assets/images/pageDesign/user-pic.png';\r\nimport Banner from '../../assets/images/pageDesign/banner.png';\r\nimport NavIcon from '../../assets/images/pageDesign/nav-item-icon1.png';\r\nimport TigIcon from '../../assets/images/pageDesign/tig-icon.png';\r\nimport goodsBarItem1 from '../../assets/images/pageDesign/goods-bar-item1.png';\r\nimport goodsBarItem2 from '../../assets/images/pageDesign/goods-bar-item2.png';\r\nimport goodsBarItem3 from '../../assets/images/pageDesign/goods-bar-item3.png';\r\nimport Adversing from '../../assets/images/pageDesign/adversing.png';\r\nimport Goods1 from '../../assets/images/pageDesign/goods1.png';\r\n// antd 组件\r\nimport { Row, Col, Breadcrumb, Divider, Form, Input, Radio, Slider, Checkbox, Button } from 'antd';\r\n// 图片库组件\r\nimport PicLibrary from '../../components/picLibrary';\r\n// 拾色器\r\nimport InputColor from 'react-input-color';\r\nclass PageDesign extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tabState: 1,\r\n            // 搜索框form数据\r\n            searchTxt: \"积分兑换\",\r\n            searchStyle: \"party\",\r\n            seachTxtAlign: \"left\",\r\n            // 轮播\r\n            bannerPointColor: \"#ffffff\",\r\n            bannerPointShape: \"square\",\r\n            bannerTopBottomMargin: \"\",\r\n            bannerLfteRightMargin: \"\",\r\n            bannerNodesList: [\r\n                { linkAddress: \"https://www.baidu.com\" }\r\n            ],\r\n            // 导航\r\n            navOutBgCol: \"#ffffff\",\r\n            navTopBottomMargin: \"\",\r\n            navLeftRightMargin: \"\",\r\n            navInsBgCol: \"#ffffff\",\r\n            navInsTopMargin: \"\",\r\n            navInsRightMargin: \"\",\r\n            navInsBottomMargin: \"\",\r\n            navInsLeftMargin: \"\",\r\n            navInsTopRound: \"\",\r\n            navInsTopRound: \"\",\r\n            navInsBottomRound: \"\",\r\n            navLineNum: \"3\",\r\n            navNodesList: [\r\n                { navTxt: \"\", navTxtCol: \"\", linkAddress: \"https://www.baidu.com\" }\r\n            ],\r\n            // 系统消息\r\n            noticeTopBottomMargin: \"\",\r\n            noticeLeftRightMargin: \"\",\r\n            // 推荐\r\n            rcmTopBottomMargin: \"\",\r\n            rcmLeftRightMargin: \"\",\r\n            recNodesList: [\r\n                { linkAddress: \"\" }\r\n            ],\r\n            //广告栏 \r\n            advTopBottomMargin: \"\",\r\n            advLeftRightMargin: \"\",\r\n            advNodesList: [{ linkAddress: \"https://www.baidu.com\" }],\r\n            // 商品分类导航\r\n            goodsTabTopBottomMargin: \"\",\r\n            goodsTabLeftRightMargin: \"\",\r\n            goodsTabNodesList: [\r\n                { goodsTabTitle: \"\", goodsTabScptTxt: \"\" }\r\n            ],\r\n            // 商品\r\n            goodsSort: \"comprehensive\",\r\n            goodsPlayMain: ['goodsName', 'goodsScr'],\r\n            goodsTopBottomMargin: \"\",\r\n            goodsLfteRightMargin: \"\",\r\n            goodsPicRound: \"\",\r\n            goodsInsTopBottomMargin: \"\",\r\n            goodsInsLfteRightMargin: \"\",\r\n            goodsOutTopBottomMargin: \"\",\r\n            goodsOutLfteRightMargin: \"\",\r\n            // 图片库\r\n            picLibraryStatus: false\r\n        }\r\n        this.tabHandle = this.tabHandle.bind(this);\r\n        this.radioHandle = this.radioHandle.bind(this);\r\n        this.checkBoxChange = this.checkBoxChange.bind(this);\r\n        this.sliderChange = this.sliderChange.bind(this);\r\n        this.colorPicker = this.colorPicker.bind(this);\r\n        this.inputChange = this.inputChange.bind(this);\r\n        this.addOptionsNodes = this.addOptionsNodes.bind(this);\r\n        this.picLibraryBackStatus = this.picLibraryBackStatus.bind(this);\r\n        this.picLibraryStatusChange = this.picLibraryStatusChange.bind(this);\r\n    }\r\n    // 点击切换\r\n    tabHandle(e) {\r\n        const tabStateVal = Number(e.target.dataset.tabstate);\r\n        this.setState({\r\n            tabState: tabStateVal\r\n        })\r\n    }\r\n    // 单选按钮\r\n    radioHandle(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    // 多选按钮\r\n    checkBoxChange(name, e) {\r\n        let val = e.target[\"data-val\"];\r\n        let checked = e.target.checked;\r\n        switch (name) {\r\n            case 'goodsPlayMain':\r\n                let goodsPlayMain = this.state.goodsPlayMain;\r\n                if (checked) {\r\n                    if (!goodsPlayMain.includes(val)) {\r\n                        goodsPlayMain.push(val);\r\n                    }\r\n                } else {\r\n                    goodsPlayMain.splice(goodsPlayMain.indexOf(val), 1)\r\n                }\r\n                this.setState(goodsPlayMain);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    // 滑动输入条\r\n    sliderChange(name, value) {\r\n        let val = `${value}%`;\r\n        console.log('val', val)\r\n        switch (name) {\r\n            case \"bannerTopBottomMargin\":\r\n                this.setState({ bannerTopBottomMargin: val });\r\n                break;\r\n            case \"bannerLfteRightMargin\":\r\n                this.setState({ bannerLfteRightMargin: val });\r\n                break;\r\n            case \"bannerLfteRightMargin\":\r\n                this.setState({ bannerLfteRightMargin: val });\r\n                break;\r\n            case \"navTopBottomMargin\":\r\n                this.setState({ navTopBottomMargin: val });\r\n                break;\r\n            case \"navLeftRightMargin\":\r\n                this.setState({ navLeftRightMargin: val });\r\n                break;\r\n            case \"navInsTopMargin\":\r\n                this.setState({ navInsTopMargin: val });\r\n                break;\r\n            case \"navInsRightMargin\":\r\n                this.setState({ navInsRightMargin: val });\r\n                break;\r\n            case \"navInsBottomMargin\":\r\n                this.setState({ navInsBottomMargin: val });\r\n                break;\r\n            case \"navInsLeftMargin\":\r\n                this.setState({ navInsLeftMargin: val });\r\n                break;\r\n            case \"navInsTopRound\":\r\n                this.setState({ navInsTopRound: val });\r\n                break;\r\n            case \"navInsBottomRound\":\r\n                this.setState({ navInsBottomRound: val });\r\n                break;\r\n            case \"noticeTopBottomMargin\":\r\n                this.setState({ noticeTopBottomMargin: val });\r\n                break;\r\n            case \"noticeLeftRightMargin\":\r\n                this.setState({ noticeLeftRightMargin: val });\r\n                break;\r\n            case \"rcmTopBottomMargin\":\r\n                this.setState({ rcmTopBottomMargin: val });\r\n                break;\r\n            case \"rcmLeftRightMargin\":\r\n                this.setState({ rcmLeftRightMargin: val });\r\n                break;\r\n            case \"advTopBottomMargin\":\r\n                this.setState({ advTopBottomMargin: val });\r\n                break;\r\n            case \"advLeftRightMargin\":\r\n                this.setState({ advLeftRightMargin: val });\r\n                break;\r\n            case \"goodsTabTopBottomMargin\":\r\n                this.setState({ goodsTabTopBottomMargin: val });\r\n                break;\r\n            case \"goodsTabLeftRightMargin\":\r\n                this.setState({ goodsTabLeftRightMargin: val });\r\n                break;\r\n            // \r\n            case \"goodsTopBottomMargin\":\r\n                this.setState({ goodsTopBottomMargin: val });\r\n                break;\r\n            case \"goodsLfteRightMargin\":\r\n                this.setState({ goodsLfteRightMargin: val });\r\n                break;\r\n            case \"goodsPicRound\":\r\n                this.setState({ goodsPicRound: val });\r\n                break;\r\n            case \"goodsInsTopBottomMargin\":\r\n                this.setState({ goodsInsTopBottomMargin: val });\r\n                break;\r\n            case \"goodsInsLfteRightMargin\":\r\n                this.setState({ goodsInsLfteRightMargin: val });\r\n                break;\r\n            case \"goodsOutTopBottomMargin\":\r\n                this.setState({ goodsOutTopBottomMargin: val });\r\n                break;\r\n            case \"goodsOutLfteRightMargin\":\r\n                this.setState({ goodsOutLfteRightMargin: val });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    sliderTipFormatter(value) {\r\n        return `${value}%`\r\n    }\r\n    // 颜色选择\r\n    colorPicker = (name, value, index) => {\r\n        let color = value.rgba;\r\n        switch (name) {\r\n            case \"bannerPointColor\":\r\n                this.setState({ bannerPointColor: color });\r\n                break;\r\n            case \"navOutBgCol\":\r\n                this.setState({ navOutBgCol: color });\r\n                break;\r\n            case \"navInsBgCol\":\r\n                this.setState({ navInsBgCol: color });\r\n                break;\r\n            case 'navTxtCol':\r\n                let navNodesList = this.state.navNodesList;\r\n                navNodesList[index].navTxtCol = color;\r\n                this.setState(navNodesList);\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    // 输入框\r\n    inputChange(name, index, e) {\r\n        let val = e.target.value;\r\n        let bannerNodesList = this.state.bannerNodesList;\r\n        let navNodesList = this.state.navNodesList;\r\n        let recNodesList = this.state.recNodesList;\r\n        let advNodesList = this.state.advNodesList;\r\n        let goodsTabNodesList = this.state.goodsTabNodesList;\r\n        switch (name) {\r\n            case 'searchTxt':\r\n                this.setState({ searchTxt: val });\r\n                break;\r\n            case 'bannerLink':\r\n                bannerNodesList[index].linkAddress = val;\r\n                this.setState(bannerNodesList);\r\n                break;\r\n            case 'navTxt':\r\n                navNodesList[index].navTxt = val;\r\n                this.setState(navNodesList);\r\n                break;\r\n            case 'navLinkAddress':\r\n                navNodesList[index].linkAddress = val;\r\n                this.setState(navNodesList);\r\n                break;\r\n            case 'reclinkAddress':\r\n                recNodesList[index].linkAddress = val;\r\n                this.setState(recNodesList);\r\n                break;\r\n            case 'advlinkAddress':\r\n                advNodesList[index].linkAddress = val;\r\n                this.setState(advNodesList);\r\n                break;\r\n            case 'goodsTabTitle':\r\n                goodsTabNodesList[index].goodsTabTitle = val;\r\n                this.setState(goodsTabNodesList);\r\n                break;\r\n            case 'goodsTabScptTxt':\r\n                goodsTabNodesList[index].goodsTabScptTxt = val;\r\n                this.setState(goodsTabNodesList);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    // 添加选项节点\r\n    addOptionsNodes(stateArrName) {\r\n        let newNodesObj\r\n        switch (stateArrName) {\r\n            case 'bannerNodesList':\r\n                newNodesObj = { linkAddress: '' };\r\n                break;\r\n            case 'navNodesList':\r\n                newNodesObj = { navTxt: '', navTxtCol: \"\", linkAddress: '' };\r\n                break;\r\n            case 'recNodesList':\r\n                newNodesObj = { linkAddress: '' };\r\n                break;\r\n            case 'advNodesList':\r\n                newNodesObj = { linkAddress: '' };\r\n                break;\r\n            case 'goodsTabNodesList':\r\n                newNodesObj = { goodsTabTitle: \"\", goodsTabScptTxt: \"\" };\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        let newStateArr = this.state[stateArrName];\r\n        newStateArr.push(newNodesObj);\r\n        this.setState(newStateArr);\r\n    }\r\n    // 删除选项节点\r\n    deleteOptionsNodes(index, stateArrName) {\r\n        let newStateArr = this.state[stateArrName];\r\n        if (newStateArr.length === 1) {\r\n            alert('必须有一项')\r\n        } else {\r\n            delete newStateArr[index];\r\n            this.setState(newStateArr);\r\n        }\r\n    }\r\n    // 图片库=>数据返回\r\n    picLibraryBackStatus(data) {\r\n        this.setState({\r\n            picLibraryStatus: !data\r\n        })\r\n    }\r\n    picLibraryStatusChange() {\r\n        this.setState({ picLibraryStatus: true });\r\n    }\r\n    render() {\r\n        // 搜索框样式单选\r\n        const searchSearchStyleOptions = [\r\n            { label: '方形', value: 'party' },\r\n            { label: '圆形', value: 'round' },\r\n            { label: '圆弧', value: 'arc' },\r\n        ];\r\n        // 搜索框文字单选\r\n        const seachTxtAlignOptions = [\r\n            { label: '居左', value: 'left' },\r\n            { label: '居中', value: 'center' },\r\n            { label: '居右', value: 'right' },\r\n        ]\r\n        // 轮播图指示点单选\r\n        const bannerPointShapeOptions = [\r\n            { label: '正方形', value: 'square' },\r\n            { label: '圆形', value: 'round' },\r\n            { label: '长方形', value: 'rectangle' },\r\n        ]\r\n        // 导航数量\r\n        const navLineNumOptions = [\r\n            { label: '3', value: '3' },\r\n            { label: '4', value: '4' },\r\n            { label: '5', value: '5' },\r\n        ]\r\n        // 商品排序\r\n        const goodsSortOptions = [\r\n            { label: '综合', value: 'comprehensive' },\r\n            { label: '销量', value: 'sales' },\r\n            { label: '价格', value: 'price' },\r\n        ]\r\n        // 表单提交成功\r\n        const onFinish = (values: any) => {\r\n            console.log('Success:', values);\r\n        };\r\n        // 表单提交失败\r\n        const onFinishFailed = (errorInfo: any) => {\r\n            console.log('Failed:', errorInfo);\r\n        };\r\n        // 轮播节点列表\r\n        let bannerNodesList = this.state.bannerNodesList;\r\n        let bannerNodesItems = bannerNodesList.map((item, index) => {\r\n            return <div className=\"nodes-box pd-17 bg-f7f bor-rds-3 mb-20\" key={index}>\r\n                <Form.Item label=\"图片\" name=\"bannerPic\">\r\n                    <div className=\"ipt-file-cover-element pos-r\" onClick={this.picLibraryStatusChange}>\r\n                    </div>\r\n                </Form.Item>\r\n                <Form.Item label=\"链接地址\" name={['bannerNodesList', index, 'linkAddress']}>\r\n                    <Input defaultValue={item.linkAddress} className=\"ant-input-bottom-line\" onChange={(e) => this.inputChange('bannerLink', index, e)} />\r\n                </Form.Item>\r\n                <div className=\"delete\" onClick={() => this.deleteOptionsNodes(index, 'bannerNodesList')}></div>\r\n            </div>\r\n        })\r\n        // 导航节点列表\r\n        let navNodesList = this.state.navNodesList;\r\n        let bannerNodesItem = navNodesList.map((item, index) => {\r\n            return <div className=\"nodes-box from-item pd-17 bg-f7f bor-rds-3 mb-20\">\r\n                <Form.Item label=\"图片\" name=\"navPic\">\r\n                    <div className=\"ipt-file-cover-element pos-r\" onClick={this.picLibraryStatusChange}>\r\n                    </div>\r\n                </Form.Item>\r\n                <Form.Item label=\"文字内容\" name={['navNodesList', index, 'navTxt']}>\r\n                    <Input defaultValue={item.navTxt} className=\"ant-input-bottom-line\" onChange={(e) => this.inputChange('navTxt', index, e)} />\r\n                </Form.Item>\r\n                <Form.Item label=\"文字颜色\" name={['navNodesList', index, 'navTxtCol']}>\r\n                    <InputColor\r\n                        initialValue=\"#ffffff\"\r\n                        onChange={(value) => this.colorPicker('navTxtCol', value, index)}\r\n                        placement=\"right\"\r\n                    ></InputColor>\r\n                </Form.Item>\r\n                <Form.Item label=\"H5链接\" name={['navNodesList', index, 'linkAddress']}>\r\n                    <Input defaultValue={item.linkAddress} className=\"ant-input-bottom-line\" onChange={(e) => this.inputChange('navLinkAddress', index, e)} />\r\n                </Form.Item>\r\n                <div className=\"delete\" onClick={() => this.deleteOptionsNodes(index, 'navNodesList')}></div>\r\n            </div>\r\n        })\r\n        // 推荐节点列表\r\n        let recNodesList = this.state.recNodesList;\r\n        let recNodesItem = recNodesList.map((item, index) => {\r\n            return (\r\n                <div className=\"nodes-box from-item pd-17 bg-f7f bor-rds-3 mb-20\">\r\n                    <Form.Item label=\"图片\" name=\"rcmPic\">\r\n                        <div className=\"ipt-file-cover-element pos-r\" onClick={this.picLibraryStatusChange}>\r\n                        </div>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"H5链接\" name={['recNodesList', index, 'linkAddress']}>\r\n                        <Input defaultValue={item.linkAddress} className=\"ant-input-bottom-line\" onChange={(e) => this.inputChange('reclinkAddress', index, e)} />\r\n                    </Form.Item>\r\n                    <div className=\"delete\" onClick={() => this.deleteOptionsNodes(index, 'recNodesList')}></div>\r\n                </div>\r\n            )\r\n        })\r\n        // 广告节点列表\r\n        let advNodesList = this.state.advNodesList;\r\n        let advNodesItem = advNodesList.map((item, index) => {\r\n            return (\r\n                <div className=\"nodes-box from-item pd-17 bg-f7f bor-rds-3 mb-20\">\r\n                    <Form.Item label=\"图片\" name=\"advPic\">\r\n                        <div className=\"ipt-file-cover-element pos-r\" onClick={this.picLibraryStatusChange}>\r\n                        </div>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"H5链接\" name={['advNodesList', index, 'linkAddress']}>\r\n                        <Input defaultValue={item.linkAddress} className=\"ant-input-bottom-line\" onChange={(e) => this.inputChange('advlinkAddress', index, e)} />\r\n                    </Form.Item>\r\n                    <div className=\"delete\" onClick={() => this.deleteOptionsNodes(index, 'advNodesList')}></div>\r\n                </div>\r\n            )\r\n        })\r\n        // 商品分类导航\r\n        let goodsTabNodesList = this.state.goodsTabNodesList;\r\n        let goodsTabNodesItem = goodsTabNodesList.map((item, index) => {\r\n            return (\r\n                <div className=\"nodes-box from-item pd-17 bg-f7f bor-rds-3 mb-20\">\r\n                    <Form.Item label=\"标题\" name={['goodsTabNodesList', index, 'goodsTabTitle']}>\r\n                        <Input defaultValue={item.linkAddress} className=\"ant-input-bottom-line\" onChange={(e) => this.inputChange('goodsTabTitle', index, e)} />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"描述文字\" name={['goodsTabNodesList', index, 'goodsTabScptTxt']}>\r\n                        <Input defaultValue={item.linkAddress} className=\"ant-input-bottom-line\" onChange={(e) => this.inputChange('goodsTabScptTxt', index, e)} />\r\n                    </Form.Item>\r\n                    <div className=\"delete\" onClick={() => this.deleteOptionsNodes(index, 'goodsTabNodesList')}></div>\r\n                </div>\r\n            )\r\n\r\n\r\n        })\r\n        // 商品\r\n        let goodsPlayMain = this.state.goodsPlayMain;\r\n        return (\r\n            <div className=\"main\">\r\n                <Row className=\"content-title mb-10\">\r\n                    <Col span={12}>\r\n                        <h3><strong>页面设计</strong></h3>\r\n                    </Col>\r\n                    <Col span={12} className=\"text-align-right\">\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item>系统</Breadcrumb.Item>\r\n                            <Breadcrumb.Item>页面设计</Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={30}>\r\n                    <Col span={6}>\r\n                        <div className={styles.pageDesignCard}>\r\n                            <div className={styles.phoneTop}>\r\n                                <h4>礼品汇</h4>\r\n                            </div>\r\n                            <header>\r\n                                {/* 搜索 */}\r\n                                <div className={styles.top + ' pd-11 tab'}>\r\n                                    <div className=\"tab-z\" data-tabstate=\"1\" onClick={this.tabHandle}></div>\r\n                                    <div className=\"pageDesignLogo\">\r\n                                        <img className=\"w100\" src={PageDesignLogo} alt=\"\" />\r\n                                    </div>\r\n                                    <div className={styles.search}>\r\n                                        <div className=\"search-icon\">\r\n                                            <img className=\"w100 dis-block\" src={SearchIcon} alt=\"\" />\r\n                                        </div>\r\n                                        <div>{this.state.searchTxt}</div>\r\n                                        <div className=\"scan\">\r\n                                            <img className=\"w100 dis-block\" src={Scan} alt=\"\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"user-pic\">\r\n                                        <img src={UserPic} alt=\"\" />\r\n                                    </div>\r\n                                </div>\r\n                                {/* 轮播 */}\r\n                                <div className=\" banner tab\">\r\n                                    <div className=\"tab-z\" data-tabstate=\"2\" onClick={this.tabHandle}></div>\r\n                                    <img src={Banner} alt=\"\" />\r\n                                </div>\r\n                            </header>\r\n                            <section>\r\n                                {/* 导航 */}\r\n                                <ul className=\"nav tab\">\r\n                                    <div className=\"tab-z\" data-tabstate=\"3\" onClick={this.tabHandle}></div>\r\n                                    <li>\r\n                                        <img src={NavIcon} alt=\"\" />\r\n                                        <span>家居家纺</span>\r\n                                    </li>\r\n                                    <li>\r\n                                        <img src={NavIcon} alt=\"\" />\r\n                                        <span>家居家纺</span>\r\n                                    </li>\r\n                                    <li>\r\n                                        <img src={NavIcon} alt=\"\" />\r\n                                        <span>家居家纺</span>\r\n                                    </li>\r\n                                    <li>\r\n                                        <img src={NavIcon} alt=\"\" />\r\n                                        <span>家居家纺</span>\r\n                                    </li>\r\n                                    <li>\r\n                                        <img src={NavIcon} alt=\"\" />\r\n                                        <span>家居家纺</span>\r\n                                    </li>\r\n                                </ul>\r\n                                {/* 提示 */}\r\n                                <div className=\"notice-wrapper tab\">\r\n                                    <div className=\"tab-z\" data-tabstate=\"4\" onClick={this.tabHandle}></div>\r\n                                    <div className=\"notice\">\r\n                                        <div className=\"title\">\r\n                                            <img className=\"title-icon\" src={TigIcon} alt=\"\" />\r\n                                            <span>最新通知</span>\r\n                                        </div>\r\n                                        <div className=\"main\">\r\n                                            NIKE ADIDAS 进驻顺的积分...\r\n                                            </div>\r\n                                        <div className=\"more\">更多</div>\r\n                                    </div>\r\n                                </div>\r\n                                {/* 推荐 */}\r\n                                <ul className=\" rcm-goods tab\">\r\n                                    <div className=\"tab-z\" data-tabstate=\"5\" onClick={this.tabHandle}></div>\r\n                                    <li>\r\n                                        <img src={goodsBarItem1} alt=\"\" />\r\n                                    </li>\r\n                                    <li>\r\n                                        <img src={goodsBarItem2} alt=\"\" />\r\n                                    </li>\r\n                                    <li>\r\n                                        <img src={goodsBarItem3} alt=\"\" />\r\n                                    </li>\r\n                                </ul>\r\n                                {/* 广告 */}\r\n                                <div className=\" adv tab\">\r\n                                    <div className=\"tab-z\" data-tabstate=\"6\" onClick={this.tabHandle}></div>\r\n                                    <img className=\"w100 dis-block\" src={Adversing} alt=\"\" />\r\n                                </div>\r\n                                {/* 商品 */}\r\n                                <div className=\" tab-classify tab\">\r\n                                    <div className=\"tab-z\" data-tabstate=\"7\" onClick={this.tabHandle}></div>\r\n                                    <div className=\"tab-item tab-item-active\">\r\n                                        <div className=\"txt\">全部</div>\r\n                                        <div className=\"prompt\">为您推荐</div>\r\n                                        <div className=\"line\"></div>\r\n                                    </div>\r\n                                    <div className=\"tab-item\">\r\n                                        <div className=\"txt\">精选</div>\r\n                                        <div className=\"prompt\">海量正品</div>\r\n                                        <div className=\"line\"></div>\r\n                                    </div>\r\n                                    <div className=\"tab-item\">\r\n                                        <div className=\"txt\">热门</div>\r\n                                        <div className=\"prompt\">好物疯抢</div>\r\n                                        <div className=\"line\"></div>\r\n                                    </div>\r\n                                    <div className=\"tab-item\">\r\n                                        <div className=\"txt\">特惠</div>\r\n                                        <div className=\"prompt\">超值好货</div>\r\n                                        <div className=\"line\"></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"tab-obj-classify tab\">\r\n                                    <div className=\"tab-z\" data-tabstate=\"8\" onClick={this.tabHandle}></div>\r\n                                    <div className=\"classify-obj-item\">\r\n                                        <img src={Goods1} alt=\"\" />\r\n                                        <div className=\"goods-name line-clamp2\">多用途舒适枕芯 3D螺旋卷曲\r\n    立体纤维 有效缓解睡眠难题</div>\r\n                                        <div className=\"describe line-clamp1\">美观且大方，不容错过</div>\r\n                                        <div className=\"price-wrapper\">\r\n                                            <div className=\"price\">999</div>\r\n                                            <div className=\"line-price\">1999</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"classify-obj-item\">\r\n                                        <img src={Goods1} alt=\"\" />\r\n                                        <div className=\"goods-name line-clamp2\">多用途舒适枕芯 3D螺旋卷曲\r\n    立体纤维 有效缓解睡眠难题</div>\r\n                                        <div className=\"describe line-clamp1\">美观且大方，不容错过</div>\r\n                                        <div className=\"price-wrapper\">\r\n                                            <div className=\"price\">999</div>\r\n                                            <div className=\"line-price\">1999</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"classify-obj-item\">\r\n                                        <img src={Goods1} alt=\"\" />\r\n                                        <div className=\"goods-name line-clamp2\">多用途舒适枕芯 3D螺旋卷曲\r\n    立体纤维 有效缓解睡眠难题</div>\r\n                                        <div className=\"describe line-clamp1\">美观且大方，不容错过</div>\r\n                                        <div className=\"price-wrapper\">\r\n                                            <div className=\"price\">999</div>\r\n                                            <div className=\"line-price\">1999</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"classify-obj-item\">\r\n                                        <img src={Goods1} alt=\"\" />\r\n                                        <div className=\"goods-name line-clamp2\">多用途舒适枕芯 3D螺旋卷曲\r\n    立体纤维 有效缓解睡眠难题</div>\r\n                                        <div className=\"describe line-clamp1\">美观且大方，不容错过</div>\r\n                                        <div className=\"price-wrapper\">\r\n                                            <div className=\"price\">999</div>\r\n                                            <div className=\"line-price\">1999</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={10}>\r\n                        <div className={styles.pageSetWrapper}>\r\n                            {/* 图片库组件 */}\r\n                            {this.state.picLibraryStatus ? <PicLibrary picLibraryStatus={this.state.picLibraryStatus} picLibraryBackStatus={this.picLibraryBackStatus} /> : ''}\r\n                            <Form\r\n                                name=\"page_set_form\"\r\n                                initialValues={{ bannerNodesList: bannerNodesList, navNodesList: navNodesList, recNodesList: recNodesList, advNodesList: advNodesList, goodsTabNodesList: goodsTabNodesList, goodsPlayMain: goodsPlayMain }}\r\n                                onFinish={onFinish}\r\n                                onFinishFailed={onFinishFailed}>\r\n                                {/* 搜索设置 */}\r\n                                <div className={this.state.tabState === 1 ? 'search-set active' : 'search-set tab-obj-item'}>\r\n                                    <h3 className=\"page-set-title\">搜索框</h3>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"搜索文字\" name=\"searchTxt\">\r\n                                        <Input defaultValue=\"积分兑换\" onChange={(e) => this.inputChange('searchTxt', '', e)} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"搜索框样式\" name=\"searchStyle\">\r\n                                        <Radio.Group name=\"searchStyle\" options={searchSearchStyleOptions} onChange={(e) => this.radioHandle(e)} defaultValue={this.state.searchStyle} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"文字对齐方式\" name=\"seachTxtAlign\">\r\n                                        <Radio.Group name=\"seachTxtAlign\" options={seachTxtAlignOptions} onChange={(e) => this.radioHandle(e)} defaultValue={this.state.seachTxtAlign} />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                {/* 轮播设置 */}\r\n                                <div className={this.state.tabState === 2 ? 'banner-set active' : 'banner-set tab-obj-item'}>\r\n                                    <h3 className=\"page-set-title\">轮播</h3>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"指示点颜色\" name=\"bannerPointColor\">\r\n                                        <InputColor\r\n                                            initialValue=\"#ffffff\"\r\n                                            onChange={(value) => this.colorPicker('bannerPointColor', value)}\r\n                                            placement=\"right\"\r\n                                        ></InputColor>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"指示点形状\" name=\"bannerPointShape\">\r\n                                        <Radio.Group name=\"bannerPointShape\" options={bannerPointShapeOptions} onChange={(e) => this.radioHandle(e)} defaultValue={this.state.bannerPointShape} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"上下边距\" name=\"bannerTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('bannerTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"左右边距\" name=\"bannerLfteRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('bannerLfteRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    {bannerNodesItems}\r\n                                    <Form.Item>\r\n                                        <Button className=\"pull-right\" type=\"default\" onClick={() => this.addOptionsNodes('bannerNodesList')}>添加一个</Button>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                {/* 导航设置 */}\r\n                                <div className={this.state.tabState === 3 ? 'nav-set active' : 'nav-set tab-obj-item'}>\r\n                                    <h3 className=\"page-set-title\">导航</h3>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"外框背景颜色\" name=\"navOutBgCol\">\r\n                                        <InputColor\r\n                                            initialValue=\"#ffffff\"\r\n                                            onChange={(value) => this.colorPicker('navOutBgCol', value)}\r\n                                            placement=\"right\"\r\n                                        ></InputColor>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"上下边距\" name=\"navTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('navTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"左右边距\" name=\"navLeftRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('navLeftRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Divider dashed />\r\n                                    <Form.Item label=\"内框背景颜色\" name=\"navInsBgCol\">\r\n                                        <InputColor\r\n                                            initialValue=\"#ffffff\"\r\n                                            onChange={(value) => this.colorPicker('navInsBgCol', value)}\r\n                                            placement=\"right\"\r\n                                        ></InputColor>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"上边距\" name=\"navInsTopMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('navInsTopMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"右边距\" name=\"navInsRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('navInsRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"下边距\" name=\"navInsBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('navInsBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"左边距\" name=\"navInsLeftMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('navInsLeftMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"上圆角\" name=\"navInsTopRound\">\r\n                                        <Slider onChange={(value) => this.sliderChange('navInsTopRound', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"下圆角\" name=\"navInsBottomRound\">\r\n                                        <Slider onChange={(value) => this.sliderChange('navInsBottomRound', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"每行数量\" name=\"navLineNum\">\r\n                                        <Radio.Group name=\"navLineNum\" options={navLineNumOptions} onChange={(e) => this.radioHandle(e)} defaultValue={this.state.navLineNum} />\r\n                                    </Form.Item>\r\n                                    {bannerNodesItem}\r\n                                    <Form.Item>\r\n                                        <Button className=\"pull-right\" type=\"default\" onClick={() => this.addOptionsNodes('navNodesList')}>添加一个</Button>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                {/* 系统消息 */}\r\n                                <div className={this.state.tabState === 4 ? 'notice-set active' : 'notice-set tab-obj-item'}>\r\n                                    <h3 className=\"page-set-title\">系统消息</h3>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"上下边距\" name=\"noticeTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('noticeTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"左右边距\" name=\"noticeLeftRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('noticeLeftRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                {/* 热门推荐 */}\r\n                                <div className={this.state.tabState === 5 ? 'rcm-goods-set active' : 'rcm-goods-set tab-obj-item'}>\r\n                                    <h3 className=\"page-set-title\">推荐</h3>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"上下边距\" name=\"rcmTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('rcmTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"左右边距\" name=\"rcmLeftRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('rcmLeftRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    {recNodesItem}\r\n                                    <Form.Item>\r\n                                        <Button className=\"pull-right\" type=\"default\" onClick={() => this.addOptionsNodes('recNodesList')}>添加一个</Button>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                {/* 广告 */}\r\n                                <div className={this.state.tabState === 6 ? 'adv-set active' : 'adv-set tab-obj-item'}>\r\n                                    <h3 className=\"page-set-title\">广告栏</h3>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"上下边距\" name=\"advTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('advTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"左右边距\" name=\"advLeftRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('advLeftRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    {advNodesItem}\r\n                                    <Form.Item>\r\n                                        <Button className=\"pull-right\" type=\"default\" onClick={() => this.addOptionsNodes('advNodesList')}>添加一个</Button>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                {/* 商品分类导航设置 */}\r\n                                <div className={this.state.tabState === 7 ? 'goods-tab-set active' : 'goods-tab-set tab-obj-item'}>\r\n                                    <h3 className=\"page-set-title\">商品分类导航</h3>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"上下边距\" name=\"goodsTabTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsTabTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"左右边距\" name=\"goodsTabLeftRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsTabLeftRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    {goodsTabNodesItem}\r\n                                    <Form.Item>\r\n                                        <Button className=\"pull-right\" type=\"default\" onClick={() => this.addOptionsNodes('goodsTabNodesList')}>添加一个</Button>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                {/* 商品设置 */}\r\n                                <div className={this.state.tabState === 8 ? 'goods-set active' : 'goods-set tab-obj-item'}>\r\n                                    <h3 className=\"page-set-title\">商品</h3>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"商品分类\" name=\"goodsClassify\">\r\n                                        <select className=\"form-select w100\" name=\"\" id=\"\">\r\n                                            <option value=\"\">1</option>\r\n                                            <option value=\"\">2</option>\r\n                                            <option value=\"\">3</option>\r\n                                        </select>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"商品排序\" name=\"goodsSort\">\r\n                                        <Radio.Group name=\"goodsSort\" options={goodsSortOptions} onChange={(e) => this.radioHandle(e)} defaultValue={this.state.goodsSort} />\r\n                                    </Form.Item>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"商品上下边距\" name=\"goodsTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"商品左右边距\" name=\"goodsLfteRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsLfteRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"商品图片圆角\" name=\"goodsPicRound\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsPicRound', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"内框上下边距\" name=\"goodsInsTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsInsTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"内框左右边距\" name=\"goodsInsLfteRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsInsLfteRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"外框上下边距\" name=\"goodsOutTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsOutTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"外框左右边距\" name=\"goodsOutLfteRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsOutLfteRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"显示内容\" name=\"goodsPlayMain\">\r\n                                        <Checkbox\r\n                                            data-val=\"goodsName\"\r\n                                            defaultChecked={goodsPlayMain.includes('goodsName') ? true : false}\r\n                                            onChange={(e) => this.checkBoxChange('goodsPlayMain', e)}\r\n                                        >\r\n                                            商品名称\r\n                                            </Checkbox>\r\n                                        <Checkbox\r\n                                            data-val=\"goodsScr\"\r\n                                            defaultChecked={goodsPlayMain.includes('goodsScr') ? true : false}\r\n                                            onChange={(e) => this.checkBoxChange('goodsPlayMain', e)}\r\n                                        >\r\n                                            商品描述\r\n                                            </Checkbox>\r\n                                        <Checkbox\r\n                                            data-val=\"goodsPrice\"\r\n                                            defaultChecked={goodsPlayMain.includes('goodsPrice') ? true : false}\r\n                                            onChange={(e) => this.checkBoxChange('goodsPlayMain', e)}\r\n                                        >\r\n                                            商品价格\r\n                                            </Checkbox>\r\n                                        <Checkbox\r\n                                            data-val=\"goodsLinePrice\"\r\n                                            defaultChecked={goodsPlayMain.includes('goodsLinePrice') ? true : false}\r\n                                            onChange={(e) => this.checkBoxChange('goodsPlayMain', e)}\r\n                                        >\r\n                                            商品划线价格\r\n                                            </Checkbox>\r\n                                        <Checkbox\r\n                                            data-val=\"goodsSales\"\r\n                                            defaultChecked={goodsPlayMain.includes('goodsSales') ? true : false}\r\n                                            onChange={(e) => this.checkBoxChange('goodsPlayMain', e)}\r\n                                        >\r\n                                            销量\r\n                                            </Checkbox>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <Form.Item>\r\n                                    <Button className=\"pull-right\" type=\"primary\" htmlType=\"submit\">保存页面</Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PageDesign;","E:\\zm\\ThatYear\\gift-react\\src\\pages\\user\\index.jsx",["126"],"import React from 'react';\r\n// 样式\r\nimport '../../css/user.less';\r\nimport userPic from '../../assets/images/upload-user-pic.png';\r\nimport Icon from '../../assets/icon/02.png';\r\nimport Editor from 'react-umeditor';\r\n\r\n// antd 组件\r\nimport { Row, Col, Breadcrumb, Input } from 'antd';\r\n// 图片库组件\r\nimport PicLibrary from '../../components/picLibrary';\r\nconst { TextArea } = Input;\r\nclass Users extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editorStatus: false,\r\n            userName: \"\",\r\n            password: \"\",\r\n            phone: \"\",\r\n            qq: \"\",\r\n            wx: \"\",\r\n            // 编辑器\r\n            content: \"\",\r\n            // 图片库\r\n            picLibraryStatus: false\r\n        }\r\n        this.editor = this.editor.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        this.picLibraryBackStatus = this.picLibraryBackStatus.bind(this);\r\n        this.picLibraryStatusChange = this.picLibraryStatusChange.bind(this);\r\n    }\r\n    // 编辑\r\n    editor() {\r\n        this.setState({ editorStatus: true })\r\n    }\r\n    // 提交\r\n    submit() {\r\n        console.log(\"提交\")\r\n        this.setState({ editorStatus: false, userName: \"\", password: \"\", phone: \"\", qq: \"\", wx: \"\" })\r\n    }\r\n    // input监听\r\n    inputChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    // 编辑器\r\n    handleChange(content) {\r\n        this.setState({\r\n            content: content\r\n        })\r\n    }\r\n    getIcons() {\r\n        var icons = [\r\n            \"source | undo redo | bold italic underline strikethrough fontborder emphasis | \",\r\n            \"paragraph fontfamily fontsize | superscript subscript | \",\r\n            \"forecolor backcolor | removeformat | insertorderedlist insertunorderedlist | selectall | \",\r\n            \"cleardoc  | indent outdent | justifyleft justifycenter justifyright | touppercase tolowercase | \",\r\n            \"horizontal date time  | image emotion spechars | inserttable\"\r\n        ]\r\n        return icons;\r\n    }\r\n    getPlugins() {\r\n        return {\r\n            \"image\": {\r\n                \"uploader\": {\r\n                    \"name\": \"file\",\r\n                    \"url\": \"/api/upload\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 图片库=>数据返回\r\n    picLibraryBackStatus(data) {\r\n        this.setState({\r\n            picLibraryStatus: !data\r\n        })\r\n    }\r\n    picLibraryStatusChange() {\r\n        this.setState({ picLibraryStatus: true });\r\n    }\r\n    render() {\r\n        let editorStatus = this.state.editorStatus;\r\n        // 编辑器\r\n        var icons = this.getIcons();\r\n        var plugins = this.getPlugins();\r\n        return (\r\n            <div className=\"main\">\r\n                {/* 图片库组件 */}\r\n                {this.state.picLibraryStatus ? <PicLibrary picLibraryStatus={this.state.picLibraryStatus} picLibraryBackStatus={this.picLibraryBackStatus} /> : ''}\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <h3><strong>用户信息</strong></h3>\r\n                    </Col>\r\n                    <Col span={12} className=\"text-align-right\">\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item>系统</Breadcrumb.Item>\r\n                            <Breadcrumb.Item>\r\n                                用户信息\r\n                            </Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <div className=\"user-msg-card w100 box-sd pd-17 bg-fff mb-30\">\r\n                            <div className=\"card-bg w100 box-siz\">\r\n                                <div className=\"user-info pos-a\">\r\n                                    <Row>\r\n                                        <Col span={12}>\r\n                                            <div className=\"dis-flx align-items-center\">\r\n                                                <div className=\"user-pic\">\r\n                                                    {/* <img src={userPic} alt=\"\" /> */}\r\n                                                    <div className=\"cover\" onClick={this.picLibraryStatusChange}><img src={userPic} alt=\"\" /></div>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <h2 className=\"name text-white fon-30 fon-w-700 mb-0\">Michael Bean</h2> &nbsp;&nbsp;{editorStatus ? <Input name=\"userName\" className=\"ant-input-bottom-line pl-11 ant-input-color-fff\" placeholder=\"昵称\" onChange={(e) => this.inputChange(e)} /> : ''}\r\n                                                    <p className=\"lavel text-white\">- Admin</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col span={12} className=\"text-align-right align-self\">\r\n                                            {editorStatus ? <button type=\"button\" className=\"editor-btn bg-218 text-white fon-14 \" onClick={this.submit}><i className=\"mr-5 iconfont icon-tijiaochenggong\"></i>提交</button> : <button type=\"button\" className=\"editor-btn bg-218 text-white fon-14 \" onClick={this.editor}><i className=\"mr-5 iconfont icon-icon-\"></i>编辑</button>}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={30, 30}>\r\n                    <Col span={8}>\r\n                        <div className=\"about-me-card box-sd bg-fff pd-17\">\r\n                            <div className=\"title fon-w-500 pb-14 bd-bottom mb-15\"><strong>关于我</strong></div>\r\n                            {editorStatus ? <TextArea rows={4} placeholder=\"描述：\" /> : <div className=\"describe text-626 fon-w-500\">\r\n                                I have more than 9 years of experience in the field of Graphic/ E-Learning/Web Designing.\r\n                                Specialized in Adobe web & graphic designing tools and also in other tools. Professional in Corporate branding, Graphic designing, Web Designing, visualization, GUI, graphics & animations for e-learning, illustrations, web icons, logos, brochures, posters etc.\r\n                            </div>}\r\n                            <ul className=\"mt-20\">\r\n                                <li className=\"dis-flx align-items-center\">\r\n                                    <i className=\"iconfont icon-zhanghao text-84b mr-10 fon-20\"></i>\r\n                                    <span className=\"fon-13 text-626 fon-w-500\">admin</span>\r\n                                </li>\r\n                                <li className=\"dis-flx align-items-center\">\r\n                                    <i className=\"iconfont icon-mima text-17a mr-10 fon-20\"></i>\r\n                                    &nbsp;&nbsp;{editorStatus ? <Input name=\"password\" className=\"ant-input-bottom-line pl-11\" placeholder=\"新密码\" onChange={(e) => this.inputChange(e)} /> : <span className=\"fon-13 text-626 fon-w-500\">123456</span>}\r\n                                </li>\r\n                                <li className=\"dis-flx align-items-center\">\r\n                                    <i className=\"iconfont icon-weibiaoti- text-ffc mr-10 fon-20\"></i>\r\n                                    &nbsp;&nbsp;{editorStatus ? <Input name=\"phone\" className=\"ant-input-bottom-line pl-11\" placeholder=\"电话\" onChange={(e) => this.inputChange(e)} /> : <span className=\"fon-13 text-626 fon-w-500\">18820854754</span>}\r\n                                </li>\r\n                                <li className=\"dis-flx align-items-center\">\r\n                                    <i className=\"iconfont icon-qq text-dc3 mr-10 fon-20\"></i>\r\n                                    &nbsp;&nbsp;{editorStatus ? <Input name=\"qq\" className=\"ant-input-bottom-line pl-11\" placeholder=\"qq\" onChange={(e) => this.inputChange(e)} /> : <span className=\"fon-13 text-626 fon-w-500\">1693638322</span>}\r\n                                </li>\r\n                                <li className=\"dis-flx align-items-center\">\r\n                                    <i className=\"iconfont icon-weixin text-28a mr-10 fon-20\"></i>\r\n                                    &nbsp;&nbsp;{editorStatus ? <Input name=\"wx\" className=\"ant-input-bottom-line pl-11\" placeholder=\"微信\" onChange={(e) => this.inputChange(e)} /> : <span className=\"fon-13 text-626 fon-w-500\">1693638322</span>}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={16}>\r\n                        <div className=\"send-notice-card w100 box-sd pd-17 bg-fff\">\r\n                            <div className=\"title fon-w-500 pb-14 bd-bottom mb-15\"><strong>发布通知</strong></div>\r\n                            <Editor ref=\"editor\"\r\n                                icons={icons}\r\n                                value={this.state.content} defaultValue=\"<p>React Umeditor</p>\"\r\n                                onChange={this.handleChange.bind(this)}\r\n                                plugins={plugins} />\r\n                            <button className=\"send out-line-none mt-30\">发布</button>\r\n                        </div>\r\n                        <div className=\"notice-card w100 box-sd pd-17 bg-fff\">\r\n                            <div className=\"title fon-w-500 pb-14 bd-bottom mb-15\"><strong>系统通知</strong></div>\r\n                            <ul>\r\n                                <li className=\"dis-flx align-items-center bd-bottom\">\r\n                                    <img className=\"\" src={Icon} alt=\"\" />\r\n                                    <div>\r\n                                        <h2 className=\"mb-0\">Martin smith </h2>\r\n                                        <p className=\"fon-13 text-626 line-clamp2\">Create tailor-cut websites with the exclusive </p>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users;","E:\\zm\\ThatYear\\gift-react\\src\\pages\\demo.jsx",["127","128","129","130","131","132","133"],"import React, { useState } from 'react'\r\nimport { Modal, Button, Row, Col, Select, Upload, message, Pagination, Input, Popconfirm } from 'antd';\r\nimport { QuestionCircleOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport Draggable from 'react-draggable';\r\nimport Delete from '../assets/images/pageDesign/delete.png';\r\nimport Editor from '../assets/images/pageDesign/editor.png';\r\nimport Checkout from '../assets/images/checkout.png';\r\nimport axios from '../common/js/axios';\r\nimport styles from '../css/demo.module.css';\r\nconst { Option } = Select;\r\nconst { confirm } = Modal;\r\n// 文件上传\r\n// class Demo extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.upLoadFile = this.upLoadFile.bind(this);\r\n//     }\r\n//     upLoadFile(e) {\r\n//         console.log(\"e\", e);\r\n//         console.log('files', e.target.files);\r\n//         e.preventDefault();\r\n//         let file = e.target.files[0];\r\n//         const formdata = new FormData();\r\n//         formdata.append('file', file);\r\n//         axios.postAxios('/pageDesign/index', formdata).then(res => {\r\n//             console.log('res',res)\r\n//         })\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <input type=\"file\" onChange={this.upLoadFile} />\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n// 图标\r\n// import { createFromIconfontCN } from '@ant-design/icons';\r\n\r\n// const IconFont = createFromIconfontCN({\r\n//   scriptUrl: [\r\n//     '//at.alicdn.com/t/font_1788044_0dwu4guekcwr.js', // icon-javascript, icon-java, icon-shoppingcart (overrided)\r\n//     '//at.alicdn.com/t/font_1788592_a5xf2bdic3u.js', // icon-shoppingcart, icon-python\r\n//   ],\r\n// });\r\n\r\n// ReactDOM.render(\r\n//   <div className=\"icons-list\">\r\n//     <IconFont type=\"icon-javascript\" />\r\n//     <IconFont type=\"icon-java\" />\r\n//     <IconFont type=\"icon-shoppingcart\" />\r\n//     <IconFont type=\"icon-python\" />\r\n//   </div>,\r\n//   mountNode,\r\n// );\r\n// 确认对话框\r\nfunction showConfirm() {\r\n    confirm({\r\n        centered: true,\r\n        title: '确定移动该图片吗?',\r\n        okText: \"确定\",\r\n        cancelText: \"取消\",\r\n        icon: <ExclamationCircleOutlined />,\r\n        content: '移动后将不在该分组内',\r\n        onOk() {\r\n            console.log('OK');\r\n        },\r\n        onCancel() {\r\n            console.log('Cancel');\r\n        },\r\n    });\r\n}\r\n// 对话框\r\nclass AddGroup extends React.Component {\r\n    constructor(props) {\r\n        console.log('props', props)\r\n        super(props)\r\n        this.state = {\r\n            isModalVisible: this.props.isModalVisible\r\n        }\r\n        this.handleOk = this.handleOk.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n    }\r\n    handleOk() {\r\n        this.setState({\r\n            isModalVisible: false\r\n        })\r\n        this.props.changeAddGroupStatus(this.state.isModalVisible)\r\n    };\r\n\r\n    handleCancel() {\r\n        this.setState({\r\n            isModalVisible: false\r\n        })\r\n        this.props.changeAddGroupStatus(this.state.isModalVisible)\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <Modal centered title=\"添加分组\" visible={this.state.isModalVisible} onOk={this.handleOk} onCancel={this.handleCancel} cancelText=\"取消\"\r\n                    okText=\"确定\"\r\n                    width=\"320px\"\r\n                    centered>\r\n                    <Input placeholder=\"分组名称\" />\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\nclass Demo extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            // 显示/隐藏\r\n            visible: false,\r\n            //禁用 是/否\r\n            disabled: true,\r\n            bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n            // 侧边栏列表\r\n            sideList: [\r\n                { id: 1, txt: \"1\" }\r\n            ],\r\n            currentSideItemId: 0,\r\n            // 添加分组\r\n            isModalVisible: false,\r\n            // 图片列表\r\n            picList: [\r\n                { id: 0, imgUrl: \"https://www.chaorenmall.com/uploads/1/202009241802589a73a3073.jpg\", picName: \"1\", coverBol: false, },\r\n                { id: 1, imgUrl: \"https://www.chaorenmall.com/uploads/1/202103151505592d64e7876.jpg\", picName: \"2\", coverBol: false },\r\n                { id: 2, imgUrl: \"https://www.chaorenmall.com/uploads/1/202103151505592d64e7876.jpg\", picName: \"1\", coverBol: false },\r\n                { id: 3, imgUrl: \"https://www.chaorenmall.com/uploads/1/202103151505592d64e7876.jpg\", picName: \"1\", coverBol: false },\r\n                { id: 4, imgUrl: \"https://www.chaorenmall.com/uploads/1/202103151505592d64e7876.jpg\", picName: \"1\", coverBol: false },\r\n                { id: 5, imgUrl: \"https://www.chaorenmall.com/uploads/1/202103151505592d64e7876.jpg\", picName: \"1\", coverBol: false },\r\n                { id: 6, imgUrl: \"https://www.chaorenmall.com/uploads/1/202103151505592d64e7876.jpg\", picName: \"1\", coverBol: false },\r\n                { id: 7, imgUrl: \"https://www.chaorenmall.com/uploads/1/202103151505592d64e7876.jpg\", picName: \"1\", coverBol: false },\r\n                { id: 8, imgUrl: \"https://www.chaorenmall.com/uploads/1/202103151505592d64e7876.jpg\", picName: \"1\", coverBol: false },\r\n            ],\r\n            picCollection: []\r\n        }\r\n        this.sideItemChange = this.sideItemChange.bind(this)\r\n        this.addGroupChange = this.addGroupChange.bind(this)\r\n        this.changeAddGroupStatus = this.changeAddGroupStatus.bind(this)\r\n        this.movePic = this.movePic.bind(this)\r\n        this.deletePic = this.deletePic.bind(this)\r\n        this.editorGroup = this.editorGroup.bind(this)\r\n        this.deleteGroup = this.deleteGroup.bind(this)\r\n        this.ckeckPic = this.ckeckPic.bind(this)\r\n        this.pageChange = this.pageChange.bind(this)\r\n    }\r\n    // 对话框显示\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n    // 对话框隐藏\r\n    handleOk = e => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    // 对话框=>删除/取消\r\n    handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    // 侧边栏点击事件\r\n    sideItemChange(e) {\r\n        console.log(\"b\")\r\n        let groupId = Number(e.target.dataset.groupId);\r\n        this.setState({\r\n            currentSideItemId: groupId\r\n        })\r\n    }\r\n    // 添加分组\r\n    addGroupChange() {\r\n        this.setState({ isModalVisible: true })\r\n    }\r\n    // 编辑分组\r\n    editorGroup(e) {\r\n        e.stopPropagation();\r\n        this.setState({ isModalVisible: true })\r\n    }\r\n    // 删除分组\r\n    deleteGroup(e) {\r\n        e.stopPropagation();\r\n    }\r\n    // 子组件传值\r\n    changeAddGroupStatus(data) {\r\n        this.setState({\r\n            isModalVisible: !data\r\n        })\r\n    }\r\n    // 移动图片\r\n    movePic() {\r\n        console.log(\"a\")\r\n        showConfirm()\r\n    }\r\n    // 删除图片\r\n    deletePic() {\r\n        console.log(\"a\")\r\n    }\r\n    // 选取图片\r\n    ckeckPic(index) {\r\n        let picList = this.state.picList;\r\n        let picCollection = this.state.picCollection;\r\n        picList[index].coverBol = !picList[index].coverBol;\r\n        this.setState(picList);\r\n        if (picList[index].coverBol) {\r\n            picCollection.push(picList[index].imgUrl)\r\n        } else {\r\n            picCollection.splice(picCollection.indexOf(picList[index].imgUrl), 1)\r\n        }\r\n        this.setState(picCollection);\r\n        console.log('picCollection', picCollection)\r\n    }\r\n    // 分页\r\n    pageChange(page, pageSize){\r\n        console.log('page',page);\r\n        console.log('pageSize',pageSize);\r\n    }\r\n    onStart = (event, uiData) => {\r\n        const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n        const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n        this.setState({\r\n            bounds: {\r\n                left: -targetRect?.left + uiData?.x,\r\n                right: clientWidth - (targetRect?.right - uiData?.x),\r\n                top: -targetRect?.top + uiData?.y,\r\n                bottom: clientHeight - (targetRect?.bottom - uiData?.y),\r\n            },\r\n        });\r\n    };\r\n    draggleRef = React.createRef();\r\n    render() {\r\n        const { bounds, disabled, visible } = this.state;\r\n        let sideList = this.state.sideList;\r\n        return (\r\n            <>\r\n                {this.state.isModalVisible ? <AddGroup isModalVisible={this.state.isModalVisible} changeAddGroupStatus={this.changeAddGroupStatus} /> : ''}\r\n                <Button onClick={this.showModal}>Open Draggable Modal</Button>\r\n                <Modal\r\n                    centered\r\n                    title={\r\n                        <div\r\n                            style={{\r\n                                width: '100%',\r\n                                cursor: 'move',\r\n                            }}\r\n                            onMouseOver={() => {\r\n                                if (disabled) {\r\n                                    this.setState({\r\n                                        disabled: false,\r\n                                    });\r\n                                }\r\n                            }}\r\n                            onMouseOut={() => {\r\n                                this.setState({\r\n                                    disabled: true,\r\n                                });\r\n                            }}\r\n                            // fix eslintjsx-a11y/mouse-events-have-key-events\r\n                            // https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/master/docs/rules/mouse-events-have-key-events.md\r\n                            onFocus={() => { }}\r\n                            onBlur={() => { }}\r\n                        // end\r\n                        >\r\n                            图片库\r\n                        </div>\r\n                    }\r\n                    visible={visible}\r\n                    // 点击确定回调\r\n                    onOk={this.handleOk}\r\n                    // 点击遮罩层或右上角叉或取消按钮的回调\r\n                    onCancel={this.handleCancel}\r\n                    // 自定义渲染对话框\r\n                    modalRender={modal => (\r\n                        <Draggable\r\n                            disabled={disabled}\r\n                            bounds={bounds}\r\n                            onStart={(event, uiData) => this.onStart(event, uiData)}\r\n                        >\r\n                            <div ref={this.draggleRef}>{modal}</div>\r\n                        </Draggable>\r\n                    )}\r\n                    cancelText=\"取消\"\r\n                    okText=\"确定\"\r\n                    width=\"840px\"\r\n                    bodyStyle={{ padding: \"0\" }}\r\n                >\r\n                    <Row>\r\n                        <Col span={4}>\r\n                            <ul className={styles.sidebar}>\r\n                                <li className={this.state.currentSideItemId === 0 ? \"side-item side-item-active\" : \"side-item\"} data-group-id={0} onClick={this.sideItemChange}>全部</li>\r\n                                <li className={this.state.currentSideItemId === 1 ? \"side-item side-item-active\" : \"side-item\"} data-group-id={1} onClick={this.sideItemChange}>未分组</li>\r\n                                {sideList.map((item, index) => {\r\n                                    return (\r\n                                        <React.Fragment key={item.id}>\r\n                                            <li\r\n                                                className={this.state.currentSideItemId === index + 2 ? \"new-side-item side-item side-item-active\" : \"  new-side-item side-item\"}\r\n                                                data-group-id={index + 2}\r\n                                                onClick={this.sideItemChange}\r\n                                            >\r\n                                                <div className=\"editor\" onClick={this.editorGroup}><img src={Editor} alt=\"\" /></div>\r\n                                                {item.txt}\r\n                                                <Popconfirm cancelText=\"取消\" okText=\"确定\" title=\"确定删除该分组吗？\" onConfirm={this.deleteGroup} icon={<QuestionCircleOutlined style={{ color: 'red' }} />}>\r\n                                                    <div className=\"delete\"><img src={Delete} alt=\"\" /></div>\r\n                                                </Popconfirm>\r\n                                            </li>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                            <div className={styles.addGroup} onClick={this.addGroupChange}>新增分组</div>\r\n                        </Col>\r\n                        <Col span={20}>\r\n                        <div className={styles.sidebarChangeObj}>\r\n                                <div className=\"top dis-flx justify-space-between\">\r\n                                    <div className=\"left\">\r\n                                        <Select placeholder=\"移动图片\" style={{ width: 120 }} onSelect={this.movePic}>\r\n                                            <Option value=\"jack\">Jack</Option>\r\n                                            <Option value=\"lucy\">Lucy</Option>\r\n                                        </Select>\r\n                                        <Popconfirm cancelText=\"取消\" okText=\"确定\" title=\"确定删除吗？\" onConfirm={this.deletePic} icon={<QuestionCircleOutlined style={{ color: 'red' }} />}>\r\n                                            <button type=\"button\" className=\"delete-btn\"><i className=\"iconfont icon-shanchu fon-14\" style={{\r\n                                                marginRight: 4\r\n                                            }}></i>删除</button>\r\n                                        </Popconfirm>\r\n                                    </div>\r\n                                    <div className=\"right\">\r\n                                        <div className=\"upload-file\">\r\n                                            <i className=\"iconfont icon-tianjia fon-14\" style={{\r\n                                                marginRight: 4\r\n                                            }}></i>\r\n                                              上传图片\r\n                                              <input type=\"file\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <ul className=\"content\">\r\n                                    {this.state.picList.map((item, index) => {\r\n                                        return (\r\n                                            <React.Fragment key={item.id}>\r\n                                                <li onClick={() => this.ckeckPic(index)}>\r\n                                                    <div className=\"img-box\">\r\n                                                        <div className=\"img\" style={{ backgroundImage: \"url(\" + `${item.imgUrl}` + \")\" }}></div>\r\n                                                        <p className=\"line-clamp1\">{item.picName}</p>\r\n                                                        <div className={item.coverBol ? \"cover cover-active\" : \"cover\"}>\r\n                                                            <img src={Checkout} alt=\"\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </li>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    })}\r\n                                </ul>\r\n                                <Pagination className=\"pull-right\" simple pageSize={12} total={50} onChange={this.pageChange} />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n// import { Form, Input, Button, Row, Col } from 'antd'\r\n\r\n// const Demo = () => {\r\n//     const [contacts, setContacts] = useState([{ name: 'zhangsan', mobile: '15011176302' }]);\r\n//     console.log('contacts', contacts)\r\n//     // 提交\r\n//     const [form] = Form.useForm()\r\n//     const submitForm = () => {\r\n//         form.validateFields()\r\n//             .then(values => {\r\n//                 console.log(values);\r\n//             })\r\n//     }\r\n//     // 添加\r\n//     const add = () => {\r\n//         form.setFieldsValue({ \"contacts\": [...contacts, { name: '', mobile: '' }] })\r\n//         return setContacts([...contacts, { name: '', mobile: '' }])\r\n//     }\r\n//     // 删除\r\n//     const del = (index) => {\r\n//         form.setFieldsValue({ \"contacts\": [...contacts.slice(0, index), ...contacts.slice(index + 1)] })\r\n//         return setContacts([...contacts.slice(0, index), ...contacts.slice(index + 1)])\r\n//     }\r\n//     // 输入框监听\r\n//     const onChange = (index, name, event) => {\r\n//         let tempArray = [...contacts];\r\n//         if ('name' === name)\r\n//             tempArray[index] = { ...tempArray[index], name: event.target.value }\r\n//         else\r\n//             tempArray[index] = { ...tempArray[index], mobile: event.target.value }\r\n//         return setContacts(tempArray)\r\n//     }\r\n//     const contactsItems = contacts.map((item, index) => {\r\n//         return <Row key={index}>\r\n//             <Col span={10}>\r\n//                 <Form.Item label=\"name\" name={['contacts', index, 'name']}><Input onChange={(event) => onChange(index, 'name', event)} /></Form.Item>\r\n//             </Col>\r\n//             <Col span={10}>\r\n//                 <Form.Item label=\"mobile\" name={['contacts', index, 'mobile']} ><Input onChange={(event) => onChange(index, 'mobile', event)} /></Form.Item>\r\n//             </Col>\r\n//             <Col span={3} offset={1}>\r\n//                 <Button type=\"primary\" onClick={() => del(index)}>-</Button>\r\n//             </Col>\r\n//         </Row>\r\n//     })\r\n//     return <Row>\r\n//         <Col>\r\n//             <Form name=\"user_form\" form={form} layout={'horizontal'} onFinish={submitForm} initialValues={{ contacts: contacts }}>\r\n//                 <Form.Item label=\"username\" name=\"username\">\r\n//                     <Input />\r\n//                 </Form.Item>\r\n//                 <Form.Item label=\"contacts\">\r\n//                     {contactsItems}\r\n//                 </Form.Item>\r\n//                 <Form.Item><Button type=\"primary\" onClick={add}>+</Button></Form.Item>\r\n//                 <Form.Item>\r\n//                     <Button type=\"primary\" htmlType='submit'>submit</Button>\r\n//                 </Form.Item>\r\n//             </Form>\r\n//         </Col>\r\n//     </Row>\r\n// }\r\nexport default Demo","E:\\zm\\ThatYear\\gift-react\\src\\pages\\error\\404.jsx",["134"],"import React from 'react';\r\n// 样式\r\nimport '../../css/404.less';\r\n// 图片\r\nimport errorImg from '../../assets/images/error.png';\r\n// antd 组件\r\nimport { Row, Col, Breadcrumb } from 'antd';\r\nclass ErrorPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                {/* 标题导航 */}\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <h3><strong>404错误</strong></h3>\r\n                    </Col>\r\n                    <Col span={12} className=\"text-align-right\">\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item>首页</Breadcrumb.Item>\r\n                            <Breadcrumb.Item>错误</Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <div className=\"card pd-22 mt-22 bg-fff \">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"error\">\r\n                                    <h1>404</h1>\r\n                                    <h2>error</h2>\r\n                                </div>\r\n                                <img src={errorImg}/>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ErrorPage;","E:\\zm\\ThatYear\\gift-react\\src\\pages\\members\\index.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\goods\\goodsDetail.jsx",["135","136","137","138","139","140"],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\system\\index.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\goods\\addGoods.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\order\\orderDetail.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\goods\\index.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\order\\index.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\siteinfo.js",[],"E:\\zm\\ThatYear\\gift-react\\src\\components\\picLibrary.jsx",["141","142","143","144","145","146"],"import React from 'react'\r\nimport { Modal, Button, Row, Col, Select, message, Pagination, Input, Popconfirm } from 'antd';\r\nimport { QuestionCircleOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport Draggable from 'react-draggable';\r\nimport Delete from '../assets/images/pageDesign/delete.png';\r\nimport Editor from '../assets/images/pageDesign/editor.png';\r\nimport Checkout from '../assets/images/checkout.png';\r\nimport axios from '../common/js/axios';\r\nimport styles from '../css/picLibrary.module.css';\r\nconst { Option } = Select;\r\nconst { confirm } = Modal;\r\n// 对话框=>确认\r\nfunction showConfirm() {\r\n    confirm({\r\n        centered: true,\r\n        title: '确定移动该图片吗?',\r\n        okText: \"确定\",\r\n        cancelText: \"取消\",\r\n        icon: <ExclamationCircleOutlined />,\r\n        content: '移动后将不在该分组内',\r\n        onOk() {\r\n            console.log('OK');\r\n        },\r\n        onCancel() {\r\n            console.log('Cancel');\r\n        },\r\n    });\r\n}\r\n// 对话框=> 添加分组\r\nclass AddGroup extends React.Component {\r\n    constructor(props) {\r\n        console.log('props', props)\r\n        super(props)\r\n        this.state = {\r\n            isModalVisible: this.props.isModalVisible\r\n        }\r\n        this.handleOk = this.handleOk.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n    }\r\n    handleOk() {\r\n        this.setState({\r\n            isModalVisible: false\r\n        })\r\n        this.props.changeAddGroupStatus(this.state.isModalVisible)\r\n    };\r\n\r\n    handleCancel() {\r\n        this.setState({\r\n            isModalVisible: false\r\n        })\r\n        this.props.changeAddGroupStatus(this.state.isModalVisible)\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <Modal centered title=\"添加分组\" visible={this.state.isModalVisible} onOk={this.handleOk} onCancel={this.handleCancel} cancelText=\"取消\"\r\n                    okText=\"确定\"\r\n                    width=\"320px\"\r\n                    centered>\r\n                    <Input placeholder=\"分组名称\" />\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n// 对话框=> 图片库\r\nclass PicLibrary extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        console.log(\"props\",props)\r\n        this.state = {\r\n            // 显示/隐藏\r\n            visible: this.props.picLibraryStatus,\r\n            //禁用 是/否\r\n            disabled: true,\r\n            bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n            // 侧边栏列表\r\n            sideList: [\r\n                { id: 1, txt: \"1\" }\r\n            ],\r\n            currentSideItemId: 0,\r\n            // 添加分组\r\n            isModalVisible: false,\r\n            // 图片列表\r\n            picList: [\r\n                { id: 0, imgUrl: \"https://www.chaorenmall.com/uploads/1/202103151505592d64e7876.jpg\", picName: \"1\", coverBol: false, },\r\n                { id: 1, imgUrl: \"https://www.chaorenmall.com/uploads/1/202103151505592d64e7876.jpg\", picName: \"2\", coverBol: false },\r\n                { id: 2, imgUrl: \"https://www.chaorenmall.com/uploads/1/202103151505592d64e7876.jpg\", picName: \"1\", coverBol: false },\r\n                { id: 3, imgUrl: \"https://www.chaorenmall.com/uploads/1/202103151505592d64e7876.jpg\", picName: \"1\", coverBol: false },\r\n                { id: 4, imgUrl: \"https://www.chaorenmall.com/uploads/1/202103151505592d64e7876.jpg\", picName: \"1\", coverBol: false },\r\n                { id: 5, imgUrl: \"https://www.chaorenmall.com/uploads/1/202103151505592d64e7876.jpg\", picName: \"1\", coverBol: false },\r\n                { id: 6, imgUrl: \"https://www.chaorenmall.com/uploads/1/202103151505592d64e7876.jpg\", picName: \"1\", coverBol: false },\r\n                { id: 7, imgUrl: \"https://www.chaorenmall.com/uploads/1/202103151505592d64e7876.jpg\", picName: \"1\", coverBol: false },\r\n                { id: 8, imgUrl: \"https://www.chaorenmall.com/uploads/1/202103151505592d64e7876.jpg\", picName: \"1\", coverBol: false },\r\n            ],\r\n            picCollection: []\r\n        }\r\n        this.sideItemChange = this.sideItemChange.bind(this)\r\n        this.addGroupChange = this.addGroupChange.bind(this)\r\n        this.changeAddGroupStatus = this.changeAddGroupStatus.bind(this)\r\n        this.movePic = this.movePic.bind(this)\r\n        this.deletePic = this.deletePic.bind(this)\r\n        this.editorGroup = this.editorGroup.bind(this)\r\n        this.deleteGroup = this.deleteGroup.bind(this)\r\n        this.ckeckPic = this.ckeckPic.bind(this)\r\n        this.pageChange = this.pageChange.bind(this)\r\n    }\r\n    // 对话框显示\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n    // 对话框隐藏\r\n    handleOk = e => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n        this.props.picLibraryBackStatus(this.state.visible)\r\n    };\r\n    // 对话框=>删除/取消/背景\r\n    handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n        this.props.picLibraryBackStatus(this.state.visible)\r\n    };\r\n    // 侧边栏点击事件\r\n    sideItemChange(e) {\r\n        console.log(\"b\")\r\n        let groupId = Number(e.target.dataset.groupId);\r\n        this.setState({\r\n            currentSideItemId: groupId\r\n        })\r\n    }\r\n    // 添加分组\r\n    addGroupChange() {\r\n        this.setState({ isModalVisible: true })\r\n    }\r\n    // 编辑分组\r\n    editorGroup(e) {\r\n        e.stopPropagation();\r\n        this.setState({ isModalVisible: true })\r\n    }\r\n    // 删除分组\r\n    deleteGroup(e) {\r\n        e.stopPropagation();\r\n    }\r\n    // 子组件传值\r\n    changeAddGroupStatus(data) {\r\n        this.setState({\r\n            isModalVisible: !data\r\n        })\r\n    }\r\n    // 移动图片\r\n    movePic() {\r\n        console.log(\"a\")\r\n        showConfirm()\r\n    }\r\n    // 删除图片\r\n    deletePic() {\r\n        console.log(\"a\")\r\n    }\r\n    // 选取图片\r\n    ckeckPic(index) {\r\n        let picList = this.state.picList;\r\n        let picCollection = this.state.picCollection;\r\n        picList[index].coverBol = !picList[index].coverBol;\r\n        this.setState(picList);\r\n        if (picList[index].coverBol) {\r\n            picCollection.push(picList[index].imgUrl)\r\n        } else {\r\n            picCollection.splice(picCollection.indexOf(picList[index].imgUrl), 1)\r\n        }\r\n        this.setState(picCollection);\r\n        console.log('picCollection', picCollection)\r\n    }\r\n    // 分页\r\n    pageChange(page, pageSize) {\r\n        console.log('page', page);\r\n        console.log('pageSize', pageSize);\r\n    }\r\n    onStart = (event, uiData) => {\r\n        const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n        const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n        this.setState({\r\n            bounds: {\r\n                left: -targetRect?.left + uiData?.x,\r\n                right: clientWidth - (targetRect?.right - uiData?.x),\r\n                top: -targetRect?.top + uiData?.y,\r\n                bottom: clientHeight - (targetRect?.bottom - uiData?.y),\r\n            },\r\n        });\r\n    };\r\n    draggleRef = React.createRef();\r\n    render() {\r\n        const { bounds, disabled, visible } = this.state;\r\n        let sideList = this.state.sideList;\r\n        return (\r\n            <>\r\n                {this.state.isModalVisible ? <AddGroup isModalVisible={this.state.isModalVisible} changeAddGroupStatus={this.changeAddGroupStatus} /> : ''}\r\n                <Modal\r\n                    centered\r\n                    title={\r\n                        <div\r\n                            style={{\r\n                                width: '100%',\r\n                                cursor: 'move',\r\n                            }}\r\n                            onMouseOver={() => {\r\n                                if (disabled) {\r\n                                    this.setState({\r\n                                        disabled: false,\r\n                                    });\r\n                                }\r\n                            }}\r\n                            onMouseOut={() => {\r\n                                this.setState({\r\n                                    disabled: true,\r\n                                });\r\n                            }}\r\n                            // fix eslintjsx-a11y/mouse-events-have-key-events\r\n                            // https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/master/docs/rules/mouse-events-have-key-events.md\r\n                            onFocus={() => { }}\r\n                            onBlur={() => { }}\r\n                        // end\r\n                        >\r\n                            图片库\r\n                        </div>\r\n                    }\r\n                    visible={visible}\r\n                    // 点击确定回调\r\n                    onOk={this.handleOk}\r\n                    // 点击遮罩层或右上角叉或取消按钮的回调\r\n                    onCancel={this.handleCancel}\r\n                    // 自定义渲染对话框\r\n                    modalRender={modal => (\r\n                        <Draggable\r\n                            disabled={disabled}\r\n                            bounds={bounds}\r\n                            onStart={(event, uiData) => this.onStart(event, uiData)}\r\n                        >\r\n                            <div ref={this.draggleRef}>{modal}</div>\r\n                        </Draggable>\r\n                    )}\r\n                    cancelText=\"取消\"\r\n                    okText=\"确定\"\r\n                    width=\"840px\"\r\n                    bodyStyle={{ padding: \"0\" }}\r\n                >\r\n                    <Row>\r\n                        <Col span={4}>\r\n                            <ul className={styles.sidebar}>\r\n                                <li className={this.state.currentSideItemId === 0 ? \"side-item side-item-active\" : \"side-item\"} data-group-id={0} onClick={this.sideItemChange}>全部</li>\r\n                                <li className={this.state.currentSideItemId === 1 ? \"side-item side-item-active\" : \"side-item\"} data-group-id={1} onClick={this.sideItemChange}>未分组</li>\r\n                                {sideList.map((item, index) => {\r\n                                    return (\r\n                                        <React.Fragment key={item.id}>\r\n                                            <li\r\n                                                className={this.state.currentSideItemId === index + 2 ? \"new-side-item side-item side-item-active\" : \"  new-side-item side-item\"}\r\n                                                data-group-id={index + 2}\r\n                                                onClick={this.sideItemChange}\r\n                                            >\r\n                                                <div className=\"editor\" onClick={this.editorGroup}><img src={Editor} alt=\"\" /></div>\r\n                                                {item.txt}\r\n                                                <Popconfirm cancelText=\"取消\" okText=\"确定\" title=\"确定删除该分组吗？\" onConfirm={this.deleteGroup} icon={<QuestionCircleOutlined style={{ color: 'red' }} />}>\r\n                                                    <div className=\"delete\"><img src={Delete} alt=\"\" /></div>\r\n                                                </Popconfirm>\r\n                                            </li>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                            <div className={styles.addGroup} onClick={this.addGroupChange}>新增分组</div>\r\n                        </Col>\r\n                        <Col span={20}>\r\n                            <div className={styles.sidebarChangeObj}>\r\n                                <div className=\"top dis-flx justify-space-between\">\r\n                                    <div className=\"left\">\r\n                                        <Select placeholder=\"移动图片\" style={{ width: 120 }} onSelect={this.movePic}>\r\n                                            <Option value=\"jack\">Jack</Option>\r\n                                            <Option value=\"lucy\">Lucy</Option>\r\n                                        </Select>\r\n                                        <Popconfirm cancelText=\"取消\" okText=\"确定\" title=\"确定删除吗？\" onConfirm={this.deletePic} icon={<QuestionCircleOutlined style={{ color: 'red' }} />}>\r\n                                            <button type=\"button\" className=\"delete-btn\"><i className=\"iconfont icon-shanchu fon-14\" style={{\r\n                                                marginRight: 4\r\n                                            }}></i>删除</button>\r\n                                        </Popconfirm>\r\n                                    </div>\r\n                                    <div className=\"right\">\r\n                                        <button className=\"upload-file\">\r\n                                            <i className=\"iconfont icon-tianjia fon-14\" style={{\r\n                                                marginRight: 4\r\n                                            }}></i>\r\n                                              上传图片\r\n                                              <input type=\"file\" />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <ul className=\"content\">\r\n                                    {this.state.picList.map((item, index) => {\r\n                                        return (\r\n                                            <React.Fragment key={item.id}>\r\n                                                <li onClick={() => this.ckeckPic(index)}>\r\n                                                    <div className=\"img-box\">\r\n                                                        <div className=\"img\" style={{ backgroundImage: \"url(\" + `${item.imgUrl}` + \")\" }}></div>\r\n                                                        <p className=\"line-clamp1\">{item.picName}</p>\r\n                                                        <div className={item.coverBol ? \"cover cover-active\" : \"cover\"}>\r\n                                                            <img src={Checkout} alt=\"\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </li>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    })}\r\n                                </ul>\r\n                                <Pagination className=\"pull-right\" simple pageSize={12} total={50} onChange={this.pageChange} />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PicLibrary","E:\\zm\\ThatYear\\gift-react\\src\\components\\chat.jsx",["147","148","149","150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":9,"column":8,"nodeType":"157","messageId":"158","endLine":9,"endColumn":12},{"ruleId":"155","severity":1,"message":"159","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":23},{"ruleId":"155","severity":1,"message":"160","line":6,"column":78,"nodeType":"157","messageId":"158","endLine":6,"endColumn":93},{"ruleId":"161","severity":1,"message":"162","line":144,"column":9,"nodeType":"163","messageId":"164","endLine":182,"endColumn":10},{"ruleId":"161","severity":1,"message":"162","line":150,"column":33,"nodeType":"163","messageId":"164","endLine":170,"endColumn":34},{"ruleId":"165","severity":1,"message":"166","line":42,"column":1,"nodeType":"167","endLine":45,"endColumn":2},{"ruleId":"168","severity":1,"message":"169","line":50,"column":13,"nodeType":"170","messageId":"171","endLine":50,"endColumn":27},{"ruleId":"172","severity":1,"message":"173","line":142,"column":13,"nodeType":"174","messageId":"171","endLine":144,"endColumn":23},{"ruleId":"175","severity":1,"message":"176","line":239,"column":13,"nodeType":"174","messageId":"177","endLine":240,"endColumn":23},{"ruleId":"178","severity":1,"message":"179","line":132,"column":32,"nodeType":"180","messageId":"181","endLine":132,"endColumn":33},{"ruleId":"155","severity":1,"message":"182","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"183","line":2,"column":43,"nodeType":"157","messageId":"158","endLine":2,"endColumn":49},{"ruleId":"155","severity":1,"message":"184","line":2,"column":51,"nodeType":"157","messageId":"158","endLine":2,"endColumn":58},{"ruleId":"155","severity":1,"message":"185","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":13},{"ruleId":"186","severity":1,"message":"187","line":103,"column":21,"nodeType":"188","endLine":103,"endColumn":29},{"ruleId":"189","severity":1,"message":"190","line":348,"column":111,"nodeType":"191","messageId":"192","endLine":348,"endColumn":112},{"ruleId":"189","severity":1,"message":"190","line":348,"column":130,"nodeType":"191","messageId":"192","endLine":348,"endColumn":131},{"ruleId":"193","severity":1,"message":"194","line":32,"column":33,"nodeType":"195","endLine":32,"endColumn":54},{"ruleId":"155","severity":1,"message":"182","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"183","line":7,"column":60,"nodeType":"157","messageId":"158","endLine":7,"endColumn":66},{"ruleId":"155","severity":1,"message":"196","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":15},{"ruleId":"155","severity":1,"message":"197","line":98,"column":15,"nodeType":"157","messageId":"158","endLine":98,"endColumn":23},{"ruleId":"155","severity":1,"message":"198","line":102,"column":15,"nodeType":"157","messageId":"158","endLine":102,"endColumn":24},{"ruleId":"175","severity":1,"message":"176","line":282,"column":13,"nodeType":"174","messageId":"177","endLine":283,"endColumn":23},{"ruleId":"155","severity":1,"message":"199","line":2,"column":17,"nodeType":"157","messageId":"158","endLine":2,"endColumn":23},{"ruleId":"155","severity":1,"message":"184","line":2,"column":43,"nodeType":"157","messageId":"158","endLine":2,"endColumn":50},{"ruleId":"155","severity":1,"message":"185","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":13},{"ruleId":"186","severity":1,"message":"187","line":59,"column":21,"nodeType":"188","endLine":59,"endColumn":29},{"ruleId":"189","severity":1,"message":"190","line":307,"column":111,"nodeType":"191","messageId":"192","endLine":307,"endColumn":112},{"ruleId":"189","severity":1,"message":"190","line":307,"column":130,"nodeType":"191","messageId":"192","endLine":307,"endColumn":131},{"ruleId":"200","severity":1,"message":"201","line":8,"column":5,"nodeType":"202","messageId":"203","endLine":10,"endColumn":6},{"ruleId":"193","severity":1,"message":"194","line":26,"column":41,"nodeType":"195","endLine":26,"endColumn":62},{"ruleId":"193","severity":1,"message":"194","line":54,"column":37,"nodeType":"195","endLine":54,"endColumn":58},{"ruleId":"193","severity":1,"message":"194","line":64,"column":37,"nodeType":"195","endLine":64,"endColumn":58},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'Chat' is defined but never used.","Identifier","unusedVar","'HeaderMoudleCss' is defined but never used.","'MessageOutlined' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'navInsTopRound'.","ObjectExpression","unexpected","no-duplicate-case","Duplicate case label.","SwitchCase","no-fallthrough","Expected a 'break' statement before 'default'.","default","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useState' is defined but never used.","'Upload' is defined but never used.","'message' is defined but never used.","'axios' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ImgCrop' is defined but never used.","'onChange' is assigned a value but never used.","'onPreview' is assigned a value but never used.","'Button' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]