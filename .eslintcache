[{"E:\\zm\\ThatYear\\gift-react\\src\\index.js":"1","E:\\zm\\ThatYear\\gift-react\\src\\reportWebVitals.js":"2","E:\\zm\\ThatYear\\gift-react\\src\\App.js":"3","E:\\zm\\ThatYear\\gift-react\\src\\components\\header.jsx":"4","E:\\zm\\ThatYear\\gift-react\\src\\pages\\login\\index.jsx":"5","E:\\zm\\ThatYear\\gift-react\\src\\pages\\routerConfig .jsx":"6","E:\\zm\\ThatYear\\gift-react\\src\\pages\\FrontendAuth.jsx":"7","E:\\zm\\ThatYear\\gift-react\\src\\pages\\login\\register.jsx":"8","E:\\zm\\ThatYear\\gift-react\\src\\components\\footer.jsx":"9","E:\\zm\\ThatYear\\gift-react\\src\\components\\chat.jsx":"10","E:\\zm\\ThatYear\\gift-react\\src\\components\\sidebar.jsx":"11","E:\\zm\\ThatYear\\gift-react\\src\\pages\\frontend-auth.model.jsx":"12","E:\\zm\\ThatYear\\gift-react\\src\\common\\js\\axios.js":"13","E:\\zm\\ThatYear\\gift-react\\src\\pages\\system\\index.jsx":"14","E:\\zm\\ThatYear\\gift-react\\src\\pages\\members\\index.jsx":"15","E:\\zm\\ThatYear\\gift-react\\src\\pages\\error\\404.jsx":"16","E:\\zm\\ThatYear\\gift-react\\src\\pages\\pageDesign\\index.jsx":"17","E:\\zm\\ThatYear\\gift-react\\src\\pages\\order\\index.jsx":"18","E:\\zm\\ThatYear\\gift-react\\src\\pages\\goods\\index.jsx":"19","E:\\zm\\ThatYear\\gift-react\\src\\pages\\goods\\addGoods.jsx":"20","E:\\zm\\ThatYear\\gift-react\\src\\pages\\user\\index.jsx":"21","E:\\zm\\ThatYear\\gift-react\\src\\pages\\order\\orderDetail.jsx":"22","E:\\zm\\ThatYear\\gift-react\\src\\pages\\demo.jsx":"23","E:\\zm\\ThatYear\\gift-react\\src\\pages\\goods\\goodsDetail.jsx":"24","E:\\zm\\ThatYear\\gift-react\\src\\siteinfo.js":"25","E:\\zm\\ThatYear\\gift-react\\src\\components\\picLibrary.jsx":"26"},{"size":673,"mtime":1615889160823,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1615889160826,"results":"29","hashOfConfig":"28"},{"size":2006,"mtime":1616639878111,"results":"30","hashOfConfig":"28"},{"size":6720,"mtime":1616143324033,"results":"31","hashOfConfig":"28"},{"size":5974,"mtime":1616730383963,"results":"32","hashOfConfig":"28"},{"size":1618,"mtime":1616719975511,"results":"33","hashOfConfig":"28"},{"size":1977,"mtime":1615889160823,"results":"34","hashOfConfig":"28"},{"size":5104,"mtime":1616729852355,"results":"35","hashOfConfig":"28"},{"size":477,"mtime":1615889160818,"results":"36","hashOfConfig":"28"},{"size":5568,"mtime":1616641544365,"results":"37","hashOfConfig":"28"},{"size":6527,"mtime":1616143923310,"results":"38","hashOfConfig":"28"},{"size":51,"mtime":1615889160823,"results":"39","hashOfConfig":"28"},{"size":1127,"mtime":1616742374533,"results":"40","hashOfConfig":"28"},{"size":11201,"mtime":1616396103233,"results":"41","hashOfConfig":"28"},{"size":12376,"mtime":1616118882809,"results":"42","hashOfConfig":"28"},{"size":1459,"mtime":1615889160823,"results":"43","hashOfConfig":"28"},{"size":50554,"mtime":1616554246796,"results":"44","hashOfConfig":"28"},{"size":5209,"mtime":1616384987564,"results":"45","hashOfConfig":"28"},{"size":3871,"mtime":1616638938712,"results":"46","hashOfConfig":"28"},{"size":22426,"mtime":1616636173156,"results":"47","hashOfConfig":"28"},{"size":13297,"mtime":1616748407303,"results":"48","hashOfConfig":"28"},{"size":11130,"mtime":1616114969557,"results":"49","hashOfConfig":"28"},{"size":845,"mtime":1616748608733,"results":"50","hashOfConfig":"28"},{"size":25614,"mtime":1616635763766,"results":"51","hashOfConfig":"28"},{"size":109,"mtime":1615889160826,"results":"52","hashOfConfig":"28"},{"size":16524,"mtime":1616814845899,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1jgpyn",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\zm\\ThatYear\\gift-react\\src\\index.js",[],["117","118"],"E:\\zm\\ThatYear\\gift-react\\src\\reportWebVitals.js",[],"E:\\zm\\ThatYear\\gift-react\\src\\App.js",[],"E:\\zm\\ThatYear\\gift-react\\src\\components\\header.jsx",["119"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n// 样式\r\nimport HeaderMoudleCss from '../css/header.module.css';\r\nimport Logo from '../assets/icon/logo.png';\r\nimport Userpic from '../assets/images/userPic.jpg';\r\n// antd组件\r\nimport { Badge, Menu, Dropdown, Divider, Row, Col } from 'antd';\r\n// 头部\r\nclass Herder extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.toggleCollapsed = this.toggleCollapsed.bind(this)\r\n        this.state = {\r\n            collapsed: true\r\n        }\r\n    }\r\n\r\n    toggleCollapsed(){\r\n        this.setState({\r\n          collapsed: !this.state.collapsed,\r\n        });\r\n        this.props.getChildDatas(this.state.collapsed);\r\n    };\r\n\r\n    render() {\r\n        const style = {\r\n            fontSize: 30 + 'px'\r\n        }\r\n        const userMenu = (\r\n            <Menu>\r\n                <Menu.Item className=\"hover-bg-none\">\r\n                    <h4 className=\"user-name\">Mr zhu</h4>\r\n                    <small className=\"text-999\">18820854754@139.com</small>\r\n                </Menu.Item>\r\n                <div className=\"w100 bd-top\"></div>\r\n                {/* <Menu.Item className=\"hover-bg-f6f\">\r\n                    <div className=\"menu-item\">\r\n                        <i className=\"iconfont icon-email mr-10 text-28a\"></i>\r\n                        <span className=\"text-333\">消息</span>\r\n                    </div>\r\n                </Menu.Item> */}\r\n                <Menu.Item className=\"hover-bg-f6f\">\r\n                    <Link to=\"/usermsg\">\r\n                        <div className=\"menu-item\">\r\n                            <i className=\"iconfont icon-ContactUser mr-10 text-ffc\"></i>\r\n                            <span className=\"text-333\">个人中心</span>\r\n                        </div>\r\n                    </Link> \r\n                </Menu.Item>\r\n                <Divider />\r\n                {/* <Menu.Item className=\"hover-bg-f6f\">\r\n                    <div className=\"menu-item\">\r\n                        <i className=\"iconfont icon-setting mr-10 text-17a\"></i>\r\n                        <span className=\"text-333\">设置</span>\r\n                    </div>\r\n                </Menu.Item> */}\r\n                <Menu.Item className=\"hover-bg-f6f\">\r\n                    <div className=\"menu-item\">\r\n                        <i className=\"iconfont icon-unlock mr-10 text-dc3\"></i>\r\n                        <span className=\"text-333\">退出</span>\r\n                    </div>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n        const appMenu = (\r\n            <Menu>\r\n                <Menu.Item className=\"hover-bg-none\">\r\n                    <h4 className=\"user-name text-6c7 fon-w-500\">我的应用</h4>\r\n                </Menu.Item>\r\n                <div className=\"w100 bd-top\"></div>\r\n                <Menu.Item className=\"hover-bg-none\">\r\n                    <ul className=\"app-box w300 dis-flx align-items-center justify-space-between flx-wap\">\r\n                        <Row className=\"w100\">\r\n                            <Col span={12}>\r\n                                <li className=\"app-box-item text-align\">\r\n                                    <i className=\"iconfont icon-editor text-ffc dis-block mb-10 mt-10\" style={style}></i>\r\n                                    <span className=\"text-333 dis-block\">添加订单</span>\r\n                                </li>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <li className=\"app-box-item text-align\">\r\n                                    <i className=\"iconfont icon-transport mb-10 mt-10 text-dc3 dis-block\" style={style}></i>\r\n                                    <span className=\"text-333 dis-block\">新订单</span>\r\n                                </li>\r\n                            </Col>\r\n                        </Row>\r\n                    </ul>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n        const noticeMenu = (\r\n            <Menu>\r\n                <Menu.Item className=\"hover-bg-none dis-flx align-items-center justify-space-between\">\r\n                    <h4 className=\"user-name text-6c7 fon-w-500\">系统通知</h4>\r\n                    <Badge color=\"red\" count={25} />\r\n                </Menu.Item>\r\n                <div className=\"w100 bd-top\"></div>\r\n                <Menu.Item className=\"hover-bg-f6f\">\r\n                    <div className=\"notice-item w300 dis-flx align-items-center justify-space-between\">\r\n                        <div className=\"title text-333\">New registered userJust</div>\r\n                        <div className=\"time text-999\">now</div>\r\n                    </div>\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n        return (\r\n            <div className=\"herder bg-fff w100 navbar\">\r\n                <div className=\"navbar dis-flx align-items-center justify-space-between\">\r\n                    <div className=\"navbar-left dis-flx align-items-center\">\r\n                        <div className=\"logo ml-20\">\r\n                            <div className=\"logo-icon\">\r\n                                <img className=\"dis-block\" src={Logo} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"line-icon\" onClick={this.toggleCollapsed}>\r\n                            <i className={this.state.collapsed?\"iconfont icon-align-left fon-30 text-878\":\"iconfont icon-alignleft fon-30 text-878\"}></i>\r\n                        </div>\r\n                    </div>\r\n                    <ul className=\"navbar-right dis-flx align-items-center mb-0\">\r\n                        <Dropdown overlay={noticeMenu} placement=\"bottomRight\" arrow>\r\n                            <li className=\"message\">\r\n                                <Badge status=\"error\" />\r\n                                <i className=\"iconfont icon-bell fon-25 text-878\"></i>\r\n                            </li>\r\n                        </Dropdown>\r\n                        <Dropdown overlay={appMenu} placement=\"bottomRight\" arrow>\r\n                            <li className=\"application mr-20 ml-20\">\r\n                                <i className=\"iconfont fon-25 icon-application text-878\"></i>\r\n                            </li>\r\n                        </Dropdown>\r\n                        <Dropdown overlay={userMenu} placement=\"bottomRight\" arrow>\r\n                            <li className=\"user-pic\">\r\n                                <img className=\"dis-block\" src={Userpic} alt=\"\" />\r\n                            </li>\r\n                        </Dropdown>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Herder;","E:\\zm\\ThatYear\\gift-react\\src\\pages\\login\\index.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\routerConfig .jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\FrontendAuth.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\login\\register.jsx",["120","121"],"import React from 'react';\r\nimport axios from '../../common/js/axios';\r\n// 样式\r\nimport '../../css/login.less';\r\nimport registerBag from '../../assets/images/register-bg.jpg';\r\nimport registerInnerBg from '../../assets/images/register-inner-bg.jpg';\r\n// antd组件\r\nimport { Row, Col, message } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nclass Registered extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            adminAccount: \"\",\r\n            adminPassword: \"\",\r\n            spinBol: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    // 表单数据监听\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    // 表单提交\r\n    handleSubmit(event) {\r\n        let adminAccount = this.state.adminAccount;\r\n        let adminPassword = this.state.adminPassword;\r\n        if (adminAccount != \"\" && adminPassword != \"\") {\r\n            let data = {\r\n                'adminAccount': this.state.adminAccount,\r\n                'adminPassword': this.state.adminPassword\r\n            }\r\n            axios.postAxios('/login/register', data).then(res => {\r\n                this.setState({\r\n                    spinBol: true\r\n                })\r\n                if (res.data.registerStatus === \"该账号已注册哦!\") {\r\n                    message.error(res.data.registerStatus + '亲');\r\n                } else {\r\n                    message.success(res.data.registerStatus + '亲');\r\n                }\r\n            });\r\n        }else{\r\n            message.error(\"注册失败，请检查账号或密码哦！亲\")\r\n        }\r\n        event.preventDefault()\r\n    }\r\n    render() {\r\n        const sectionElementStyle = {\r\n            backgroundImage: `url(${registerBag})`\r\n        }\r\n        const loginFancyElementStyle = {\r\n            backgroundImage: `url(${registerInnerBg})`\r\n        }\r\n        const loginBtn = {\r\n            marginLeft: -4\r\n        }\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <section className=\"height-100vh\" style={sectionElementStyle}>\r\n                    <div className=\"container\">\r\n                        <Row justify=\"center\">\r\n                            <Col xs={24} sm={24} xl={8}>\r\n                                <div className=\"login-fancy h100 box-siz\" style={loginFancyElementStyle}>\r\n                                    <div className=\"login-fancy-box\">\r\n                                        <h1 className=\"login-fancy-title text-white mb-20\">\r\n                                            您好，热购后台！\r\n                                        </h1>\r\n                                        <p className=\"text-white mb-20 fon-w-500\">欢迎观临来到我的后台</p>\r\n                                    </div>\r\n                                    <div className=\"recove\"></div>\r\n                                </div>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} xl={8}>\r\n                                <div className=\"login-form pd-30 bg-fff\">\r\n                                    <h3 className=\"mb-30 fon-30\">注 册 账 号</h3>\r\n                                    <form onSubmit={this.handleSubmit}>\r\n                                        <div className=\"form-item username mb-20\">\r\n                                            <label className=\"w100 dis-block mb-10 fon-13 text-626 fon-w-500\">账号</label>\r\n                                            <input className=\"w100 ant-input fon-w-500\" type=\"text\" placeholder=\"请输入您的账号\" name=\"adminAccount\" value={this.state.adminAccount} onChange={this.handleChange} />\r\n                                        </div>\r\n                                        <div className=\"form-item username mb-20\">\r\n                                            <label className=\"w100 dis-block mb-10 fon-13 text-626 fon-w-500\">密码</label>\r\n                                            <input className=\"w100 ant-input fon-w-500\" type=\"password\" placeholder=\"请输入您的密码\" name=\"adminPassword\" value={this.state.adminPassword} onChange={this.handleChange} />\r\n                                        </div>\r\n                                        <div className=\"form-item\">\r\n                                            <button type=\"submit\" className=\"login-btn\">立即创建 <i className=\"iconfont icon-check fon-14\" style={loginBtn}></i></button>\r\n                                        </div>\r\n                                        <div className=\"register-prompt mt-20 text-626\">创建成功了吗？<strong className=\"text-84b\"><Link to=\"/login\">在这里登入</Link></strong></div>\r\n                                    </form>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Registered;\r\n","E:\\zm\\ThatYear\\gift-react\\src\\components\\footer.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\components\\chat.jsx",["122","123","124"],"import React from 'react';\r\nimport '../css/chat.less';\r\n// antd 组件\r\nimport { Row, Col } from 'antd';\r\n// 图片\r\nimport UserPic from '../assets/images/userPic.jpg'\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            show :false\r\n        }\r\n        this.showChat = this.showChat.bind(this);\r\n    }\r\n    showChat(){\r\n        let show  = this.state.show;\r\n        this.setState({\r\n            show:!show\r\n        })\r\n        console.log(\"a\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={this.state.show?\"chat-box active bg-fff box-sd pd-15\":\"chat-box bg-fff box-sd pd-15\"}>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <div className=\"user-list\">\r\n                            <div className=\"user-search\">\r\n                                <input type=\"search\" className=\"w100 ant-input fon-w-500\" placeholder=\"搜索\" name=\"adminPassword\" />\r\n                                {/* <label>\r\n                                    <i className=\"iconfont icon-sousuo fon-22 text-white\"></i>  \r\n                                </label> */}\r\n                            </div>\r\n                            <ul className=\"list mt-20\">\r\n                                <li className=\"list-item dis-flx align-items-center justify-space-between pb-15 pt-15\">\r\n                                    <div className=\"pic\">\r\n                                        <img src={UserPic} />\r\n                                        <div className=\"status bg-dc3\"></div>\r\n                                    </div>\r\n                                    <div className=\"media-body\">\r\n                                        <h6 className=\"mb-0 dis-flx align-items-center justify-space-between mb-10\">\r\n                                            <strong className=\"fon-16 text-323\">Anne Smith</strong>\r\n                                            <small className=\"text-323\">3:26 PM</small>\r\n                                        </h6>\r\n                                        <p className=\"mb-0 dis-flx align-items-center justify-space-between\">\r\n                                            <div className=\"dis-flx align-items-center\" style={{ width: \"80%\" }}><i className=\"iconfont icon-check2 fon-12 text-878 mr-5\"></i><span className=\"text-878 line-clamp1\">爱上大叔的感觉啊帅哥的就爱个等级</span></div>\r\n                                            <i className=\"iconfont icon-voice2 fon-14 text-323\"></i>\r\n                                        </p>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={16}>\r\n                        <div className=\"info-list\">\r\n                            <div className=\"top dis-flx align-items-center justify-space-between bg-f6f mb-20\">\r\n                                <h6 className=\"name\"> <strong className=\"fon-18 text-323\">Anne Smith</strong></h6>\r\n                                <div className=\"app dis-flx align-items-center\">\r\n                                    <i className=\"iconfont icon-video fon-16 text-6c7 mr-20\"></i>\r\n                                    <i className=\"iconfont icon-more fon-16 text-6c7\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"msg-box\">\r\n                                <div class=\"service-people\">\r\n                                    <img src={UserPic} />\r\n                                    <div class=\"msg\">\r\n                                        <div class=\"msg-cover\">\r\n                                            爱上的好卡是大叔的喀什到喀什到卡上\r\n                                            爱上的好卡是大叔的喀什到喀什到卡上\r\n                                            爱上的好卡是大叔的喀什到喀什到卡上\r\n\t\t\t\t\t\t                </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"user-people\">\r\n                                    <img src={UserPic} />\r\n                                    <div class=\"msg\">\r\n                                        <div class=\"msg-cover\">\r\n                                            爱上的好卡是大叔的喀什到喀什到卡上\r\n                                            爱上的好卡是大叔的喀什到喀什到卡上\r\n                                            爱上的好卡是大叔的喀什到喀什到卡上\r\n\t\t\t\t\t\t                </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"send-box\">\r\n                                <input class=\"ipt\" type=\"text\" v-model=\"msg\" placeholder=\"请输入内容\" />\r\n                                <div class=\"btn\" type=\"default\"><i className=\"iconfont icon-clip fon-16\"></i></div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"btn-box pd-10 bg-fff\" onClick={this.showChat}>\r\n                     <div className=\"btn bg-84b text-align\"><i className={this.state.show?\"iconfont icon-shanchu1 fon-22 text-white\":\"iconfont icon-xiaoxizhongxin fon-22 text-white\"}></i></div>\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat;","E:\\zm\\ThatYear\\gift-react\\src\\components\\sidebar.jsx",["125","126","127"],"import React, { Fragment } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../css/sidebar.less';\r\n// antd组件\r\nimport { Menu } from 'antd';\r\nimport { CodeOutlined, ShoppingCartOutlined, UserOutlined, BarChartOutlined, MessageOutlined, FileOutlined ,DollarOutlined} from '@ant-design/icons';\r\nconst { SubMenu } = Menu;\r\nconst rootSubmenuKeys = ['sub1', 'sub2', 'sub4'];\r\n// 列表结构\r\nlet sideMenuList = [\r\n    {\r\n        id: 1,\r\n        menuItemTitle: \"系统\",\r\n        menuItemIcon: <BarChartOutlined />,\r\n        level1: [],\r\n        url: '/system'\r\n    },\r\n    {\r\n        id: 2,\r\n        menuItemTitle: \"页面\",\r\n        menuItemIcon: <CodeOutlined />,\r\n        level1: [\r\n            {\r\n                id: 7,\r\n                menuItemTitle: \"页面设计\",\r\n                lever2: [],\r\n                url: '/pageDesign'\r\n            },\r\n            // {\r\n            //     id: 8,\r\n            //     menuItemTitle: \"底部导航设置\",\r\n            //     lever2: [],\r\n            //     url: '/bottomNav'\r\n            // }\r\n        ]\r\n    },\r\n    {\r\n        id: 3,\r\n        menuItemTitle: \"商品\",\r\n        menuItemIcon: <ShoppingCartOutlined />,\r\n        level1: [\r\n            {\r\n                id: 9,\r\n                menuItemTitle: \"商品列表\",\r\n                lever2: [],\r\n                url: '/goods'\r\n            },\r\n            {\r\n                id: 10,\r\n                menuItemTitle: \"商品分类\",\r\n                lever2: [],\r\n                url: '/goodsClassify'\r\n            },\r\n            // {\r\n            //     id: 11,\r\n            //     menuItemTitle: \"商品评价\",\r\n            //     lever2: [],\r\n            //     url: '/goodsComment'\r\n            // },\r\n            // {\r\n            //     id: 13,\r\n            //     menuItemTitle: \"订单\",\r\n            //     lever2: [],\r\n            //     url: '/order'\r\n            // },\r\n        ]\r\n    },\r\n    {\r\n        id: 11,\r\n        menuItemTitle: \"交易\",\r\n        menuItemIcon: <DollarOutlined />,\r\n        level1: [\r\n            // {\r\n            //     id: 9,\r\n            //     menuItemTitle: \"商品列表\",\r\n            //     lever2: [],\r\n            //     url: '/goods'\r\n            // },\r\n            // {\r\n            //     id: 10,\r\n            //     menuItemTitle: \"商品分类\",\r\n            //     lever2: [],\r\n            //     url: '/goodsClassify'\r\n            // },\r\n            // {\r\n            //     id: 11,\r\n            //     menuItemTitle: \"商品评价\",\r\n            //     lever2: [],\r\n            //     url: '/goodsComment'\r\n            // },\r\n            {\r\n                id: 13,\r\n                menuItemTitle: \"订单列表\",\r\n                lever2: [],\r\n                url: '/order'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        id: 4,\r\n        menuItemTitle: \"会员\",\r\n        menuItemIcon: <UserOutlined />,\r\n        level1: [\r\n            {\r\n                id: 11,\r\n                menuItemTitle: \"会员列表\",\r\n                lever2: [],\r\n                url: '/members'\r\n            },\r\n            // {\r\n            //     id: 12,\r\n            //     menuItemTitle: \"会员等级\",\r\n            //     lever2: [],\r\n            //     url: '/userLevel'\r\n            // }\r\n        ]\r\n    },\r\n    // {\r\n    //     id: 5,\r\n    //     menuItemTitle: \"消息\",\r\n    //     menuItemIcon: <MessageOutlined />,\r\n    //     level1: [],\r\n    //     url: '/mssage'\r\n    // },\r\n    {\r\n        id: 6,\r\n        menuItemTitle: \"文件管理\",\r\n        menuItemIcon: <FileOutlined />,\r\n        level1: [],\r\n        url: '/files'\r\n    },\r\n];\r\nconst Sidebar = (props) => {\r\n    const [openKeys, setOpenKeys] = React.useState(['sub1']);\r\n    const onOpenChange = keys => {\r\n        const latestOpenKey = keys.find(key => openKeys.indexOf(key) === -1);\r\n        if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n            setOpenKeys(keys);\r\n        } else {\r\n            setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\r\n        }\r\n    };\r\n    let SideMenu = sideMenuList.map(SubMenuItem => {\r\n        {\r\n            if (SubMenuItem.level1.length > 0) {\r\n                return <>\r\n                    <SubMenu key={SubMenuItem.id} icon={SubMenuItem.menuItemIcon} title={SubMenuItem.menuItemTitle}>\r\n                        {\r\n                            SubMenuItem.level1.map(MenuItem1 => {\r\n                                {\r\n                                    if (MenuItem1.lever2.length > 0) {\r\n                                        return <>\r\n                                            <SubMenu key={MenuItem1.id} title={MenuItem1.menuItemTitle}>\r\n                                                {\r\n                                                    MenuItem1.lever2.map(MenuItem2 => {\r\n                                                        return <><Menu.Item key={MenuItem2.id}>\r\n                                                            <Link to={MenuItem2.url}>{MenuItem2.menuItemTitle}</Link>\r\n                                                        </Menu.Item></>\r\n                                                    })\r\n                                                }\r\n                                            </SubMenu>\r\n                                        </>\r\n                                    } else {\r\n                                        return <>\r\n                                            <Menu.Item key={MenuItem1.id}>\r\n                                                <Link to={MenuItem1.url}>{MenuItem1.menuItemTitle}</Link>\r\n                                            </Menu.Item>\r\n                                        </>\r\n                                    }\r\n                                }\r\n                            })\r\n                        }\r\n                    </SubMenu>\r\n                </>\r\n            } else {\r\n                return <>\r\n                    <Menu.Item key={SubMenuItem.id} icon={SubMenuItem.menuItemIcon}>\r\n                        <Link to={SubMenuItem.url}>{SubMenuItem.menuItemTitle}</Link>\r\n                    </Menu.Item>\r\n                </>\r\n            }\r\n        }\r\n    })\r\n    return (\r\n        <div className={props.isCollapsed?'sidebar':'sidebar-active'}>\r\n            <Menu inlineCollapsed={props.isCollapsed} mode=\"inline\" defaultSelectedKeys={['1']} openKeys={openKeys} onOpenChange={onOpenChange} style={{height:'100%',backgroundColor: '#282a39'}}>\r\n                {SideMenu}\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","E:\\zm\\ThatYear\\gift-react\\src\\pages\\frontend-auth.model.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\common\\js\\axios.js",["128"],"import axios from 'axios';\r\nimport siteinfo from '../../siteinfo';\r\n\r\nconst getAxios = (url, params) => {\r\n    // 基础路径\r\n    return new Promise((resolve, reject) => {\r\n        axios({\r\n            url: siteinfo.baseUrl + url,\r\n            method: 'get',\r\n            params: params,\r\n        }).then(response => {\r\n            if (response.status === 200) {\r\n                resolve(response);\r\n            } else {\r\n                throw new Error('Response data error')\r\n            }\r\n        }).catch(error => {\r\n            reject(error)\r\n        })\r\n    })\r\n}\r\n\r\nconst postAxios = (url, data) => {\r\n    // 基础路径\r\n    return new Promise((resolve, reject) => {\r\n        axios({\r\n            url: siteinfo.baseUrl + url,\r\n            method: 'post',\r\n            data: data,\r\n        }).then(response => {\r\n            if (response.status === 200) {\r\n                resolve(response);\r\n            } else {\r\n                throw new Error('Response data error')\r\n            }\r\n        }).catch(error => {\r\n            reject(error)\r\n        })\r\n    })\r\n}\r\n\r\nexport default {\r\n    getAxios,\r\n    postAxios\r\n}","E:\\zm\\ThatYear\\gift-react\\src\\pages\\system\\index.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\members\\index.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\error\\404.jsx",["129"],"import React from 'react';\r\n// 样式\r\nimport '../../css/404.less';\r\n// 图片\r\nimport errorImg from '../../assets/images/error.png';\r\n// antd 组件\r\nimport { Row, Col, Breadcrumb } from 'antd';\r\nclass ErrorPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                {/* 标题导航 */}\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <h3><strong>404错误</strong></h3>\r\n                    </Col>\r\n                    <Col span={12} className=\"text-align-right\">\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item>首页</Breadcrumb.Item>\r\n                            <Breadcrumb.Item>错误</Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <div className=\"card pd-22 mt-22 bg-fff \">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"error\">\r\n                                    <h1>404</h1>\r\n                                    <h2>error</h2>\r\n                                </div>\r\n                                <img src={errorImg}/>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ErrorPage;","E:\\zm\\ThatYear\\gift-react\\src\\pages\\pageDesign\\index.jsx",["130","131","132"],"import React from 'react';\r\n// 样式\r\nimport styles from '../../css/pageDesign.module.css';\r\n// 图片\r\nimport PageDesignLogo from '../../assets/images/pageDesign/logo.png';\r\nimport SearchIcon from '../../assets/images/pageDesign/search-icon.png';\r\nimport Scan from '../../assets/images/pageDesign/scan.png';\r\nimport UserPic from '../../assets/images/pageDesign/user-pic.png';\r\nimport Banner from '../../assets/images/pageDesign/banner.png';\r\nimport NavIcon from '../../assets/images/pageDesign/nav-item-icon1.png';\r\nimport TigIcon from '../../assets/images/pageDesign/tig-icon.png';\r\nimport goodsBarItem1 from '../../assets/images/pageDesign/goods-bar-item1.png';\r\nimport goodsBarItem2 from '../../assets/images/pageDesign/goods-bar-item2.png';\r\nimport goodsBarItem3 from '../../assets/images/pageDesign/goods-bar-item3.png';\r\nimport Adversing from '../../assets/images/pageDesign/adversing.png';\r\nimport Goods1 from '../../assets/images/pageDesign/goods1.png';\r\n// antd 组件\r\nimport { Row, Col, Breadcrumb, Divider, Form, Input, Radio, Slider, Checkbox, Button } from 'antd';\r\n// 图片库组件\r\nimport PicLibrary from '../../components/picLibrary';\r\n// 拾色器\r\nimport InputColor from 'react-input-color';\r\nclass PageDesign extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tabState: 1,\r\n            // 搜索框form数据\r\n            searchTxt: \"积分兑换\",\r\n            searchStyle: \"party\",\r\n            seachTxtAlign: \"left\",\r\n            // 轮播\r\n            bannerPointColor: \"#ffffff\",\r\n            bannerPointShape: \"square\",\r\n            bannerTopBottomMargin: \"\",\r\n            bannerLfteRightMargin: \"\",\r\n            bannerNodesList: [\r\n                { linkAddress: \"https://www.baidu.com\" }\r\n            ],\r\n            // 导航\r\n            navOutBgCol: \"#ffffff\",\r\n            navTopBottomMargin: \"\",\r\n            navLeftRightMargin: \"\",\r\n            navInsBgCol: \"#ffffff\",\r\n            navInsTopMargin: \"\",\r\n            navInsRightMargin: \"\",\r\n            navInsBottomMargin: \"\",\r\n            navInsLeftMargin: \"\",\r\n            navInsTopRound: \"\",\r\n            navInsTopRound: \"\",\r\n            navInsBottomRound: \"\",\r\n            navLineNum: \"3\",\r\n            navNodesList: [\r\n                { navTxt: \"\", navTxtCol: \"\", linkAddress: \"https://www.baidu.com\" }\r\n            ],\r\n            // 系统消息\r\n            noticeTopBottomMargin: \"\",\r\n            noticeLeftRightMargin: \"\",\r\n            // 推荐\r\n            rcmTopBottomMargin: \"\",\r\n            rcmLeftRightMargin: \"\",\r\n            recNodesList: [\r\n                { linkAddress: \"\" }\r\n            ],\r\n            //广告栏 \r\n            advTopBottomMargin: \"\",\r\n            advLeftRightMargin: \"\",\r\n            advNodesList: [{ linkAddress: \"https://www.baidu.com\" }],\r\n            // 商品分类导航\r\n            goodsTabTopBottomMargin: \"\",\r\n            goodsTabLeftRightMargin: \"\",\r\n            goodsTabNodesList: [\r\n                { goodsTabTitle: \"\", goodsTabScptTxt: \"\" }\r\n            ],\r\n            // 商品\r\n            goodsSort: \"comprehensive\",\r\n            goodsPlayMain: ['goodsName', 'goodsScr'],\r\n            goodsTopBottomMargin: \"\",\r\n            goodsLfteRightMargin: \"\",\r\n            goodsPicRound: \"\",\r\n            goodsInsTopBottomMargin: \"\",\r\n            goodsInsLfteRightMargin: \"\",\r\n            goodsOutTopBottomMargin: \"\",\r\n            goodsOutLfteRightMargin: \"\",\r\n            // 图片库\r\n            picLibraryStatus: false\r\n        }\r\n        this.tabHandle = this.tabHandle.bind(this);\r\n        this.radioHandle = this.radioHandle.bind(this);\r\n        this.checkBoxChange = this.checkBoxChange.bind(this);\r\n        this.sliderChange = this.sliderChange.bind(this);\r\n        this.colorPicker = this.colorPicker.bind(this);\r\n        this.inputChange = this.inputChange.bind(this);\r\n        this.addOptionsNodes = this.addOptionsNodes.bind(this);\r\n        this.picLibraryBackStatus = this.picLibraryBackStatus.bind(this);\r\n        this.picLibraryStatusChange = this.picLibraryStatusChange.bind(this);\r\n    }\r\n    // 点击切换\r\n    tabHandle(e) {\r\n        const tabStateVal = Number(e.target.dataset.tabstate);\r\n        this.setState({\r\n            tabState: tabStateVal\r\n        })\r\n    }\r\n    // 单选按钮\r\n    radioHandle(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    // 多选按钮\r\n    checkBoxChange(name, e) {\r\n        let val = e.target[\"data-val\"];\r\n        let checked = e.target.checked;\r\n        switch (name) {\r\n            case 'goodsPlayMain':\r\n                let goodsPlayMain = this.state.goodsPlayMain;\r\n                if (checked) {\r\n                    if (!goodsPlayMain.includes(val)) {\r\n                        goodsPlayMain.push(val);\r\n                    }\r\n                } else {\r\n                    goodsPlayMain.splice(goodsPlayMain.indexOf(val), 1)\r\n                }\r\n                this.setState(goodsPlayMain);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    // 滑动输入条\r\n    sliderChange(name, value) {\r\n        let val = `${value}%`;\r\n        console.log('val', val)\r\n        switch (name) {\r\n            case \"bannerTopBottomMargin\":\r\n                this.setState({ bannerTopBottomMargin: val });\r\n                break;\r\n            case \"bannerLfteRightMargin\":\r\n                this.setState({ bannerLfteRightMargin: val });\r\n                break;\r\n            case \"bannerLfteRightMargin\":\r\n                this.setState({ bannerLfteRightMargin: val });\r\n                break;\r\n            case \"navTopBottomMargin\":\r\n                this.setState({ navTopBottomMargin: val });\r\n                break;\r\n            case \"navLeftRightMargin\":\r\n                this.setState({ navLeftRightMargin: val });\r\n                break;\r\n            case \"navInsTopMargin\":\r\n                this.setState({ navInsTopMargin: val });\r\n                break;\r\n            case \"navInsRightMargin\":\r\n                this.setState({ navInsRightMargin: val });\r\n                break;\r\n            case \"navInsBottomMargin\":\r\n                this.setState({ navInsBottomMargin: val });\r\n                break;\r\n            case \"navInsLeftMargin\":\r\n                this.setState({ navInsLeftMargin: val });\r\n                break;\r\n            case \"navInsTopRound\":\r\n                this.setState({ navInsTopRound: val });\r\n                break;\r\n            case \"navInsBottomRound\":\r\n                this.setState({ navInsBottomRound: val });\r\n                break;\r\n            case \"noticeTopBottomMargin\":\r\n                this.setState({ noticeTopBottomMargin: val });\r\n                break;\r\n            case \"noticeLeftRightMargin\":\r\n                this.setState({ noticeLeftRightMargin: val });\r\n                break;\r\n            case \"rcmTopBottomMargin\":\r\n                this.setState({ rcmTopBottomMargin: val });\r\n                break;\r\n            case \"rcmLeftRightMargin\":\r\n                this.setState({ rcmLeftRightMargin: val });\r\n                break;\r\n            case \"advTopBottomMargin\":\r\n                this.setState({ advTopBottomMargin: val });\r\n                break;\r\n            case \"advLeftRightMargin\":\r\n                this.setState({ advLeftRightMargin: val });\r\n                break;\r\n            case \"goodsTabTopBottomMargin\":\r\n                this.setState({ goodsTabTopBottomMargin: val });\r\n                break;\r\n            case \"goodsTabLeftRightMargin\":\r\n                this.setState({ goodsTabLeftRightMargin: val });\r\n                break;\r\n            // \r\n            case \"goodsTopBottomMargin\":\r\n                this.setState({ goodsTopBottomMargin: val });\r\n                break;\r\n            case \"goodsLfteRightMargin\":\r\n                this.setState({ goodsLfteRightMargin: val });\r\n                break;\r\n            case \"goodsPicRound\":\r\n                this.setState({ goodsPicRound: val });\r\n                break;\r\n            case \"goodsInsTopBottomMargin\":\r\n                this.setState({ goodsInsTopBottomMargin: val });\r\n                break;\r\n            case \"goodsInsLfteRightMargin\":\r\n                this.setState({ goodsInsLfteRightMargin: val });\r\n                break;\r\n            case \"goodsOutTopBottomMargin\":\r\n                this.setState({ goodsOutTopBottomMargin: val });\r\n                break;\r\n            case \"goodsOutLfteRightMargin\":\r\n                this.setState({ goodsOutLfteRightMargin: val });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    sliderTipFormatter(value) {\r\n        return `${value}%`\r\n    }\r\n    // 颜色选择\r\n    colorPicker = (name, value, index) => {\r\n        let color = value.rgba;\r\n        switch (name) {\r\n            case \"bannerPointColor\":\r\n                this.setState({ bannerPointColor: color });\r\n                break;\r\n            case \"navOutBgCol\":\r\n                this.setState({ navOutBgCol: color });\r\n                break;\r\n            case \"navInsBgCol\":\r\n                this.setState({ navInsBgCol: color });\r\n                break;\r\n            case 'navTxtCol':\r\n                let navNodesList = this.state.navNodesList;\r\n                navNodesList[index].navTxtCol = color;\r\n                this.setState(navNodesList);\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    // 输入框\r\n    inputChange(name, index, e) {\r\n        let val = e.target.value;\r\n        let bannerNodesList = this.state.bannerNodesList;\r\n        let navNodesList = this.state.navNodesList;\r\n        let recNodesList = this.state.recNodesList;\r\n        let advNodesList = this.state.advNodesList;\r\n        let goodsTabNodesList = this.state.goodsTabNodesList;\r\n        switch (name) {\r\n            case 'searchTxt':\r\n                this.setState({ searchTxt: val });\r\n                break;\r\n            case 'bannerLink':\r\n                bannerNodesList[index].linkAddress = val;\r\n                this.setState(bannerNodesList);\r\n                break;\r\n            case 'navTxt':\r\n                navNodesList[index].navTxt = val;\r\n                this.setState(navNodesList);\r\n                break;\r\n            case 'navLinkAddress':\r\n                navNodesList[index].linkAddress = val;\r\n                this.setState(navNodesList);\r\n                break;\r\n            case 'reclinkAddress':\r\n                recNodesList[index].linkAddress = val;\r\n                this.setState(recNodesList);\r\n                break;\r\n            case 'advlinkAddress':\r\n                advNodesList[index].linkAddress = val;\r\n                this.setState(advNodesList);\r\n                break;\r\n            case 'goodsTabTitle':\r\n                goodsTabNodesList[index].goodsTabTitle = val;\r\n                this.setState(goodsTabNodesList);\r\n                break;\r\n            case 'goodsTabScptTxt':\r\n                goodsTabNodesList[index].goodsTabScptTxt = val;\r\n                this.setState(goodsTabNodesList);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    // 添加选项节点\r\n    addOptionsNodes(stateArrName) {\r\n        let newNodesObj\r\n        switch (stateArrName) {\r\n            case 'bannerNodesList':\r\n                newNodesObj = { linkAddress: '' };\r\n                break;\r\n            case 'navNodesList':\r\n                newNodesObj = { navTxt: '', navTxtCol: \"\", linkAddress: '' };\r\n                break;\r\n            case 'recNodesList':\r\n                newNodesObj = { linkAddress: '' };\r\n                break;\r\n            case 'advNodesList':\r\n                newNodesObj = { linkAddress: '' };\r\n                break;\r\n            case 'goodsTabNodesList':\r\n                newNodesObj = { goodsTabTitle: \"\", goodsTabScptTxt: \"\" };\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        let newStateArr = this.state[stateArrName];\r\n        newStateArr.push(newNodesObj);\r\n        this.setState(newStateArr);\r\n    }\r\n    // 删除选项节点\r\n    deleteOptionsNodes(index, stateArrName) {\r\n        let newStateArr = this.state[stateArrName];\r\n        if (newStateArr.length === 1) {\r\n            alert('必须有一项')\r\n        } else {\r\n            delete newStateArr[index];\r\n            this.setState(newStateArr);\r\n        }\r\n    }\r\n    // 图片库=>数据返回\r\n    picLibraryBackStatus(data) {\r\n        this.setState({\r\n            picLibraryStatus: !data\r\n        })\r\n    }\r\n    picLibraryStatusChange() {\r\n        this.setState({ picLibraryStatus: true });\r\n    }\r\n    render() {\r\n        // 搜索框样式单选\r\n        const searchSearchStyleOptions = [\r\n            { label: '方形', value: 'party' },\r\n            { label: '圆形', value: 'round' },\r\n            { label: '圆弧', value: 'arc' },\r\n        ];\r\n        // 搜索框文字单选\r\n        const seachTxtAlignOptions = [\r\n            { label: '居左', value: 'left' },\r\n            { label: '居中', value: 'center' },\r\n            { label: '居右', value: 'right' },\r\n        ]\r\n        // 轮播图指示点单选\r\n        const bannerPointShapeOptions = [\r\n            { label: '正方形', value: 'square' },\r\n            { label: '圆形', value: 'round' },\r\n            { label: '长方形', value: 'rectangle' },\r\n        ]\r\n        // 导航数量\r\n        const navLineNumOptions = [\r\n            { label: '3', value: '3' },\r\n            { label: '4', value: '4' },\r\n            { label: '5', value: '5' },\r\n        ]\r\n        // 商品排序\r\n        const goodsSortOptions = [\r\n            { label: '综合', value: 'comprehensive' },\r\n            { label: '销量', value: 'sales' },\r\n            { label: '价格', value: 'price' },\r\n        ]\r\n        // 表单提交成功\r\n        const onFinish = (values) => {\r\n            console.log('Success:', values);\r\n        };\r\n        // 表单提交失败\r\n        const onFinishFailed = (errorInfo) => {\r\n            console.log('Failed:', errorInfo);\r\n        };\r\n        // 轮播节点列表\r\n        let bannerNodesList = this.state.bannerNodesList;\r\n        let bannerNodesItems = bannerNodesList.map((item, index) => {\r\n            return <div className=\"nodes-box pd-17 bg-f7f bor-rds-3 mb-20\" key={index}>\r\n                <Form.Item label=\"图片\" name=\"bannerPic\">\r\n                    <div className=\"ipt-file-cover-element pos-r\" onClick={this.picLibraryStatusChange}>\r\n                    </div>\r\n                </Form.Item>\r\n                <Form.Item label=\"链接地址\" name={['bannerNodesList', index, 'linkAddress']}>\r\n                    <Input defaultValue={item.linkAddress} className=\"ant-input-bottom-line\" onChange={(e) => this.inputChange('bannerLink', index, e)} />\r\n                </Form.Item>\r\n                <div className=\"delete\" onClick={() => this.deleteOptionsNodes(index, 'bannerNodesList')}></div>\r\n            </div>\r\n        })\r\n        // 导航节点列表\r\n        let navNodesList = this.state.navNodesList;\r\n        let bannerNodesItem = navNodesList.map((item, index) => {\r\n            return <div className=\"nodes-box from-item pd-17 bg-f7f bor-rds-3 mb-20\">\r\n                <Form.Item label=\"图片\" name=\"navPic\">\r\n                    <div className=\"ipt-file-cover-element pos-r\" onClick={this.picLibraryStatusChange}>\r\n                    </div>\r\n                </Form.Item>\r\n                <Form.Item label=\"文字内容\" name={['navNodesList', index, 'navTxt']}>\r\n                    <Input defaultValue={item.navTxt} className=\"ant-input-bottom-line\" onChange={(e) => this.inputChange('navTxt', index, e)} />\r\n                </Form.Item>\r\n                <Form.Item label=\"文字颜色\" name={['navNodesList', index, 'navTxtCol']}>\r\n                    <InputColor\r\n                        initialValue=\"#ffffff\"\r\n                        onChange={(value) => this.colorPicker('navTxtCol', value, index)}\r\n                        placement=\"right\"\r\n                    ></InputColor>\r\n                </Form.Item>\r\n                <Form.Item label=\"H5链接\" name={['navNodesList', index, 'linkAddress']}>\r\n                    <Input defaultValue={item.linkAddress} className=\"ant-input-bottom-line\" onChange={(e) => this.inputChange('navLinkAddress', index, e)} />\r\n                </Form.Item>\r\n                <div className=\"delete\" onClick={() => this.deleteOptionsNodes(index, 'navNodesList')}></div>\r\n            </div>\r\n        })\r\n        // 推荐节点列表\r\n        let recNodesList = this.state.recNodesList;\r\n        let recNodesItem = recNodesList.map((item, index) => {\r\n            return (\r\n                <div className=\"nodes-box from-item pd-17 bg-f7f bor-rds-3 mb-20\">\r\n                    <Form.Item label=\"图片\" name=\"rcmPic\">\r\n                        <div className=\"ipt-file-cover-element pos-r\" onClick={this.picLibraryStatusChange}>\r\n                        </div>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"H5链接\" name={['recNodesList', index, 'linkAddress']}>\r\n                        <Input defaultValue={item.linkAddress} className=\"ant-input-bottom-line\" onChange={(e) => this.inputChange('reclinkAddress', index, e)} />\r\n                    </Form.Item>\r\n                    <div className=\"delete\" onClick={() => this.deleteOptionsNodes(index, 'recNodesList')}></div>\r\n                </div>\r\n            )\r\n        })\r\n        // 广告节点列表\r\n        let advNodesList = this.state.advNodesList;\r\n        let advNodesItem = advNodesList.map((item, index) => {\r\n            return (\r\n                <div className=\"nodes-box from-item pd-17 bg-f7f bor-rds-3 mb-20\">\r\n                    <Form.Item label=\"图片\" name=\"advPic\">\r\n                        <div className=\"ipt-file-cover-element pos-r\" onClick={this.picLibraryStatusChange}>\r\n                        </div>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"H5链接\" name={['advNodesList', index, 'linkAddress']}>\r\n                        <Input defaultValue={item.linkAddress} className=\"ant-input-bottom-line\" onChange={(e) => this.inputChange('advlinkAddress', index, e)} />\r\n                    </Form.Item>\r\n                    <div className=\"delete\" onClick={() => this.deleteOptionsNodes(index, 'advNodesList')}></div>\r\n                </div>\r\n            )\r\n        })\r\n        // 商品分类导航\r\n        let goodsTabNodesList = this.state.goodsTabNodesList;\r\n        let goodsTabNodesItem = goodsTabNodesList.map((item, index) => {\r\n            return (\r\n                <div className=\"nodes-box from-item pd-17 bg-f7f bor-rds-3 mb-20\">\r\n                    <Form.Item label=\"标题\" name={['goodsTabNodesList', index, 'goodsTabTitle']}>\r\n                        <Input defaultValue={item.linkAddress} className=\"ant-input-bottom-line\" onChange={(e) => this.inputChange('goodsTabTitle', index, e)} />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"描述文字\" name={['goodsTabNodesList', index, 'goodsTabScptTxt']}>\r\n                        <Input defaultValue={item.linkAddress} className=\"ant-input-bottom-line\" onChange={(e) => this.inputChange('goodsTabScptTxt', index, e)} />\r\n                    </Form.Item>\r\n                    <div className=\"delete\" onClick={() => this.deleteOptionsNodes(index, 'goodsTabNodesList')}></div>\r\n                </div>\r\n            )\r\n\r\n\r\n        })\r\n        // 商品\r\n        let goodsPlayMain = this.state.goodsPlayMain;\r\n        return (\r\n            <div className=\"main\">\r\n                <Row className=\"content-title mb-10\">\r\n                    <Col span={12}>\r\n                        <h3><strong>页面设计</strong></h3>\r\n                    </Col>\r\n                    <Col span={12} className=\"text-align-right\">\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item>系统</Breadcrumb.Item>\r\n                            <Breadcrumb.Item>页面设计</Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={30}>\r\n                    <Col span={6}>\r\n                        <div className={styles.pageDesignCard}>\r\n                            <div className={styles.phoneTop}>\r\n                                <h4>礼品汇</h4>\r\n                            </div>\r\n                            <header>\r\n                                {/* 搜索 */}\r\n                                <div className={styles.top + ' pd-11 tab'}>\r\n                                    <div className=\"tab-z\" data-tabstate=\"1\" onClick={this.tabHandle}></div>\r\n                                    <div className=\"pageDesignLogo\">\r\n                                        <img className=\"w100\" src={PageDesignLogo} alt=\"\" />\r\n                                    </div>\r\n                                    <div className={styles.search}>\r\n                                        <div className=\"search-icon\">\r\n                                            <img className=\"w100 dis-block\" src={SearchIcon} alt=\"\" />\r\n                                        </div>\r\n                                        <div>{this.state.searchTxt}</div>\r\n                                        <div className=\"scan\">\r\n                                            <img className=\"w100 dis-block\" src={Scan} alt=\"\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"user-pic\">\r\n                                        <img src={UserPic} alt=\"\" />\r\n                                    </div>\r\n                                </div>\r\n                                {/* 轮播 */}\r\n                                <div className=\" banner tab\">\r\n                                    <div className=\"tab-z\" data-tabstate=\"2\" onClick={this.tabHandle}></div>\r\n                                    <img src={Banner} alt=\"\" />\r\n                                </div>\r\n                            </header>\r\n                            <section>\r\n                                {/* 导航 */}\r\n                                <ul className=\"nav tab\">\r\n                                    <div className=\"tab-z\" data-tabstate=\"3\" onClick={this.tabHandle}></div>\r\n                                    <li>\r\n                                        <img src={NavIcon} alt=\"\" />\r\n                                        <span>家居家纺</span>\r\n                                    </li>\r\n                                    <li>\r\n                                        <img src={NavIcon} alt=\"\" />\r\n                                        <span>家居家纺</span>\r\n                                    </li>\r\n                                    <li>\r\n                                        <img src={NavIcon} alt=\"\" />\r\n                                        <span>家居家纺</span>\r\n                                    </li>\r\n                                    <li>\r\n                                        <img src={NavIcon} alt=\"\" />\r\n                                        <span>家居家纺</span>\r\n                                    </li>\r\n                                    <li>\r\n                                        <img src={NavIcon} alt=\"\" />\r\n                                        <span>家居家纺</span>\r\n                                    </li>\r\n                                </ul>\r\n                                {/* 提示 */}\r\n                                <div className=\"notice-wrapper tab\">\r\n                                    <div className=\"tab-z\" data-tabstate=\"4\" onClick={this.tabHandle}></div>\r\n                                    <div className=\"notice\">\r\n                                        <div className=\"title\">\r\n                                            <img className=\"title-icon\" src={TigIcon} alt=\"\" />\r\n                                            <span>最新通知</span>\r\n                                        </div>\r\n                                        <div className=\"main\">\r\n                                            NIKE ADIDAS 进驻顺的积分...\r\n                                            </div>\r\n                                        <div className=\"more\">更多</div>\r\n                                    </div>\r\n                                </div>\r\n                                {/* 推荐 */}\r\n                                <ul className=\" rcm-goods tab\">\r\n                                    <div className=\"tab-z\" data-tabstate=\"5\" onClick={this.tabHandle}></div>\r\n                                    <li>\r\n                                        <img src={goodsBarItem1} alt=\"\" />\r\n                                    </li>\r\n                                    <li>\r\n                                        <img src={goodsBarItem2} alt=\"\" />\r\n                                    </li>\r\n                                    <li>\r\n                                        <img src={goodsBarItem3} alt=\"\" />\r\n                                    </li>\r\n                                </ul>\r\n                                {/* 广告 */}\r\n                                <div className=\" adv tab\">\r\n                                    <div className=\"tab-z\" data-tabstate=\"6\" onClick={this.tabHandle}></div>\r\n                                    <img className=\"w100 dis-block\" src={Adversing} alt=\"\" />\r\n                                </div>\r\n                                {/* 商品 */}\r\n                                <div className=\" tab-classify tab\">\r\n                                    <div className=\"tab-z\" data-tabstate=\"7\" onClick={this.tabHandle}></div>\r\n                                    <div className=\"tab-item tab-item-active\">\r\n                                        <div className=\"txt\">全部</div>\r\n                                        <div className=\"prompt\">为您推荐</div>\r\n                                        <div className=\"line\"></div>\r\n                                    </div>\r\n                                    <div className=\"tab-item\">\r\n                                        <div className=\"txt\">精选</div>\r\n                                        <div className=\"prompt\">海量正品</div>\r\n                                        <div className=\"line\"></div>\r\n                                    </div>\r\n                                    <div className=\"tab-item\">\r\n                                        <div className=\"txt\">热门</div>\r\n                                        <div className=\"prompt\">好物疯抢</div>\r\n                                        <div className=\"line\"></div>\r\n                                    </div>\r\n                                    <div className=\"tab-item\">\r\n                                        <div className=\"txt\">特惠</div>\r\n                                        <div className=\"prompt\">超值好货</div>\r\n                                        <div className=\"line\"></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"tab-obj-classify tab\">\r\n                                    <div className=\"tab-z\" data-tabstate=\"8\" onClick={this.tabHandle}></div>\r\n                                    <div className=\"classify-obj-item\">\r\n                                        <img src={Goods1} alt=\"\" />\r\n                                        <div className=\"goods-name line-clamp2\">多用途舒适枕芯 3D螺旋卷曲\r\n    立体纤维 有效缓解睡眠难题</div>\r\n                                        <div className=\"describe line-clamp1\">美观且大方，不容错过</div>\r\n                                        <div className=\"price-wrapper\">\r\n                                            <div className=\"price\">999</div>\r\n                                            <div className=\"line-price\">1999</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"classify-obj-item\">\r\n                                        <img src={Goods1} alt=\"\" />\r\n                                        <div className=\"goods-name line-clamp2\">多用途舒适枕芯 3D螺旋卷曲\r\n    立体纤维 有效缓解睡眠难题</div>\r\n                                        <div className=\"describe line-clamp1\">美观且大方，不容错过</div>\r\n                                        <div className=\"price-wrapper\">\r\n                                            <div className=\"price\">999</div>\r\n                                            <div className=\"line-price\">1999</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"classify-obj-item\">\r\n                                        <img src={Goods1} alt=\"\" />\r\n                                        <div className=\"goods-name line-clamp2\">多用途舒适枕芯 3D螺旋卷曲\r\n    立体纤维 有效缓解睡眠难题</div>\r\n                                        <div className=\"describe line-clamp1\">美观且大方，不容错过</div>\r\n                                        <div className=\"price-wrapper\">\r\n                                            <div className=\"price\">999</div>\r\n                                            <div className=\"line-price\">1999</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"classify-obj-item\">\r\n                                        <img src={Goods1} alt=\"\" />\r\n                                        <div className=\"goods-name line-clamp2\">多用途舒适枕芯 3D螺旋卷曲\r\n    立体纤维 有效缓解睡眠难题</div>\r\n                                        <div className=\"describe line-clamp1\">美观且大方，不容错过</div>\r\n                                        <div className=\"price-wrapper\">\r\n                                            <div className=\"price\">999</div>\r\n                                            <div className=\"line-price\">1999</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={10}>\r\n                        <div className={styles.pageSetWrapper}>\r\n                            {/* 图片库组件 */}\r\n                            {this.state.picLibraryStatus ? <PicLibrary picLibraryStatus={this.state.picLibraryStatus} picLibraryBackStatus={this.picLibraryBackStatus} /> : ''}\r\n                            <Form\r\n                                name=\"page_set_form\"\r\n                                initialValues={{ bannerNodesList: bannerNodesList, navNodesList: navNodesList, recNodesList: recNodesList, advNodesList: advNodesList, goodsTabNodesList: goodsTabNodesList, goodsPlayMain: goodsPlayMain }}\r\n                                onFinish={onFinish}\r\n                                onFinishFailed={onFinishFailed}>\r\n                                {/* 搜索设置 */}\r\n                                <div className={this.state.tabState === 1 ? 'search-set active' : 'search-set tab-obj-item'}>\r\n                                    <h3 className=\"page-set-title\">搜索框</h3>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"搜索文字\" name=\"searchTxt\">\r\n                                        <Input defaultValue=\"积分兑换\" onChange={(e) => this.inputChange('searchTxt', '', e)} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"搜索框样式\" name=\"searchStyle\">\r\n                                        <Radio.Group name=\"searchStyle\" options={searchSearchStyleOptions} onChange={(e) => this.radioHandle(e)} defaultValue={this.state.searchStyle} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"文字对齐方式\" name=\"seachTxtAlign\">\r\n                                        <Radio.Group name=\"seachTxtAlign\" options={seachTxtAlignOptions} onChange={(e) => this.radioHandle(e)} defaultValue={this.state.seachTxtAlign} />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                {/* 轮播设置 */}\r\n                                <div className={this.state.tabState === 2 ? 'banner-set active' : 'banner-set tab-obj-item'}>\r\n                                    <h3 className=\"page-set-title\">轮播</h3>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"指示点颜色\" name=\"bannerPointColor\">\r\n                                        <InputColor\r\n                                            initialValue=\"#ffffff\"\r\n                                            onChange={(value) => this.colorPicker('bannerPointColor', value)}\r\n                                            placement=\"right\"\r\n                                        ></InputColor>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"指示点形状\" name=\"bannerPointShape\">\r\n                                        <Radio.Group name=\"bannerPointShape\" options={bannerPointShapeOptions} onChange={(e) => this.radioHandle(e)} defaultValue={this.state.bannerPointShape} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"上下边距\" name=\"bannerTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('bannerTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"左右边距\" name=\"bannerLfteRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('bannerLfteRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    {bannerNodesItems}\r\n                                    <Form.Item>\r\n                                        <Button className=\"pull-right\" type=\"default\" onClick={() => this.addOptionsNodes('bannerNodesList')}>添加一个</Button>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                {/* 导航设置 */}\r\n                                <div className={this.state.tabState === 3 ? 'nav-set active' : 'nav-set tab-obj-item'}>\r\n                                    <h3 className=\"page-set-title\">导航</h3>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"外框背景颜色\" name=\"navOutBgCol\">\r\n                                        <InputColor\r\n                                            initialValue=\"#ffffff\"\r\n                                            onChange={(value) => this.colorPicker('navOutBgCol', value)}\r\n                                            placement=\"right\"\r\n                                        ></InputColor>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"上下边距\" name=\"navTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('navTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"左右边距\" name=\"navLeftRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('navLeftRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Divider dashed />\r\n                                    <Form.Item label=\"内框背景颜色\" name=\"navInsBgCol\">\r\n                                        <InputColor\r\n                                            initialValue=\"#ffffff\"\r\n                                            onChange={(value) => this.colorPicker('navInsBgCol', value)}\r\n                                            placement=\"right\"\r\n                                        ></InputColor>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"上边距\" name=\"navInsTopMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('navInsTopMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"右边距\" name=\"navInsRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('navInsRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"下边距\" name=\"navInsBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('navInsBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"左边距\" name=\"navInsLeftMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('navInsLeftMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"上圆角\" name=\"navInsTopRound\">\r\n                                        <Slider onChange={(value) => this.sliderChange('navInsTopRound', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"下圆角\" name=\"navInsBottomRound\">\r\n                                        <Slider onChange={(value) => this.sliderChange('navInsBottomRound', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"每行数量\" name=\"navLineNum\">\r\n                                        <Radio.Group name=\"navLineNum\" options={navLineNumOptions} onChange={(e) => this.radioHandle(e)} defaultValue={this.state.navLineNum} />\r\n                                    </Form.Item>\r\n                                    {bannerNodesItem}\r\n                                    <Form.Item>\r\n                                        <Button className=\"pull-right\" type=\"default\" onClick={() => this.addOptionsNodes('navNodesList')}>添加一个</Button>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                {/* 系统消息 */}\r\n                                <div className={this.state.tabState === 4 ? 'notice-set active' : 'notice-set tab-obj-item'}>\r\n                                    <h3 className=\"page-set-title\">系统消息</h3>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"上下边距\" name=\"noticeTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('noticeTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"左右边距\" name=\"noticeLeftRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('noticeLeftRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                {/* 热门推荐 */}\r\n                                <div className={this.state.tabState === 5 ? 'rcm-goods-set active' : 'rcm-goods-set tab-obj-item'}>\r\n                                    <h3 className=\"page-set-title\">推荐</h3>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"上下边距\" name=\"rcmTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('rcmTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"左右边距\" name=\"rcmLeftRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('rcmLeftRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    {recNodesItem}\r\n                                    <Form.Item>\r\n                                        <Button className=\"pull-right\" type=\"default\" onClick={() => this.addOptionsNodes('recNodesList')}>添加一个</Button>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                {/* 广告 */}\r\n                                <div className={this.state.tabState === 6 ? 'adv-set active' : 'adv-set tab-obj-item'}>\r\n                                    <h3 className=\"page-set-title\">广告栏</h3>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"上下边距\" name=\"advTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('advTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"左右边距\" name=\"advLeftRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('advLeftRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    {advNodesItem}\r\n                                    <Form.Item>\r\n                                        <Button className=\"pull-right\" type=\"default\" onClick={() => this.addOptionsNodes('advNodesList')}>添加一个</Button>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                {/* 商品分类导航设置 */}\r\n                                <div className={this.state.tabState === 7 ? 'goods-tab-set active' : 'goods-tab-set tab-obj-item'}>\r\n                                    <h3 className=\"page-set-title\">商品分类导航</h3>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"上下边距\" name=\"goodsTabTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsTabTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"左右边距\" name=\"goodsTabLeftRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsTabLeftRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    {goodsTabNodesItem}\r\n                                    <Form.Item>\r\n                                        <Button className=\"pull-right\" type=\"default\" onClick={() => this.addOptionsNodes('goodsTabNodesList')}>添加一个</Button>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                {/* 商品设置 */}\r\n                                <div className={this.state.tabState === 8 ? 'goods-set active' : 'goods-set tab-obj-item'}>\r\n                                    <h3 className=\"page-set-title\">商品</h3>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"商品分类\" name=\"goodsClassify\">\r\n                                        <select className=\"form-select w100\" name=\"\" id=\"\">\r\n                                            <option value=\"\">1</option>\r\n                                            <option value=\"\">2</option>\r\n                                            <option value=\"\">3</option>\r\n                                        </select>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"商品排序\" name=\"goodsSort\">\r\n                                        <Radio.Group name=\"goodsSort\" options={goodsSortOptions} onChange={(e) => this.radioHandle(e)} defaultValue={this.state.goodsSort} />\r\n                                    </Form.Item>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"商品上下边距\" name=\"goodsTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"商品左右边距\" name=\"goodsLfteRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsLfteRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"商品图片圆角\" name=\"goodsPicRound\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsPicRound', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"内框上下边距\" name=\"goodsInsTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsInsTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"内框左右边距\" name=\"goodsInsLfteRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsInsLfteRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"外框上下边距\" name=\"goodsOutTopBottomMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsOutTopBottomMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"外框左右边距\" name=\"goodsOutLfteRightMargin\">\r\n                                        <Slider onChange={(value) => this.sliderChange('goodsOutLfteRightMargin', value)} tipFormatter={this.sliderTipFormatter} />\r\n                                    </Form.Item>\r\n                                    <Divider />\r\n                                    <Form.Item label=\"显示内容\" name=\"goodsPlayMain\">\r\n                                        <Checkbox\r\n                                            data-val=\"goodsName\"\r\n                                            defaultChecked={goodsPlayMain.includes('goodsName') ? true : false}\r\n                                            onChange={(e) => this.checkBoxChange('goodsPlayMain', e)}\r\n                                        >\r\n                                            商品名称\r\n                                            </Checkbox>\r\n                                        <Checkbox\r\n                                            data-val=\"goodsScr\"\r\n                                            defaultChecked={goodsPlayMain.includes('goodsScr') ? true : false}\r\n                                            onChange={(e) => this.checkBoxChange('goodsPlayMain', e)}\r\n                                        >\r\n                                            商品描述\r\n                                            </Checkbox>\r\n                                        <Checkbox\r\n                                            data-val=\"goodsPrice\"\r\n                                            defaultChecked={goodsPlayMain.includes('goodsPrice') ? true : false}\r\n                                            onChange={(e) => this.checkBoxChange('goodsPlayMain', e)}\r\n                                        >\r\n                                            商品价格\r\n                                            </Checkbox>\r\n                                        <Checkbox\r\n                                            data-val=\"goodsLinePrice\"\r\n                                            defaultChecked={goodsPlayMain.includes('goodsLinePrice') ? true : false}\r\n                                            onChange={(e) => this.checkBoxChange('goodsPlayMain', e)}\r\n                                        >\r\n                                            商品划线价格\r\n                                            </Checkbox>\r\n                                        <Checkbox\r\n                                            data-val=\"goodsSales\"\r\n                                            defaultChecked={goodsPlayMain.includes('goodsSales') ? true : false}\r\n                                            onChange={(e) => this.checkBoxChange('goodsPlayMain', e)}\r\n                                        >\r\n                                            销量\r\n                                            </Checkbox>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <Form.Item>\r\n                                    <Button className=\"pull-right\" type=\"primary\" htmlType=\"submit\">保存页面</Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PageDesign;","E:\\zm\\ThatYear\\gift-react\\src\\pages\\order\\index.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\goods\\index.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\goods\\addGoods.jsx",["133","134"],"import React from 'react';\r\n// 样式\r\nimport AddGoodsCssMoudle from '../../css/addGoods.module.css';\r\nimport UploadIcon from '../../assets/icon/upload.png';\r\n// antd 组件\r\nimport { Row, Col, Breadcrumb, Form, Input, Radio,Button} from 'antd';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport Editor from 'react-umeditor';\r\n// 图片库组件\r\nimport PicLibrary from '../../components/picLibrary';\r\nconst { TextArea } = Input;\r\n\r\nclass FromList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // 编辑器\r\n            content: \"\",\r\n            // 图片库\r\n            picLibraryStatus: false,\r\n            // 商品规格\r\n            goodsStyle: 'single',\r\n             spec: false,\r\n             specName: \"\",\r\n             specVal: \"\",\r\n             specAttrList: [],\r\n             newSpecVal: \"\",\r\n             newSpecValIndex: 0\r\n        }\r\n        this.prevStepEvent = this.prevStepEvent.bind(this);\r\n        this.nextStepEvent = this.nextStepEvent.bind(this);\r\n        this.radioHandle = this.radioHandle.bind(this);\r\n        this.picLibraryBackStatus = this.picLibraryBackStatus.bind(this);\r\n        this.picLibraryStatusChange = this.picLibraryStatusChange.bind(this);\r\n        this.addSpec = this.addSpec.bind(this);\r\n        this.specConfirm = this.specConfirm.bind(this);\r\n        this.specCancel = this.specCancel.bind(this);\r\n        this.iptHandle = this.iptHandle.bind(this);\r\n        this.addSpecVal = this.addSpecVal.bind(this);\r\n        this.countSum = this.countSum.bind(this);\r\n        this.getSpecAttr = this.getSpecAttr.bind(this);\r\n        this.showTd = this.showTd.bind(this);\r\n    }\r\n    // 上一步\r\n    prevStepEvent() {\r\n        var tabid = (Number(this.props.tabid) - 1) + '';\r\n        this.props.childPassData(tabid)\r\n    }\r\n    // 下一步\r\n    nextStepEvent() {\r\n        var tabid = (Number(this.props.tabid) + 1) + '';\r\n        this.props.childPassData(tabid)\r\n    }\r\n    // 输入框\r\n    iptHandle(e, index) {\r\n        let val = e.target.value;\r\n        console.log(\"name\", e.target.name)\r\n        this.setState({\r\n            [e.target.name]: val,\r\n            newSpecValIndex: index\r\n        })\r\n    }\r\n    // 单选按钮\r\n    radioHandle(name, e) {\r\n        console.log('name', name);\r\n        console.log('radio1 checked', e.target.value);\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    // 编辑器\r\n    handleChange(content) {\r\n        this.setState({\r\n            content: content\r\n        })\r\n    }\r\n    getIcons() {\r\n        var icons = [\r\n            \"source | undo redo | bold italic underline strikethrough fontborder emphasis | \",\r\n            \"paragraph fontfamily fontsize | superscript subscript | \",\r\n            \"forecolor backcolor | removeformat | insertorderedlist insertunorderedlist | selectall | \",\r\n            \"cleardoc  | indent outdent | justifyleft justifycenter justifyright | touppercase tolowercase | \",\r\n            \"horizontal date time  | image emotion spechars | inserttable\"\r\n        ]\r\n        return icons;\r\n    }\r\n    getPlugins() {\r\n        return {\r\n            \"image\": {\r\n                \"uploader\": {\r\n                    \"name\": \"file\",\r\n                    \"url\": \"/api/upload\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 图片库=>数据返回\r\n    picLibraryBackStatus(data) {\r\n        this.setState({\r\n            picLibraryStatus: !data\r\n        })\r\n    }\r\n    picLibraryStatusChange() {\r\n        this.setState({ picLibraryStatus: true });\r\n    }\r\n     // 商品规格=>添加\r\n     addSpec() {\r\n        this.setState({\r\n            spec: true\r\n        })\r\n    }\r\n    // 商品规格=> 确认\r\n    specConfirm() {\r\n        let specAttrList = this.state.specAttrList;\r\n        let attrObj = {\r\n            specName: this.state.specName,\r\n            children: [\r\n                { attr: this.state.specVal }\r\n            ]\r\n        }\r\n        specAttrList.push(attrObj)\r\n        this.setState({\r\n            spec: false,\r\n            specAttrList: specAttrList,\r\n            specName: \"\",\r\n            specVal: \"\",\r\n        })\r\n        console.log('specAttrList', specAttrList)\r\n    }\r\n    // 商品规格=> 取消\r\n    specCancel() {\r\n        this.setState({\r\n            spec: false\r\n        })\r\n    }\r\n    // 添加规格值\r\n    addSpecVal(index) {\r\n        if (this.state.newSpecVal != \"\" && this.state.newSpecValIndex === index) {\r\n            let specAttrList = this.state.specAttrList;\r\n            specAttrList[index].children.push({ attr: this.state.newSpecVal })\r\n            this.setState({ specAttrList: specAttrList, newSpecVal: \"\" })\r\n        } else {\r\n            alert(\"您为空\")\r\n        }\r\n    }\r\n    // 计算属性的乘积(获取配对的可能性)\r\n    countSum(specIndex) {\r\n        console.log(\"specList\", this.state.specAttrList);\r\n        let num = 1;\r\n        this.state.specAttrList.forEach((item, index) => {\r\n            if (index >= specIndex && item.children.length) {\r\n                num *= item.children.length;\r\n            }\r\n        });\r\n        return num;\r\n    }\r\n    /**\r\n     * 根据传入的属性值，拿到相应规格的属性\r\n     * @param specIndex\r\n     * @param index 所有属性在遍历时的序号\r\n     * @returns {string}\r\n     */\r\n    getSpecAttr(specIndex, index) {\r\n        // 获取当前规格项目下的属性值\r\n        let specAttrList = this.state.specAttrList;\r\n        const currentValues = specAttrList[specIndex].children;\r\n        // 判断是否是最后一个规格项目\r\n        let indexCopy = (specAttrList[specIndex + 1] && specAttrList[specIndex + 1].children.length)\r\n            ? index / this.countSum(specIndex + 1)\r\n            : index;\r\n        const i = Math.floor(indexCopy % currentValues.length);\r\n        return (i.toString() !== 'NaN') ? currentValues[i] : '';\r\n    }\r\n    /**\r\n      * 根据传入的条件，来判断是否显示该td\r\n      * [如果当前项目下没有属性，则不显示]\r\n      * @param specIndex\r\n      * @param index\r\n      * @returns {boolean}\r\n      */\r\n    showTd(specIndex, index) {\r\n        if (!this.state.specAttrList[specIndex]) {\r\n            return false;\r\n        } else if (index % this.countSum(specIndex + 1) === 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    render() {\r\n        let tabid = this.props.tabid;\r\n        // 商品规格\r\n        const goodsStyleOptions = [\r\n            { label: '单规格', value: 'single' },\r\n            { label: '多规格', value: 'double' }\r\n        ];\r\n        // 表单提交\r\n        const onFinish = (values) => {\r\n            console.log('Success:', values);\r\n        };\r\n\r\n        const onFinishFailed = (errorInfo) => {\r\n            console.log('Failed:', errorInfo);\r\n        };\r\n        // 编辑器\r\n        var icons = this.getIcons();\r\n        var plugins = this.getPlugins();\r\n        // 规格按钮\r\n        let specBtn\r\n        if (this.state.spec) {\r\n            specBtn = <div className=\"spec-btn-box dis-flx\">\r\n                <Form.Item>\r\n                    <Button size=\"small\" block onClick={this.specCancel}>取消</Button>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button size=\"small\" type=\"primary\" onClick={this.specConfirm} style={{ marginLeft: \"15px\" }}>确定</Button>\r\n                </Form.Item>\r\n            </div>\r\n        } else {\r\n            specBtn = <div className=\"spec-btn-box\">\r\n                <Form.Item>\r\n                    <Button onClick={this.addSpec}>添加规格</Button>\r\n                </Form.Item>\r\n            </div>\r\n        }\r\n        // 规格属性\r\n        let specAttrList = this.state.specAttrList;\r\n        let specAttrNodesItem = specAttrList.map((item, index) => {\r\n            return (\r\n                <React.Fragment key={index}>\r\n                    <div className=\"spec-attr-box\">\r\n                        <div className=\"name\">\r\n                            {item.specName}\r\n                            <div className=\"delete-cover\"></div>\r\n                        </div>\r\n                        <div className=\"val-box\">\r\n                            {item.children.map((attrValItem, attrIndexItem) => {\r\n                                return (\r\n                                    <React.Fragment key={attrIndexItem}>\r\n                                        <ul>\r\n                                            <li className=\"val\">\r\n                                                {attrValItem.attr}\r\n                                                <div className=\"delete-cover\"></div>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </React.Fragment>\r\n                                )\r\n                            })}\r\n                            <div className=\"add-val-box\">\r\n                                <input name=\"newSpecVal\" onChange={(e) => this.iptHandle(e, index)} />\r\n                                <div className=\"btn\" onClick={() => this.addSpecVal(index)}>添加</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        })\r\n        // 规格表格\r\n        let renderSpec = []\r\n        // 表格合并\r\n        for (let i = 0; i < this.countSum(0); i++) {\r\n            renderSpec.push(\r\n                <tr className=\"spec-table-tbody-tr\" key={i}>\r\n                    {this.state.specAttrList.length > 0 && this.state.specAttrList.map((item, index) => {\r\n                        if (this.showTd(index, i)) {\r\n                            let tagName = this.getSpecAttr(index, i);\r\n                            let n = index + 1;\r\n                            let rowSpan = this.countSum(n);\r\n                            return <td className=\"spec-table-tbody-td\" rowSpan={rowSpan} key={index}>{tagName.attr}</td>\r\n                        }\r\n                    })}\r\n                    <td className=\"spec-table-tbody-td\">\r\n                        <div className=\"img\" onClick={this.picLibraryStatusChange}>+</div>\r\n                    </td>\r\n                    <td className=\"spec-table-tbody-td\">\r\n                        <input className=\"ipt\" type=\"number\" />\r\n                    </td>\r\n                    <td className=\"spec-table-tbody-td\">\r\n                        <input className=\"ipt\" type=\"number\" />\r\n                    </td>\r\n                    <td className=\"spec-table-tbody-td\">\r\n                        <input className=\"ipt\" type=\"number\" />\r\n                    </td>\r\n                    <td className=\"spec-table-tbody-td\">\r\n                        <input className=\"ipt\" type=\"number\" />\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n                {/* 图片库组件 */}\r\n                {this.state.picLibraryStatus ? <PicLibrary picLibraryStatus={this.state.picLibraryStatus} picLibraryBackStatus={this.picLibraryBackStatus} /> : ''}\r\n                <Form\r\n                    layout=\"vertical\"\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <div className={tabid === '0' ? `${AddGoodsCssMoudle.active} ${AddGoodsCssMoudle.tabObjItem}` : `${AddGoodsCssMoudle.tabObjItem}`}>\r\n                        <Form.Item\r\n                            label=\"商品名称\"\r\n                            name=\"goodsName\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '亲，您还没有输入商品名称哦!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"商品描述\"\r\n                            name=\"goodsDescribe\"\r\n                        >\r\n                            <TextArea rows={4} />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"商品类别\"\r\n                            name=\"goodsType\"\r\n                        >\r\n                            <select className=\"form-select w100\" name=\"\" id=\"\">\r\n                                <option value=\"\">1</option>\r\n                                <option value=\"\">2</option>\r\n                                <option value=\"\">3</option>\r\n                            </select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"商品价格\"\r\n                            name=\"price\"\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"划线价格\"\r\n                            name=\"linePrice\"\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品规格\" name=\"goodsStyle\">\r\n                            <Radio.Group name=\"goodsStyle\" options={goodsStyleOptions} onChange={(e) => this.radioHandle(\"goodsStyle\", e)} defaultValue={this.state.goodsStyle} />\r\n                        </Form.Item>\r\n                        <div className={this.state.goodsStyle === 'double' ? 'goods-spec-active pd-20 mb-30' : \"goods-spec pd-20 mb-30\"}>\r\n                            {/* 多规格属性 */}\r\n                            {specAttrNodesItem}\r\n                            {/* 多规格输入框 */}\r\n                            <div className={this.state.spec ? \"spec-box-active\" : \"spec-box\"}>\r\n                                <Form.Item label=\"规格名\" name=\"specName\" rules={[{ required: true, message: '亲，您还没有输入规格名称哦！' }]}>\r\n                                    <Input style={{ width: \"30%\" }} name=\"specName\" placeholder=\"请输入规格名称\" onChange={(e) => this.iptHandle(e)} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"规格值\" name=\"specVal\" rules={[{ required: true, message: '亲，您还没有输入规格名称哦！' }]}>\r\n                                    <Input style={{ width: \"30%\" }} name=\"specVal\" placeholder=\"请输入规格值\" onChange={(e) => this.iptHandle(e)} />\r\n                                </Form.Item>\r\n                            </div>\r\n                            {/* 多规格按钮 */}\r\n                            {specBtn}\r\n                            {/* 多规格表格 */}\r\n                            <table className=\"spec-table\">\r\n                                <thead align=\"center\">\r\n                                    <tr className=\"spec-table-thead-tr\">\r\n                                        {specAttrList.map((item, index) => {\r\n                                            return (\r\n                                                <React.Fragment key={index}>\r\n                                                    <th className=\"spec-table-thead-th\">{item.specName}</th>\r\n                                                </React.Fragment>\r\n                                            )\r\n                                        })}\r\n                                        <th className=\"spec-table-thead-th\">规格图片</th>\r\n                                        <th className=\"spec-table-thead-th\">商品价格</th>\r\n                                        <th className=\"spec-table-thead-th\">划线价格</th>\r\n                                        <th className=\"spec-table-thead-th\">库存</th>\r\n                                        <th className=\"spec-table-thead-th\">销量</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody align=\"center\">\r\n                                    {renderSpec}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <FormItem>\r\n                            <div className=\"next-step-btn fon-13 pull-right\" onClick={this.nextStepEvent}><i className=\"iconfont icon-longarrowright mr-10 fon-12\"></i>下一步</div>\r\n                        </FormItem>\r\n                    </div>\r\n                    <div className={tabid === '1' ? `${AddGoodsCssMoudle.active} ${AddGoodsCssMoudle.tabObjItem}` : `${AddGoodsCssMoudle.tabObjItem}`}>\r\n                        <Form.Item>\r\n                            <div className={AddGoodsCssMoudle.fromControlFile} onClick={this.picLibraryStatusChange}>\r\n                                <img src={UploadIcon} alt=\"\" />\r\n                            </div>\r\n                            <p className=\"text-align fon-13 text-626\"> 上传图片</p>\r\n                            <div className=\"prompt text-6c7 fon-12 mt-10\">尺寸750x750像素比，大小2M以下</div>\r\n                        </Form.Item>\r\n                        <FormItem>\r\n                            <div className=\"next-step-btn fon-13 pull-right\" onClick={this.nextStepEvent}><i className=\"iconfont icon-longarrowright mr-10 fon-12\"></i>下一步</div>\r\n                            <div className=\"prev-step-btn mr-20 fon-13 pull-right\" onClick={this.prevStepEvent}><i className=\"iconfont icon-long-arrow-left mr-10 fon-12\"></i>上一步</div>\r\n                        </FormItem>\r\n                    </div>\r\n                    <div className={tabid === '2' ? `${AddGoodsCssMoudle.active} ${AddGoodsCssMoudle.tabObjItem}` : `${AddGoodsCssMoudle.tabObjItem}`}>\r\n                        <FormItem><Editor ref=\"editor\"\r\n                            icons={icons}\r\n                            value={this.state.content} defaultValue=\"<p>React Umeditor</p>\"\r\n                            onChange={this.handleChange.bind(this)}\r\n                            plugins={plugins} /></FormItem>\r\n                        <FormItem>\r\n                            <div className=\"next-step-btn fon-13 pull-right\" onClick={this.nextStepEvent}><i className=\"iconfont icon-longarrowright mr-10 fon-12\"></i>下一步</div>\r\n                            <div className=\"prev-step-btn mr-20 fon-13 pull-right\" onClick={this.prevStepEvent}><i className=\"iconfont icon-long-arrow-left mr-10 fon-12\"></i>上一步</div>\r\n                        </FormItem>\r\n                    </div>\r\n                    <div className={tabid === '3' ? `${AddGoodsCssMoudle.active} ${AddGoodsCssMoudle.tabObjItem}` : `${AddGoodsCssMoudle.tabObjItem}`}>\r\n                        <Form.Item\r\n                            label=\"销量\"\r\n                            name=\"sales\"\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"库存\"\r\n                            name=\"inventory\"\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <button className=\"next-step-btn fon-13 pull-right\"><i className=\"iconfont icon-save24 mr-10 fon-12\"></i>提交</button>\r\n                            <div className=\"prev-step-btn mr-20 fon-13 pull-right\" onClick={this.prevStepEvent}><i className=\"iconfont icon-long-arrow-left mr-10 fon-12\"></i>上一步</div>\r\n                        </Form.Item>\r\n                    </div>\r\n                </Form>\r\n            </>\r\n        )\r\n    }\r\n}\r\nclass AddGoods extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tabid: \"0\"\r\n        }\r\n        this.tabChangeEvent = this.tabChangeEvent.bind(this)\r\n        this.childPassData = this.childPassData.bind(this)\r\n    }\r\n    // tab切换\r\n    tabChangeEvent(e) {\r\n        this.setState({\r\n            tabid: e.target.dataset.tabid\r\n        })\r\n    }\r\n    // 子组件传递数据\r\n    childPassData(data) {\r\n        this.setState({\r\n            tabid: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <h3><strong>添加商品</strong></h3>\r\n                    </Col>\r\n                    <Col span={12} className=\"text-align-right\">\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item>系统</Breadcrumb.Item>\r\n                            <Breadcrumb.Item>\r\n                                添加商品\r\n                            </Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <div className=\"add-goods-card bg-fff box-sd pd-17\">\r\n                            <ul className={AddGoodsCssMoudle.tab}>\r\n                                <li className={this.state.tabid === \"0\" ? `${AddGoodsCssMoudle.tabItem} ${AddGoodsCssMoudle.tabItemActive}` : `${AddGoodsCssMoudle.tabItem}`} data-tabid=\"0\" onClick={this.tabChangeEvent}>商品属性</li>\r\n                                <li className={this.state.tabid === \"1\" ? `${AddGoodsCssMoudle.tabItem} ${AddGoodsCssMoudle.tabItemActive}` : `${AddGoodsCssMoudle.tabItem}`} data-tabid=\"1\" onClick={this.tabChangeEvent}>商品图片</li>\r\n                                <li className={this.state.tabid === \"2\" ? `${AddGoodsCssMoudle.tabItem} ${AddGoodsCssMoudle.tabItemActive}` : `${AddGoodsCssMoudle.tabItem}`} data-tabid=\"2\" onClick={this.tabChangeEvent}>商品详情</li>\r\n                                <li className={this.state.tabid === \"3\" ? `${AddGoodsCssMoudle.tabItem} ${AddGoodsCssMoudle.tabItemActive}` : `${AddGoodsCssMoudle.tabItem}`} data-tabid=\"3\" onClick={this.tabChangeEvent}>商品数量</li>\r\n                            </ul>\r\n                            <div className={AddGoodsCssMoudle.tabObj}>\r\n                                <FromList tabid={this.state.tabid} childPassData={this.childPassData} />\r\n                            </div>\r\n                        </div>\r\n                    </Col >\r\n                </Row >\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddGoods;","E:\\zm\\ThatYear\\gift-react\\src\\pages\\user\\index.jsx",["135"],"import React from 'react';\r\nimport axios from '../../common/js/axios';\r\n// 样式\r\nimport '../../css/user.less';\r\nimport userPic from '../../assets/images/upload-user-pic.png';\r\nimport Icon from '../../assets/icon/02.png';\r\nimport Editor from 'react-umeditor';\r\n\r\n// antd 组件\r\nimport { Row, Col, Breadcrumb } from 'antd';\r\n// 图片库组件\r\nimport PicLibrary from '../../components/picLibrary';\r\nclass Users extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editorStatus: false,\r\n            adminAccount: \"\",\r\n            adminPassword: \"\",\r\n            userName: \"\",\r\n            describe: \"\",\r\n            phone: \"\",\r\n            qq: \"\",\r\n            wx: \"\",\r\n            // 编辑器\r\n            content: \"\",\r\n            // 图片库\r\n            picLibraryStatus: false\r\n        }\r\n        this.editor = this.editor.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        this.picLibraryBackStatus = this.picLibraryBackStatus.bind(this);\r\n        this.picLibraryStatusChange = this.picLibraryStatusChange.bind(this);\r\n        this.initUsersData = this.initUsersData.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.initUsersData()\r\n    }\r\n    // 数据初始化\r\n    initUsersData() {\r\n        let params = {\r\n            userId: localStorage.getItem(\"userId\")\r\n        }\r\n        axios.getAxios('/users', params).then(res => {\r\n            console.log(\"res\", res);\r\n            if (res.status === 200) {\r\n                this.setState({\r\n                    adminAccount: res.data.adminAccount,\r\n                    adminPassword: res.data.adminPassword,\r\n                    userName: res.data.userName,\r\n                    describe: res.data.describe,\r\n                    phone: res.data.phone,\r\n                    qq: res.data.qq,\r\n                    wx: res.data.wx,\r\n                })\r\n            }\r\n        })\r\n    }\r\n    // 编辑\r\n    editor() {\r\n        this.setState({ editorStatus: true })\r\n    }\r\n    // 提交\r\n    submit(event) {\r\n        let data = {\r\n            userId: localStorage.getItem(\"userId\"),\r\n            userName: this.state.userName,\r\n            describe: this.state.describe,\r\n            adminAccount: this.state.adminAccount,\r\n            adminPassword: this.state.adminPassword,\r\n            phone: this.state.phone,\r\n            qq: this.state.qq,\r\n            wx: this.state.wx,\r\n        }\r\n        console.log(\"data\",data);\r\n        axios.postAxios('/users/editor', data).then(res => {\r\n            console.log('res', res);\r\n            if (res.data.status === \"success\") {\r\n                this.initUsersData()\r\n            }\r\n        });\r\n        this.setState({ editorStatus: false })\r\n        event.preventDefault()\r\n    }\r\n    // input监听\r\n    inputChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    // 编辑器\r\n    handleChange(content) {\r\n        this.setState({\r\n            content: content\r\n        })\r\n    }\r\n    getIcons() {\r\n        var icons = [\r\n            \"source | undo redo | bold italic underline strikethrough fontborder emphasis | \",\r\n            \"paragraph fontfamily fontsize | superscript subscript | \",\r\n            \"forecolor backcolor | removeformat | insertorderedlist insertunorderedlist | selectall | \",\r\n            \"cleardoc  | indent outdent | justifyleft justifycenter justifyright | touppercase tolowercase | \",\r\n            \"horizontal date time  | image emotion spechars | inserttable\"\r\n        ]\r\n        return icons;\r\n    }\r\n    getPlugins() {\r\n        return {\r\n            \"image\": {\r\n                \"uploader\": {\r\n                    \"name\": \"file\",\r\n                    \"url\": \"/api/upload\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 图片库=>数据返回\r\n    picLibraryBackStatus(data) {\r\n        this.setState({\r\n            picLibraryStatus: !data\r\n        })\r\n    }\r\n    picLibraryStatusChange() {\r\n        this.setState({ picLibraryStatus: true });\r\n    }\r\n    render() {\r\n        let editorStatus = this.state.editorStatus;\r\n        // 编辑器\r\n        var icons = this.getIcons();\r\n        var plugins = this.getPlugins();\r\n        return (\r\n            <div className=\"main\">\r\n                {/* 图片库组件 */}\r\n                {this.state.picLibraryStatus ? <PicLibrary picLibraryStatus={this.state.picLibraryStatus} picLibraryBackStatus={this.picLibraryBackStatus} /> : ''}\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <h3><strong>用户信息</strong></h3>\r\n                    </Col>\r\n                    <Col span={12} className=\"text-align-right\">\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item>系统</Breadcrumb.Item>\r\n                            <Breadcrumb.Item>\r\n                                用户信息\r\n                            </Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                    </Col>\r\n                </Row>\r\n                <form>\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <div className=\"user-msg-card w100 box-sd pd-17 bg-fff mb-30\">\r\n                                <div className=\"card-bg w100 box-siz\">\r\n                                    <div className=\"user-info pos-a\">\r\n                                        <Row>\r\n                                            <Col span={12}>\r\n                                                <div className=\"dis-flx align-items-center\">\r\n                                                    <div className=\"user-pic\">\r\n                                                        <div className=\"cover\" onClick={this.picLibraryStatusChange}><img src={userPic} alt=\"\" /></div>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        {this.state.userName === \"\" ? <h2 className=\"name text-white fon-30 fon-w-700 mb-0\">未填写</h2> : <h2 className=\"name text-white fon-30 fon-w-700 mb-0\">{this.state.userName}</h2>}\r\n                                                        &nbsp;&nbsp;{editorStatus ? <input value={this.state.userName} name=\"userName\" className=\"input-bottom-line pl-11 ant-input-color-fff\" placeholder=\"昵称\" onChange={(e) => this.inputChange(e)} /> : ''}\r\n                                                        <p className=\"lavel text-white\">- Admin</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col span={12} className=\"text-align-right align-self\">\r\n                                                {editorStatus ?\r\n                                                    <button type=\"submit\" className=\"editor-btn bg-218 text-white fon-14 \" onClick={this.submit}><i className=\"mr-5 iconfont icon-tijiaochenggong\"></i>提交</button>\r\n                                                    : <button type=\"button\" className=\"editor-btn bg-218 text-white fon-14 \" onClick={this.editor}><i className=\"mr-5 iconfont icon-icon-\"></i>编辑</button>}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={30, 30}>\r\n                        <Col span={8}>\r\n                            <div className=\"about-me-card box-sd bg-fff pd-17\">\r\n                                <div className=\"title fon-w-500 pb-14 bd-bottom mb-15\"><strong>关于我</strong></div>\r\n                                {editorStatus ? <textarea name=\"describe\" value={this.state.describe} className=\"ant-textarea w100\" placeholder=\"描述：\" onChange={(e) => this.inputChange(e)} /> : <div className=\"describe text-626 fon-w-500\">\r\n                                    描述：{this.state.describe === \"\" ? \"未填写\" : this.state.describe}\r\n                                </div>}\r\n                                <ul className=\"mt-20\">\r\n                                    <li className=\"dis-flx align-items-center\">\r\n                                        <i className=\"iconfont icon-zhanghao text-84b mr-10 fon-20\"></i>\r\n                                        <span className=\"fon-13 text-626 fon-w-500\">{this.state.adminAccount}</span>\r\n                                    </li>\r\n                                    <li className=\"dis-flx align-items-center\">\r\n                                        <i className=\"iconfont icon-mima text-17a mr-10 fon-20\"></i>\r\n                                  {editorStatus ? <input name=\"adminPassword\" value={this.state.adminPassword} className=\"input-bottom-line pl-11\" placeholder=\"密码\" onChange={(e) => this.inputChange(e)} /> : <span className=\"fon-13 text-626 fon-w-500\">\r\n                                            {\r\n                                                this.state.adminPassword\r\n                                            }\r\n                                        </span>}\r\n                                    </li>\r\n                                    <li className=\"dis-flx align-items-center\">\r\n                                        <i className=\"iconfont icon-weibiaoti- text-ffc mr-10 fon-20\"></i>\r\n                                    {editorStatus ? <input value={this.state.phone} name=\"phone\" className=\"input-bottom-line pl-11\" placeholder=\"电话\" onChange={(e) => this.inputChange(e)} /> : <span className=\"fon-13 text-626 fon-w-500\">\r\n                                            {\r\n                                                this.state.phone === \"\" ? \"未填写\" : this.state.phone\r\n                                            }\r\n                                        </span>}\r\n                                    </li>\r\n                                    <li className=\"dis-flx align-items-center\">\r\n                                        <i className=\"iconfont icon-qq text-dc3 mr-10 fon-20\"></i>\r\n                                    {editorStatus ? <input value={this.state.qq} name=\"qq\" className=\"input-bottom-line pl-11\" placeholder=\"qq\" onChange={(e) => this.inputChange(e)} /> : <span className=\"fon-13 text-626 fon-w-500\">\r\n                                            {\r\n                                                this.state.qq === \"\" ? \"未填写\" : this.state.qq\r\n                                            }\r\n                                        </span>}\r\n                                    </li>\r\n                                    <li className=\"dis-flx align-items-center\">\r\n                                        <i className=\"iconfont icon-weixin text-28a mr-10 fon-20\"></i>\r\n                                    {editorStatus ? <input value={this.state.wx} name=\"wx\" className=\"input-bottom-line pl-11\" placeholder=\"微信\" onChange={(e) => this.inputChange(e)} /> : <span className=\"fon-13 text-626 fon-w-500\">\r\n                                            {\r\n                                                this.state.wx === \"\" ? \"未填写\" : this.state.wx\r\n                                            }\r\n                                        </span>}\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </Col>\r\n                        <Col span={16}>\r\n                            <div className=\"send-notice-card w100 box-sd pd-17 bg-fff\">\r\n                                <div className=\"title fon-w-500 pb-14 bd-bottom mb-15\"><strong>发布通知</strong></div>\r\n                                <Editor ref=\"editor\"\r\n                                    icons={icons}\r\n                                    value={this.state.content} defaultValue=\"<p>React Umeditor</p>\"\r\n                                    onChange={this.handleChange.bind(this)}\r\n                                    plugins={plugins} />\r\n                                <button className=\"send out-line-none mt-30\">发布</button>\r\n                            </div>\r\n                            <div className=\"notice-card w100 box-sd pd-17 bg-fff\">\r\n                                <div className=\"title fon-w-500 pb-14 bd-bottom mb-15\"><strong>系统通知</strong></div>\r\n                                <ul>\r\n                                    <li className=\"dis-flx align-items-center bd-bottom\">\r\n                                        <img className=\"\" src={Icon} alt=\"\" />\r\n                                        <div>\r\n                                            <h2 className=\"mb-0\">Martin smith </h2>\r\n                                            <p className=\"fon-13 text-626 line-clamp2\">Create tailor-cut websites with the exclusive </p>\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users;","E:\\zm\\ThatYear\\gift-react\\src\\pages\\order\\orderDetail.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\demo.jsx",[],"E:\\zm\\ThatYear\\gift-react\\src\\pages\\goods\\goodsDetail.jsx",["136","137","138","139","140"],"import React from 'react';\r\n// 样式\r\nimport '../../css/goodsDetail.less';\r\nimport GoodsImg from '../../assets/images/product-4.jpg';\r\nimport UploadIcon from '../../assets/icon/upload.png';\r\n// antd 组件\r\nimport { Row, Col, Breadcrumb, Rate, Divider, Form, Input, Upload, Radio, Button } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport Editor from 'react-umeditor';\r\n// 图片库组件\r\nimport PicLibrary from '../../components/picLibrary';\r\nclass Describe extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileList: [{\r\n                uid: '-1',\r\n                name: 'image.png',\r\n                status: 'done',\r\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\r\n            }],\r\n            goodsStyle: 'single',\r\n            goodsInventoryCalculate: 'xd',\r\n            // 编辑器\r\n            content: \"\",\r\n            goodsState: \"shelves\",\r\n            // 图片库\r\n            picLibraryStatus: false,\r\n            // 规格\r\n            spec: false,\r\n            specName: \"\",\r\n            specVal: \"\",\r\n            specAttrList: [],\r\n            newSpecVal: \"\",\r\n            newSpecValIndex: 0\r\n        }\r\n        this.radioHandle = this.radioHandle.bind(this);\r\n        this.picLibraryBackStatus = this.picLibraryBackStatus.bind(this);\r\n        this.picLibraryStatusChange = this.picLibraryStatusChange.bind(this);\r\n        this.addSpec = this.addSpec.bind(this);\r\n        this.specConfirm = this.specConfirm.bind(this);\r\n        this.specCancel = this.specCancel.bind(this);\r\n        this.iptHandle = this.iptHandle.bind(this);\r\n        this.addSpecVal = this.addSpecVal.bind(this);\r\n        this.countSum = this.countSum.bind(this);\r\n        this.getSpecAttr = this.getSpecAttr.bind(this);\r\n        this.showTd = this.showTd.bind(this);\r\n    }\r\n    // 单选按钮\r\n    radioHandle(name, e) {\r\n        console.log('name', name);\r\n        console.log('radio1 checked', e.target.value);\r\n        console.log('e', e);\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    // 输入框\r\n    iptHandle(e, index) {\r\n        let val = e.target.value;\r\n        console.log(\"name\", e.target.name)\r\n        this.setState({\r\n            [e.target.name]: val,\r\n            newSpecValIndex: index\r\n        })\r\n    }\r\n    // 编辑器\r\n    handleChange(content) {\r\n        this.setState({\r\n            content: content\r\n        })\r\n    }\r\n    getIcons() {\r\n        var icons = [\r\n            \"source | undo redo | bold italic underline strikethrough fontborder emphasis | \",\r\n            \"paragraph fontfamily fontsize | superscript subscript | \",\r\n            \"forecolor backcolor | removeformat | insertorderedlist insertunorderedlist | selectall | \",\r\n            \"cleardoc  | indent outdent | justifyleft justifycenter justifyright | touppercase tolowercase | \",\r\n            \"horizontal date time  | image emotion spechars | inserttable\"\r\n        ]\r\n        return icons;\r\n    }\r\n    getPlugins() {\r\n        return {\r\n            \"image\": {\r\n                \"uploader\": {\r\n                    \"name\": \"file\",\r\n                    \"url\": \"/api/upload\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 图片库=>数据返回\r\n    picLibraryBackStatus(data) {\r\n        this.setState({\r\n            picLibraryStatus: !data\r\n        })\r\n    }\r\n    picLibraryStatusChange() {\r\n        this.setState({ picLibraryStatus: true });\r\n    }\r\n    // 商品规格=>添加\r\n    addSpec() {\r\n        this.setState({\r\n            spec: true\r\n        })\r\n    }\r\n    // 商品规格=> 确认\r\n    specConfirm() {\r\n        let specAttrList = this.state.specAttrList;\r\n        let attrObj = {\r\n            specName: this.state.specName,\r\n            children: [\r\n                { attr: this.state.specVal }\r\n            ]\r\n        }\r\n        specAttrList.push(attrObj)\r\n        this.setState({\r\n            spec: false,\r\n            specAttrList: specAttrList,\r\n            specName: \"\",\r\n            specVal: \"\",\r\n        })\r\n        console.log('specAttrList', specAttrList)\r\n    }\r\n    // 商品规格=> 取消\r\n    specCancel() {\r\n        this.setState({\r\n            spec: false\r\n        })\r\n    }\r\n    // 添加规格值\r\n    addSpecVal(index) {\r\n        if (this.state.newSpecVal != \"\" && this.state.newSpecValIndex === index) {\r\n            let specAttrList = this.state.specAttrList;\r\n            specAttrList[index].children.push({ attr: this.state.newSpecVal })\r\n            this.setState({ specAttrList: specAttrList, newSpecVal: \"\" })\r\n        } else {\r\n            alert(\"您为空\")\r\n        }\r\n    }\r\n    // 计算属性的乘积(获取配对的可能性)\r\n    countSum(specIndex) {\r\n        console.log(\"specList\", this.state.specAttrList);\r\n        let num = 1;\r\n        this.state.specAttrList.forEach((item, index) => {\r\n            if (index >= specIndex && item.children.length) {\r\n                num *= item.children.length;\r\n            }\r\n        });\r\n        return num;\r\n    }\r\n    /**\r\n     * 根据传入的属性值，拿到相应规格的属性\r\n     * @param specIndex\r\n     * @param index 所有属性在遍历时的序号\r\n     * @returns {string}\r\n     */\r\n    getSpecAttr(specIndex, index) {\r\n        // 获取当前规格项目下的属性值\r\n        let specAttrList = this.state.specAttrList;\r\n        const currentValues = specAttrList[specIndex].children;\r\n        // 判断是否是最后一个规格项目\r\n        let indexCopy = (specAttrList[specIndex + 1] && specAttrList[specIndex + 1].children.length)\r\n            ? index / this.countSum(specIndex + 1)\r\n            : index;\r\n        const i = Math.floor(indexCopy % currentValues.length);\r\n        return (i.toString() !== 'NaN') ? currentValues[i] : '';\r\n    }\r\n    /**\r\n      * 根据传入的条件，来判断是否显示该td\r\n      * [如果当前项目下没有属性，则不显示]\r\n      * @param specIndex\r\n      * @param index\r\n      * @returns {boolean}\r\n      */\r\n    showTd(specIndex, index) {\r\n        if (!this.state.specAttrList[specIndex]) {\r\n            return false;\r\n        } else if (index % this.countSum(specIndex + 1) === 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    render() {\r\n        // 表单提交成功\r\n        const onFinish = (values) => {\r\n            console.log('Success:', values);\r\n        };\r\n        // 表单提交失败\r\n        const onFinishFailed = (errorInfo) => {\r\n            console.log('Failed:', errorInfo);\r\n        };\r\n        // 商品规格\r\n        const goodsStyleOptions = [\r\n            { label: '单规格', value: 'single' },\r\n            { label: '多规格', value: 'double' }\r\n        ];\r\n        const goodsInventoryOptions = [\r\n            { label: '下单减库存', value: 'xd' },\r\n            { label: '付款减库存', value: 'fk' }\r\n        ]\r\n        const goodsStateOptions = [\r\n            { label: '上架', value: 'shelves' },\r\n            { label: '下架', value: 'theShelves' }\r\n        ];\r\n        // 编辑器\r\n        var icons = this.getIcons();\r\n        var plugins = this.getPlugins();\r\n        // 规格按钮\r\n        let specBtn\r\n        if (this.state.spec) {\r\n            specBtn = <div className=\"spec-btn-box dis-flx\">\r\n                <Form.Item>\r\n                    <Button size=\"small\" block onClick={this.specCancel}>取消</Button>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button size=\"small\" type=\"primary\" onClick={this.specConfirm} style={{ marginLeft: \"15px\" }}>确定</Button>\r\n                </Form.Item>\r\n            </div>\r\n        } else {\r\n            specBtn = <div className=\"spec-btn-box\">\r\n                <Form.Item>\r\n                    <Button onClick={this.addSpec}>添加规格</Button>\r\n                </Form.Item>\r\n            </div>\r\n        }\r\n        // 规格属性\r\n        let specAttrList = this.state.specAttrList;\r\n        let specAttrNodesItem = specAttrList.map((item, index) => {\r\n            return (\r\n                <React.Fragment key={index}>\r\n                    <div className=\"spec-attr-box\">\r\n                        <div className=\"name\">\r\n                            {item.specName}\r\n                            <div className=\"delete-cover\"></div>\r\n                        </div>\r\n                        <div className=\"val-box\">\r\n                            {item.children.map((attrValItem, attrIndexItem) => {\r\n                                return (\r\n                                    <React.Fragment key={attrIndexItem}>\r\n                                        <ul>\r\n                                            <li className=\"val\">\r\n                                                {attrValItem.attr}\r\n                                                <div className=\"delete-cover\"></div>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </React.Fragment>\r\n                                )\r\n                            })}\r\n                            <div className=\"add-val-box\">\r\n                                <input name=\"newSpecVal\" onChange={(e) => this.iptHandle(e, index)} />\r\n                                <div className=\"btn\" onClick={() => this.addSpecVal(index)}>添加</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        })\r\n        // 规格表格\r\n        let renderSpec = []\r\n        // 表格合并\r\n        for (let i = 0; i < this.countSum(0); i++) {\r\n            renderSpec.push(\r\n                <tr className=\"spec-table-tbody-tr\" key={i}>\r\n                    {this.state.specAttrList.length > 0 && this.state.specAttrList.map((item, index) => {\r\n                        if (this.showTd(index, i)) {\r\n                            let tagName = this.getSpecAttr(index, i);\r\n                            let n = index + 1;\r\n                            let rowSpan = this.countSum(n);\r\n                            return <td className=\"spec-table-tbody-td\" rowSpan={rowSpan} key={index}>{tagName.attr}</td>\r\n                        }\r\n                    })}\r\n                    <td className=\"spec-table-tbody-td\">\r\n                        <div className=\"img\" onClick={this.picLibraryStatusChange}>+</div>\r\n                    </td>\r\n                    <td className=\"spec-table-tbody-td\">\r\n                        <input className=\"ipt\" type=\"number\" />\r\n                    </td>\r\n                    <td className=\"spec-table-tbody-td\">\r\n                        <input className=\"ipt\" type=\"number\" />\r\n                    </td>\r\n                    <td className=\"spec-table-tbody-td\">\r\n                        <input className=\"ipt\" type=\"number\" />\r\n                    </td>\r\n                    <td className=\"spec-table-tbody-td\">\r\n                        <input className=\"ipt\" type=\"number\" />\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n                {/* 图片库组件 */}\r\n                {this.state.picLibraryStatus ? <PicLibrary picLibraryStatus={this.state.picLibraryStatus} picLibraryBackStatus={this.picLibraryBackStatus} /> : ''}\r\n                <div className=\"tab-obj pd-17\">\r\n                    <Form\r\n                        name=\"basic\"\r\n                        initialValues={{ remember: true }}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}>\r\n                        <h3 className=\"page-set-title\">基本信息</h3>\r\n                        <Divider />\r\n                        <Form.Item label=\"商品名称\" name=\"goodsName\">\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品分类\" name=\"goodsClassify\">\r\n                            <select className=\"form-select w100\" name=\"\" id=\"\">\r\n                                <option value=\"\">1</option>\r\n                                <option value=\"\">2</option>\r\n                                <option value=\"\">3</option>\r\n                            </select>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品图片\" name=\"goodsPic\">\r\n                            <div className=\"fromControlFile\" onClick={this.picLibraryStatusChange}>\r\n                                <img src={UploadIcon} alt=\"\" />\r\n                                <p className=\"fon-13 text-626\"> 添加图片</p>\r\n                            </div>\r\n                            <div className=\"prompt text-6c7 fon-12 mt-10\">尺寸750x750像素比，大小2M以下</div>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品描述\" name=\"goodsPic\">\r\n                            <Input />\r\n                            <div className=\"prompt text-6c7 fon-12 mt-10\">选填，商品卖点简述，例如：此款商品美观大方 性价比较高 不容错过</div>\r\n                        </Form.Item>\r\n                        <h3 className=\"page-set-title\">规格/库存</h3>\r\n                        <Divider />\r\n                        <Form.Item label=\"商品规格\" name=\"goodsStyle\">\r\n                            <Radio.Group name=\"goodsStyle\" options={goodsStyleOptions} onChange={(e) => this.radioHandle(\"goodsStyle\", e)} defaultValue={this.state.goodsStyle} />\r\n                        </Form.Item>\r\n                        <div className={this.state.goodsStyle === 'double' ? 'goods-spec-active pd-20 mb-30' : \"goods-spec pd-20 mb-30\"}>\r\n                            {/* 多规格属性 */}\r\n                            {specAttrNodesItem}\r\n                            {/* 多规格输入框 */}\r\n                            <div className={this.state.spec ? \"spec-box-active\" : \"spec-box\"}>\r\n                                <Form.Item label=\"规格名\" name=\"specName\" rules={[{ required: true, message: '亲，您还没有输入规格名称哦！' }]}>\r\n                                    <Input style={{ width: \"30%\" }} name=\"specName\" placeholder=\"请输入规格名称\" onChange={(e) => this.iptHandle(e)} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"规格值\" name=\"specVal\" rules={[{ required: true, message: '亲，您还没有输入规格名称哦！' }]}>\r\n                                    <Input style={{ width: \"30%\" }} name=\"specVal\" placeholder=\"请输入规格值\" onChange={(e) => this.iptHandle(e)} />\r\n                                </Form.Item>\r\n                            </div>\r\n                            {/* 多规格按钮 */}\r\n                            {specBtn}\r\n                            {/* 多规格表格 */}\r\n                            <table className=\"spec-table\">\r\n                                <thead align=\"center\">\r\n                                    <tr className=\"spec-table-thead-tr\">\r\n                                        {specAttrList.map((item, index) => {\r\n                                            return (\r\n                                                <React.Fragment key={index}>\r\n                                                    <th className=\"spec-table-thead-th\">{item.specName}</th>\r\n                                                </React.Fragment>\r\n                                            )\r\n                                        })}\r\n                                        <th className=\"spec-table-thead-th\">规格图片</th>\r\n                                        <th className=\"spec-table-thead-th\">商品价格</th>\r\n                                        <th className=\"spec-table-thead-th\">划线价格</th>\r\n                                        <th className=\"spec-table-thead-th\">库存</th>\r\n                                        <th className=\"spec-table-thead-th\">销量</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody align=\"center\">\r\n                                    {renderSpec}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"goodsStyleBox\">\r\n                            <Form.Item label=\"商品价格\" name=\"goodsPrice\">\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item label=\"划线价格\" name=\"goodsLineMoney\">\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item label=\"现有库存\" name=\"goodsInventory\">\r\n                                <Input />\r\n                            </Form.Item>\r\n                            {/* <Form.Item label=\"商品已购数量\" name=\"buyGoodsNum\">\r\n                                <Input />\r\n                            </Form.Item> */}\r\n                            <Form.Item label=\"库存计算\" name=\"goodsInventoryCalculate\">\r\n                                <Radio.Group options={goodsInventoryOptions} onChange={(e) => this.radioHandle(\"goodsInventoryCalculate\", e)} defaultValue={this.state.goodsInventoryCalculate} />\r\n                            </Form.Item>\r\n                        </div>\r\n                        <h3 className=\"page-set-title\">商品详情</h3>\r\n                        <Divider />\r\n                        <Editor ref=\"editor\"\r\n                            icons={icons}\r\n                            value={this.state.content} defaultValue=\"<p>React Umeditor</p>\"\r\n                            onChange={this.handleChange.bind(this)}\r\n                            plugins={plugins} />\r\n                        <h3 className=\"page-set-title mt-20\">其他</h3>\r\n                        <Divider />\r\n                        <Form.Item label=\"线上状态\" name=\"goodsState\">\r\n                            <Radio.Group options={goodsStateOptions} onChange={(e) => this.radioHandle(\"goodsStyle\", e)} defaultValue={this.state.goodsState} />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"初始销量\" name=\"originSales\">\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button className=\"pull-right\" type=\"primary\" htmlType=\"submit\">保存</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nclass Comments extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"tab-obj pd-17\">\r\n                <ul>\r\n                    <li className=\"tab-obj-item dis-flx\">\r\n                        <div className=\"reviews-user-pic mr-20\">\r\n                            <img className=\"dis-block\" src={GoodsImg} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"reviews pd-15 \">\r\n                            <p>\r\n                                <strong className=\"fon-w-700 fon-16 text-626\">Melissa</strong>\r\n                                <span className=\"fon-w-500 text-626\"> - July 5, 2018</span>\r\n                            </p>\r\n                            <Rate className=\"text-84b fon-15 mt-10 mb-10\" allowHalf defaultValue={2.5} />\r\n                            <p className=\"fon-w-500 text-626\">Al-Alif and Company was established with the goal of selling the finest hookah products available</p>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"tab-obj-item dis-flx\">\r\n                        <div className=\"reviews-user-pic mr-20\">\r\n                            <img className=\"dis-block\" src={GoodsImg} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"reviews pd-15 \">\r\n                            <p>\r\n                                <strong className=\"fon-w-700 fon-16 text-626\">Melissa</strong>\r\n                                <span className=\"fon-w-500 text-626\"> - July 5, 2018</span>\r\n                            </p>\r\n                            <Rate className=\"text-84b fon-15 mt-10 mb-10\" allowHalf defaultValue={2.5} />\r\n                            <p className=\"fon-w-500 text-626\">Al-Alif and Company was established with the goal of selling the finest hookah products available</p>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass GoodsDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tabId: 1\r\n        }\r\n        this.tabChange = this.tabChange.bind(this);\r\n    }\r\n    tabChange(e) {\r\n        this.setState({\r\n            tabId: Number(e.target.dataset.id)\r\n        })\r\n    }\r\n    render() {\r\n        let tabObjMain\r\n        switch (Number(this.state.tabId)) {\r\n            case 1:\r\n                tabObjMain = <Describe></Describe>;\r\n                break;\r\n            case 2:\r\n                tabObjMain = <Comments></Comments>;\r\n            default:\r\n                break;\r\n        }\r\n        return (\r\n            <div className=\"main\">\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <h3><strong>商品详情</strong></h3>\r\n                    </Col>\r\n                    <Col span={12} className=\"text-align-right\">\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item>系统</Breadcrumb.Item>\r\n                            <Breadcrumb.Item>商品详情</Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <div className=\"detail-card bg-fff pd-17 w100 box-sd\">\r\n                            <Row>\r\n                                <Col span={8}>\r\n                                    <img className=\"max-wid-100 dis-block\" src={GoodsImg} alt=\"\" />\r\n                                </Col>\r\n                                <Col span={16}>\r\n                                    <h2 className=\"line-clamp2 goods-name mt-15 mb-15 fon-w-500\">Apple® Watch Series 3 (GPS) 42mm</h2>\r\n                                    <p className=\"fon-13 text-626\">描述：Measure your workouts, from running and cycling to new high-intensity interval training. Track and share your daily activity, and get the motivation you need to hit your goals. Better manage everyday stress and monitor your heart rate more effectively.</p>\r\n                                    <ul className=\"goods-attr\">\r\n                                        <li>\r\n                                            <span className=\"attr-name fon-w-700 fon-15 text-626\"><b>库存 :-</b></span>\r\n                                            <span className=\"attr-name text-626\">999</span>\r\n                                        </li>\r\n                                        <li>\r\n                                            <span className=\"attr-name fon-w-700 fon-15 text-626\"><b>类型 :-</b></span>\r\n                                            <span className=\"attr-name text-626\">科技产品</span>\r\n                                        </li>\r\n                                        <li>\r\n                                            <span className=\"attr-name fon-w-700 fon-15 text-626\"><b>价格 :-</b></span>\r\n                                            <span className=\"attr-name text-626\">$ 999</span>\r\n                                        </li>\r\n                                        <li>\r\n                                            <span className=\"attr-name fon-w-700 fon-15 text-626\"><b>销量 :-</b></span>\r\n                                            <span className=\"attr-name text-626\">999</span>\r\n                                        </li>\r\n                                        <li>\r\n                                            <span className=\"attr-name fon-w-700 fon-15 text-626\"><b>状态 :-</b></span>\r\n                                            <span className=\"attr-name text-626\">上架</span>\r\n                                        </li>\r\n                                        <li>\r\n                                            <span className=\"attr-name fon-w-700 fon-15 text-626\"><b>评分 :-</b></span>\r\n                                            <Rate className=\"text-84b fon-15\" allowHalf defaultValue={2.5} />\r\n                                        </li>\r\n                                    </ul>\r\n                                    <div className=\"tab dis-flx align-items-center\">\r\n                                        <div className={this.state.tabId === 1 ? 'tab-item tab-item-active' : 'tab-item'} data-id={1} onClick={this.tabChange}>\r\n                                            详细\r\n                                        </div>\r\n                                        <div className={this.state.tabId === 2 ? 'tab-item tab-item-active' : 'tab-item'} data-id={2} onClick={this.tabChange}>\r\n                                            评论\r\n                                        </div>\r\n                                    </div>\r\n                                    {tabObjMain}\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GoodsDetail;","E:\\zm\\ThatYear\\gift-react\\src\\siteinfo.js",[],"E:\\zm\\ThatYear\\gift-react\\src\\components\\picLibrary.jsx",["141","142","143","144","145"],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":23},{"ruleId":"154","severity":1,"message":"155","line":31,"column":26,"nodeType":"156","messageId":"157","endLine":31,"endColumn":28},{"ruleId":"154","severity":1,"message":"155","line":31,"column":49,"nodeType":"156","messageId":"157","endLine":31,"endColumn":51},{"ruleId":"158","severity":1,"message":"159","line":37,"column":41,"nodeType":"160","endLine":37,"endColumn":62},{"ruleId":"158","severity":1,"message":"159","line":65,"column":37,"nodeType":"160","endLine":65,"endColumn":58},{"ruleId":"158","severity":1,"message":"159","line":75,"column":37,"nodeType":"160","endLine":75,"endColumn":58},{"ruleId":"150","severity":1,"message":"161","line":6,"column":78,"nodeType":"152","messageId":"153","endLine":6,"endColumn":93},{"ruleId":"162","severity":1,"message":"163","line":144,"column":9,"nodeType":"164","messageId":"165","endLine":182,"endColumn":10},{"ruleId":"162","severity":1,"message":"163","line":150,"column":33,"nodeType":"164","messageId":"165","endLine":170,"endColumn":34},{"ruleId":"166","severity":1,"message":"167","line":42,"column":1,"nodeType":"168","endLine":45,"endColumn":2},{"ruleId":"158","severity":1,"message":"159","line":32,"column":33,"nodeType":"160","endLine":32,"endColumn":54},{"ruleId":"169","severity":1,"message":"170","line":50,"column":13,"nodeType":"171","messageId":"157","endLine":50,"endColumn":27},{"ruleId":"172","severity":1,"message":"173","line":142,"column":13,"nodeType":"174","messageId":"157","endLine":144,"endColumn":23},{"ruleId":"175","severity":1,"message":"176","line":239,"column":13,"nodeType":"174","messageId":"177","endLine":240,"endColumn":23},{"ruleId":"154","severity":1,"message":"155","line":138,"column":35,"nodeType":"156","messageId":"157","endLine":138,"endColumn":37},{"ruleId":"178","severity":1,"message":"179","line":264,"column":102,"nodeType":"180","messageId":"181","endLine":264,"endColumn":104},{"ruleId":"182","severity":1,"message":"183","line":178,"column":36,"nodeType":"184","messageId":"185","endLine":178,"endColumn":37},{"ruleId":"150","severity":1,"message":"186","line":7,"column":60,"nodeType":"152","messageId":"153","endLine":7,"endColumn":66},{"ruleId":"150","severity":1,"message":"187","line":8,"column":8,"nodeType":"152","messageId":"153","endLine":8,"endColumn":15},{"ruleId":"154","severity":1,"message":"155","line":134,"column":35,"nodeType":"156","messageId":"157","endLine":134,"endColumn":37},{"ruleId":"178","severity":1,"message":"179","line":267,"column":102,"nodeType":"180","messageId":"181","endLine":267,"endColumn":104},{"ruleId":"175","severity":1,"message":"176","line":466,"column":13,"nodeType":"174","messageId":"177","endLine":467,"endColumn":23},{"ruleId":"150","severity":1,"message":"188","line":2,"column":17,"nodeType":"152","messageId":"153","endLine":2,"endColumn":23},{"ruleId":"150","severity":1,"message":"189","line":2,"column":43,"nodeType":"152","messageId":"153","endLine":2,"endColumn":50},{"ruleId":"190","severity":1,"message":"191","line":74,"column":21,"nodeType":"192","endLine":74,"endColumn":29},{"ruleId":"193","severity":1,"message":"194","line":347,"column":111,"nodeType":"156","messageId":"195","endLine":347,"endColumn":112},{"ruleId":"193","severity":1,"message":"194","line":347,"column":130,"nodeType":"156","messageId":"195","endLine":347,"endColumn":131},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'HeaderMoudleCss' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MessageOutlined' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'navInsTopRound'.","ObjectExpression","no-duplicate-case","Duplicate case label.","SwitchCase","no-fallthrough","Expected a 'break' statement before 'default'.","default","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Upload' is defined but never used.","'ImgCrop' is defined but never used.","'Button' is defined but never used.","'message' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation"]